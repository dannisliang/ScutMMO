// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffer/ClientToServerCmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoBuffer/ClientToServerCmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoBuf {

namespace {

const ::google::protobuf::EnumDescriptor* ClientToServerCmd_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoBuffer_2fClientToServerCmd_2eproto() {
  protobuf_AddDesc_ProtoBuffer_2fClientToServerCmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoBuffer/ClientToServerCmd.proto");
  GOOGLE_CHECK(file != NULL);
  ClientToServerCmd_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoBuffer_2fClientToServerCmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_ProtoBuffer_2fClientToServerCmd_2eproto() {
}

void protobuf_AddDesc_ProtoBuffer_2fClientToServerCmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#ProtoBuffer/ClientToServerCmd.proto\022\010P"
    "rotoBuf*\372,\n\021ClientToServerCmd\022 \n\034CLIENT_"
    "TO_SERVER_LOGIN_BEGIN\020\001\022\030\n\024CLIENT_TO_LOG"
    "IN_PING\020\002\022!\n\035CLIENT_TO_LOGIN_CHECK_VERSI"
    "ON\020\003\022!\n\035CLIENT_TO_LOGIN_ACCOUNT_LOGIN\020\004\022"
    "\037\n\033CLIENT_TO_LOGIN_BREAK_LOGIN\020\005\022\030\n\024CLIE"
    "NT_TO_LOGIC_PING\020\n\022\035\n\031CLIENT_TO_LOGIC_RE"
    "CONNECT\020\013\022!\n\035CLIENT_TO_LOGIC_RESET_TIMEO"
    "UT\020\014\022%\n!CLIENT_TO_LOGIC_LOGIN_LOGICSERVE"
    "R\020\r\022&\n\"CLIENT_TO_LOGIC_GET_CHARACTER_LIS"
    "T\020\016\022$\n CLIENT_TO_LOGIC_CREATE_CHARACTER\020"
    "\017\022!\n\035CLIENT_TO_LOGIC_DEL_CHARACTER\020\020\022\037\n\033"
    "CLIENT_TO_LOGIC_ENTER_WORLD\020\021\022\037\n\033CLIENT_"
    "TO_LOGIC_LEAVE_WORLD\020\022\022\036\n\032CLIENT_TO_SERV"
    "ER_LOGIN_END\0202\022!\n\035CLIENT_TO_SERVER_SYSTE"
    "M_BEGIN\020<\022)\n%CLIENT_TO_LOGIC_REDIRECT_CE"
    "NTERSERVER\020R\022\037\n\033CLIENT_TO_SERVER_SYSTEM_"
    "END\020d\022\"\n\035CLIENT_TO_SERVER_PLAYER_BEGIN\020\310"
    "\001\022&\n!CLIENT_TO_LOGIC_PLAYER_ATRR_POINT\020\311"
    "\001\022,\n\'CLIENT_TO_LOGIC_PLAYER_ATRR_CLEAR_P"
    "OINT\020\312\001\022&\n!CLIENT_TO_LOGIC_PLAYER_AUTO_P"
    "OINT\020\313\001\022 \n\033CLIENT_TO_SERVER_PLAYER_END\020\322"
    "\001\022!\n\034CLIENT_TO_SERVER_SKILL_BEGIN\020\334\001\022\036\n\031"
    "CLIENT_TO_LOGIC_SKILL_USE\020\335\001\022%\n CLIENT_T"
    "O_LOGIC_SKILL_CHARGE_END\020\336\001\022\'\n\"CLIENT_TO"
    "_LOGIC_SKILL_LEVEL_UP_REQ\020\337\001\022\037\n\032CLIENT_T"
    "O_LOGIC_SKILL_STOP\020\340\001\022\037\n\032CLIENT_TO_SERVE"
    "R_SKILL_END\020\346\001\022#\n\036CLIENT_TO_SERVER_PACKA"
    "GE_BEGIN\020\360\001\022!\n\034CLIENT_TO_LOGIC_PACKAGE_I"
    "NFO\020\361\001\022!\n\034CLIENT_TO_LOGIC_PACKAGE_SORT\020\362"
    "\001\022!\n\034CLIENT_TO_LOGIC_PACKAGE_SELL\020\363\001\022 \n\033"
    "CLIENT_TO_LOGIC_PACKAGE_USE\020\364\001\022 \n\033CLIENT"
    "_TO_LOGIC_EQUIP_STREN\020\365\001\022\'\n\"CLIENT_TO_LO"
    "GIC_EQUIP_ONEKEY_STREN\020\366\001\022!\n\034CLIENT_TO_L"
    "OGIC_EQUIP_REFINE\020\367\001\022\"\n\035CLIENT_TO_LOGIC_"
    "EQUIP_DIGHOLE\020\370\001\022 \n\033CLIENT_TO_LOGIC_EQUI"
    "P_INLAY\020\371\001\022\"\n\035CLIENT_TO_LOGIC_EQUIP_TAKE"
    "OFF\020\372\001\022\"\n\035CLIENT_TO_LOGIC_EQUIP_COMPOSE\020"
    "\373\001\022!\n\034CLIENT_TO_LOGIC_EQUIP_RECAST\020\374\001\022%\n"
    " CLIENT_TO_LOGIC_EQUIP_INLAY_HOLY\020\375\001\022\'\n\""
    "CLIENT_TO_LOGIC_EQUIP_TAKEOFF_HOLY\020\376\001\022+\n"
    "&CLIENT_TO_LOGIC_EQUIP_COMPOSE_MATERIAL\020"
    "\377\001\022&\n!CLIENT_TO_LOGIC_PLAYER_EQUIP_INFO\020"
    "\200\002\022\'\n\"CLIENT_TO_LOGIC_PLAYER_EQUIP_DRESS"
    "\020\201\002\022)\n$CLIENT_TO_LOGIC_PLAYER_EQUIP_UNDR"
    "ESS\020\202\002\022.\n)CLIENT_TO_LOGIC_PLAYER_EQUIP_O"
    "NEKEY_DRESS\020\203\002\022\'\n\"CLIENT_TO_LOGIC_PLAYER"
    "_PICKUP_DROP\020\204\002\022!\n\034CLIENT_TO_SERVER_PACK"
    "AGE_END\020\254\002\022%\n CLIENT_TO_SERVER_DUPLICATE"
    "_BEGIN\020\266\002\022#\n\036CLIENT_TO_LOGIC_DUPLICATE_I"
    "NFO\020\267\002\022$\n\037CLIENT_TO_LOGIC_DUPLICATE_ENTE"
    "R\020\270\002\022%\n CLIENT_TO_LOGIC_DUPLICATE_RESULT"
    "\020\271\002\022)\n$CLIENT_TO_LOGIC_DUPLICATE_AUTO_FI"
    "GHT\020\272\002\022&\n!CLIENT_TO_LOGIC_DUPLICATE_LOTT"
    "ERY\020\273\002\022&\n!CLIENT_TO_LOGIC_DUPLICATE_BUY_"
    "NUM\020\274\002\022%\n CLIENT_TO_LOGIC_DUPLICATE_RELI"
    "VE\020\275\002\022$\n\037CLIENT_TO_LOGIC_DUPLICATE_LEAVE"
    "\020\276\002\022)\n$CLIENT_TO_LOGIC_DUPLICATE_ENTER_A"
    "REA\020\277\002\022-\n(CLIENT_TO_LOGIC_DUPLICATE_AUTO"
    "_CHALLENGE\020\300\002\022#\n\036CLIENT_TO_SERVER_DUPLIC"
    "ATE_END\020\336\002\022 \n\033CLIENT_TO_SERVER_MOVE_BEGI"
    "N\020\350\002\022(\n#CLIENT_TO_LOGIC_SCENE_REQ_ROUTEI"
    "NFO\020\351\002\022 \n\033CLIENT_TO_LOGIC_SCENE_TRANS\020\352\002"
    "\022\'\n\"CLIENT_TO_LOGIC_SCENE_LOAD_SUCCESS\020\353"
    "\002\022(\n#CLIENT_TO_LOGIC_CHARACTER_SKILLMOVE"
    "\020\354\002\022#\n\036CLIENT_TO_LOGIC_CHARACTER_MOVE\020\355\002"
    "\022*\n%CLIENT_TO_LOGIC_CHARACTER_ROCKER_MOV"
    "E\020\356\002\022)\n$CLIENT_TO_LOGIC_CHARACTER_POS_UP"
    "DATE\020\357\002\022\036\n\031CLIENT_TO_SERVER_MOVE_END\020\206\003\022"
    "#\n\036CLIENT_TO_SERVER_MISSION_BEGIN\020\220\003\022&\n!"
    "CLIENT_TO_LOGIC_QUERY_MiSSIONLIST\020\221\003\022\"\n\035"
    "CLIENT_TO_LOGIC_ACCEPTMISSION\020\222\003\022#\n\036CLIE"
    "NT_TO_LOGIC_ABANDONMISSION\020\223\003\022\"\n\035CLIENT_"
    "TO_LOGIC_SUBMITMISSION\020\224\003\022 \n\033CLIENT_TO_L"
    "OGIC_TALKWITHNPC\020\225\003\022\'\n\"CLIENT_TO_LOGIC_G"
    "ETCAMPMISSIONINFO\020\226\003\022$\n\037CLIENT_TO_LOGIC_"
    "DICECAMPMISSION\020\227\003\022%\n CLIENT_TO_LOGIC_GE"
    "TCAMPBOXREWARD\020\230\003\022!\n\034CLIENT_TO_SERVER_MI"
    "SSION_END\020\244\003\022 \n\033CLIENT_TO_SERVER_CHAT_BE"
    "GIN\020\256\003\022\037\n\032CLIENT_TO_LOGIC_CHATMSGREQ\020\257\003\022"
    "#\n\036CLIENT_TO_CENTER_ASKOFFLINEMSG\020\260\003\022*\n%"
    "CLIENT_TO_CENTER_INTRVALASKOFFLINEMSG\020\261\003"
    "\022+\n&CLIENT_TO_CENTER_CHARACTER_DETAIL_DA"
    "TA\020\262\003\022\036\n\031CLIENT_TO_SERVER_CHAT_END\020\302\003\022\"\n"
    "\035CLIENT_TO_SERVER_FRIEND_BEGIN\020\314\003\022$\n\037CLI"
    "ENT_TO_CENTER_APPLY_RELATION\020\315\003\022$\n\037CLIEN"
    "T_TO_CENTER_AGREE_RELATION\020\316\003\022%\n CLIENT_"
    "TO_CENTER_DELETE_RELATION\020\317\003\022&\n!CLIENT_T"
    "O_CENTER_RECENT_CHAT_LIST\020\320\003\022#\n\036CLIENT_T"
    "O_CENTER_ONEKEY_FRIEND\020\321\003\022#\n\036CLIENT_TO_C"
    "ENTER_RELATION_INFO\020\322\003\022!\n\034CLIENT_TO_CENT"
    "ER_SEARCH_USER\020\323\003\022#\n\036CLIENT_TO_CENTER_GI"
    "VE_PHYSCIAL\020\324\003\022&\n!CLIENT_TO_CENTER_AllGI"
    "VE_PHYSICAL\020\325\003\022\"\n\035CLIENT_TO_CENTER_GET_P"
    "HYSICAL\020\326\003\022\'\n\"CLIENT_TO_CENTER_GET_PHYSI"
    "CAL_GIFT\020\327\003\022\037\n\032CLIENT_TO_CENTER_APPLYLIS"
    "T\020\330\003\022$\n\037CLIENT_TO_CENTER_CLEARAPPLYLIST\020"
    "\331\003\022 \n\033CLIENT_TO_SERVER_FRIEND_END\020\364\003\022!\n\034"
    "CLIENT_TO_SERVER_SCENE_BEGIN\020\376\003\022\037\n\032CLIEN"
    "T_TO_SERVER_SCENE_END\020\246\004\022 \n\033CLIENT_TO_SE"
    "RVER_MAIL_BEGIN\020\260\004\022\035\n\030CLIENT_TO_LOGIC_SE"
    "NDMAIL\020\261\004\022%\n CLIENT_TO_CENTER_GETMAILITE"
    "MLIST\020\262\004\022\035\n\030CLIENT_TO_CENTER_ASKMAIL\020\263\004\022"
    " \n\033CLIENT_TO_CENTER_DELETEMAIL\020\264\004\022\037\n\032CLI"
    "ENT_TO_CENTER_CHECKNAME\020\265\004\022\'\n\"CLIENT_TO_"
    "CENTER_GETMAILATTACHMENT\020\266\004\022*\n%CLIENT_TO"
    "_CENTER_GETALLMAILATTACHMENT\020\267\004\022\035\n\030CLIEN"
    "T_TO_CENTER_NDRMAIL\020\270\004\022\036\n\031CLIENT_TO_SERV"
    "ER_MAIL_END\020\330\004\022 \n\033CLIENT_TO_SERVER_CAMP_"
    "BEGIN\020\342\004\022\037\n\032CLIENT_TO_CENTER_CAMP_JOIN\020\343"
    "\004\022!\n\034CLIENT_TO_CENTER_CAMP_CHANGE\020\344\004\022\037\n\032"
    "CLIENT_TO_CENTER_CAMP_INFO\020\345\004\022$\n\037CLIENT_"
    "TO_CENTER_CAMP_RANK_INFO\020\346\004\022%\n CLIENT_TO"
    "_CENTER_CAMP_HONOR_INFO\020\347\004\022)\n$CLIENT_TO_"
    "CENTER_CAMP_PUBLISH_NOTICE\020\350\004\022\036\n\031CLIENT_"
    "TO_SERVER_CAMP_END\020\212\005\022\'\n\"CLIENT_TO_SERVE"
    "R_ACHIEVEMENT_BEGIN\020\274\005\022%\n CLIENT_TO_SERV"
    "ER_ACHIEVEMENTINFO\020\275\005\022*\n%CLIENT_TO_SERVE"
    "R_GETACHIEVEMENTREWARD\020\276\005\022-\n(CLIENT_TO_S"
    "ERVER_GETACHIEVEMENTBOXREWARD\020\277\005\022%\n CLIE"
    "NT_TO_SERVER_ACHIEVEMENT_END\020\320\005\022\"\n\035CLIEN"
    "T_TO_SERVER_DEPUTY_BEGIN\020\332\005\022/\n*CLIENT_TO"
    "_SERVER_DEPUTY_COLLECT_SKILL_INFO\020\333\005\022,\n\'"
    "CLIENT_TO_SERVER_DEPUTY_MAKE_SKILL_INFO\020"
    "\334\005\0222\n-CLIENT_TO_SERVER_DEPUTY_UPGRADE_CO"
    "LLECT_SKILL\020\335\005\022.\n)CLIENT_TO_SERVER_DEPUT"
    "Y_REFINE_MAKE_SKILL\020\336\005\022,\n\'CLIENT_TO_SERV"
    "ER_DEPUTY_COLLECT_OPERATE\020\337\005\022)\n$CLIENT_T"
    "O_SERVER_DEPUTY_MAKE_OPERATE\020\340\005\022 \n\033CLIEN"
    "T_TO_SERVER_DEPUTY_END\020\356\005\022\037\n\032CLIENT_TO_S"
    "ERVER_PVP_BEGIN\020\202\006\022\"\n\035CLIENT_TO_SERVER_P"
    "VP_SET_MODE\020\203\006\022\035\n\030CLIENT_TO_SERVER_PVP_E"
    "ND\020\213\006\022\"\n\035CLIENT_TO_SERVER_CENTER_BEGIN\020\214"
    "\006\022#\n\036CLIENT_TO_CENTER_GET_MALL_DATA\020\215\006\022\030"
    "\n\023CLIENT_TO_LOGIC_BUY\020\216\006\022\036\n\031CLIENT_TO_CE"
    "NTER_GET_TIME\020\217\006\022 \n\033CLIENT_TO_SERVER_CEN"
    "TER_END\020\240\006\022 \n\033CLIENT_TO_SERVER_ROOM_BEGI"
    "N\020\264\006\022 \n\033CLIENT_TO_LOGIC_ROOM_CREATE\020\265\006\022!"
    "\n\034CLIENT_TO_LOGIC_ROOM_SET_PWD\020\266\006\022\036\n\031CLI"
    "ENT_TO_LOGIC_ROOM_JOIN\020\267\006\022\'\n\"CLIENT_TO_L"
    "OGIC_ROOM_INVITE_FRIEND\020\270\006\022&\n!CLIENT_TO_"
    "LOGIC_ROOM_INVITE_REPLY\020\271\006\022\"\n\035CLIENT_TO_"
    "LOGIC_ROOM_BE_LEAVE\020\272\006\022\037\n\032CLIENT_TO_LOGI"
    "C_ROOM_LEAVE\020\273\006\022#\n\036CLIENT_TO_LOGIC_ROOM_"
    "AUTO_JOIN\020\274\006\022\036\n\031CLIENT_TO_SERVER_ROOM_EN"
    "D\020\334\006", 5804);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoBuffer/ClientToServerCmd.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoBuffer_2fClientToServerCmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoBuffer_2fClientToServerCmd_2eproto {
  StaticDescriptorInitializer_ProtoBuffer_2fClientToServerCmd_2eproto() {
    protobuf_AddDesc_ProtoBuffer_2fClientToServerCmd_2eproto();
  }
} static_descriptor_initializer_ProtoBuffer_2fClientToServerCmd_2eproto_;
const ::google::protobuf::EnumDescriptor* ClientToServerCmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientToServerCmd_descriptor_;
}
bool ClientToServerCmd_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 50:
    case 60:
    case 82:
    case 100:
    case 200:
    case 201:
    case 202:
    case 203:
    case 210:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 230:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 300:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 317:
    case 318:
    case 319:
    case 320:
    case 350:
    case 360:
    case 361:
    case 362:
    case 363:
    case 364:
    case 365:
    case 366:
    case 367:
    case 390:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 420:
    case 430:
    case 431:
    case 432:
    case 433:
    case 434:
    case 450:
    case 460:
    case 461:
    case 462:
    case 463:
    case 464:
    case 465:
    case 466:
    case 467:
    case 468:
    case 469:
    case 470:
    case 471:
    case 472:
    case 473:
    case 500:
    case 510:
    case 550:
    case 560:
    case 561:
    case 562:
    case 563:
    case 564:
    case 565:
    case 566:
    case 567:
    case 568:
    case 600:
    case 610:
    case 611:
    case 612:
    case 613:
    case 614:
    case 615:
    case 616:
    case 650:
    case 700:
    case 701:
    case 702:
    case 703:
    case 720:
    case 730:
    case 731:
    case 732:
    case 733:
    case 734:
    case 735:
    case 736:
    case 750:
    case 770:
    case 771:
    case 779:
    case 780:
    case 781:
    case 782:
    case 783:
    case 800:
    case 820:
    case 821:
    case 822:
    case 823:
    case 824:
    case 825:
    case 826:
    case 827:
    case 828:
    case 860:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

// @@protoc_insertion_point(global_scope)
