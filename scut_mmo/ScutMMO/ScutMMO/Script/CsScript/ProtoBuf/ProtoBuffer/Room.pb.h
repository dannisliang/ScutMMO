// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffer/Room.proto

#ifndef PROTOBUF_ProtoBuffer_2fRoom_2eproto__INCLUDED
#define PROTOBUF_ProtoBuffer_2fRoom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBuffer/ComProtocol.pb.h"
#include "ProtoBuffer/ClientToServerCmd.pb.h"
#include "Common/ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

class RoomMemberProto;
class RoomAllMemberProto;
class RoomProto;
class RoomDetailProto;
class Room_CreateReq;
class Room_CreateRsp;
class Room_SetPwdReq;
class Room_SetPwdRsp;
class Room_JoinReq;
class Room_JoinRsp;
class Room_InviteReq;
class Room_InviteRsp;
class Room_ReplyInviteReq;
class Room_ReplyInviteRsp;
class Room_KickReq;
class Room_KickRsp;
class Room_LeaveReq;
class Room_LeaveRsp;
class Room_AutoJoinReq;
class Room_AutoJoinRsp;
class Room_NotifyLeave;
class Room_NotifyJoin;
class Room_NotifyUpdate;
class Room_NotifyRecvInvite;
class Room_NotifyRefuse;
class Room_NotifyKick;
class Room_NotifyMemberKick;
class Room_NotifyDismiss;
class LCRoom_CreateRoom;
class LCRoom_SetPwd;
class LCRoom_Join;
class LCRoom_InviteFriend;
class LCRoom_ReplyInvite;
class LCRoom_KickRoom;
class LCRoom_LeaveRoom;
class LCRoom_AutoJoin;
class CLRoom_CharRoomNotify;

// ===================================================================

class RoomMemberProto : public ::google::protobuf::Message {
 public:
  RoomMemberProto();
  virtual ~RoomMemberProto();

  RoomMemberProto(const RoomMemberProto& from);

  inline RoomMemberProto& operator=(const RoomMemberProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomMemberProto& default_instance();

  void Swap(RoomMemberProto* other);

  // implements Message ----------------------------------------------

  RoomMemberProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomMemberProto& from);
  void MergeFrom(const RoomMemberProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 fight = 5;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 5;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // optional int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.RoomMemberProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::uint32 cid_;
  ::google::protobuf::int32 prof_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 fight_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static RoomMemberProto* default_instance_;
};
// -------------------------------------------------------------------

class RoomAllMemberProto : public ::google::protobuf::Message {
 public:
  RoomAllMemberProto();
  virtual ~RoomAllMemberProto();

  RoomAllMemberProto(const RoomAllMemberProto& from);

  inline RoomAllMemberProto& operator=(const RoomAllMemberProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomAllMemberProto& default_instance();

  void Swap(RoomAllMemberProto* other);

  // implements Message ----------------------------------------------

  RoomAllMemberProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomAllMemberProto& from);
  void MergeFrom(const RoomAllMemberProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.RoomMemberProto member = 1;
  inline int member_size() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 1;
  inline const ::ProtoBuf::RoomMemberProto& member(int index) const;
  inline ::ProtoBuf::RoomMemberProto* mutable_member(int index);
  inline ::ProtoBuf::RoomMemberProto* add_member();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RoomMemberProto >&
      member() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RoomMemberProto >*
      mutable_member();

  // @@protoc_insertion_point(class_scope:ProtoBuf.RoomAllMemberProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RoomMemberProto > member_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static RoomAllMemberProto* default_instance_;
};
// -------------------------------------------------------------------

class RoomProto : public ::google::protobuf::Message {
 public:
  RoomProto();
  virtual ~RoomProto();

  RoomProto(const RoomProto& from);

  inline RoomProto& operator=(const RoomProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomProto& default_instance();

  void Swap(RoomProto* other);

  // implements Message ----------------------------------------------

  RoomProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomProto& from);
  void MergeFrom(const RoomProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // optional uint32 dup_id = 2;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dup_id() const;
  inline void set_dup_id(::google::protobuf::uint32 value);

  // repeated int32 pwd = 3;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.RoomProto)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_dup_id();
  inline void clear_has_dup_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 dup_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static RoomProto* default_instance_;
};
// -------------------------------------------------------------------

class RoomDetailProto : public ::google::protobuf::Message {
 public:
  RoomDetailProto();
  virtual ~RoomDetailProto();

  RoomDetailProto(const RoomDetailProto& from);

  inline RoomDetailProto& operator=(const RoomDetailProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomDetailProto& default_instance();

  void Swap(RoomDetailProto* other);

  // implements Message ----------------------------------------------

  RoomDetailProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomDetailProto& from);
  void MergeFrom(const RoomDetailProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoBuf.RoomProto room = 1;
  inline bool has_room() const;
  inline void clear_room();
  static const int kRoomFieldNumber = 1;
  inline const ::ProtoBuf::RoomProto& room() const;
  inline ::ProtoBuf::RoomProto* mutable_room();
  inline ::ProtoBuf::RoomProto* release_room();
  inline void set_allocated_room(::ProtoBuf::RoomProto* room);

  // optional .ProtoBuf.RoomAllMemberProto member = 2;
  inline bool has_member() const;
  inline void clear_member();
  static const int kMemberFieldNumber = 2;
  inline const ::ProtoBuf::RoomAllMemberProto& member() const;
  inline ::ProtoBuf::RoomAllMemberProto* mutable_member();
  inline ::ProtoBuf::RoomAllMemberProto* release_member();
  inline void set_allocated_member(::ProtoBuf::RoomAllMemberProto* member);

  // @@protoc_insertion_point(class_scope:ProtoBuf.RoomDetailProto)
 private:
  inline void set_has_room();
  inline void clear_has_room();
  inline void set_has_member();
  inline void clear_has_member();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::RoomProto* room_;
  ::ProtoBuf::RoomAllMemberProto* member_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static RoomDetailProto* default_instance_;
};
// -------------------------------------------------------------------

class Room_CreateReq : public ::google::protobuf::Message {
 public:
  Room_CreateReq();
  virtual ~Room_CreateReq();

  Room_CreateReq(const Room_CreateReq& from);

  inline Room_CreateReq& operator=(const Room_CreateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CreateReq& default_instance();

  void Swap(Room_CreateReq* other);

  // implements Message ----------------------------------------------

  Room_CreateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CreateReq& from);
  void MergeFrom(const Room_CreateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dup_id = 1;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::int32 dup_id() const;
  inline void set_dup_id(::google::protobuf::int32 value);

  // repeated int32 pwd = 2;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 2;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_CreateReq)
 private:
  inline void set_has_dup_id();
  inline void clear_has_dup_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;
  ::google::protobuf::int32 dup_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_CreateReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_CreateRsp : public ::google::protobuf::Message {
 public:
  Room_CreateRsp();
  virtual ~Room_CreateRsp();

  Room_CreateRsp(const Room_CreateRsp& from);

  inline Room_CreateRsp& operator=(const Room_CreateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_CreateRsp& default_instance();

  void Swap(Room_CreateRsp* other);

  // implements Message ----------------------------------------------

  Room_CreateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_CreateRsp& from);
  void MergeFrom(const Room_CreateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional .ProtoBuf.RoomDetailProto detail = 2;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::ProtoBuf::RoomDetailProto& detail() const;
  inline ::ProtoBuf::RoomDetailProto* mutable_detail();
  inline ::ProtoBuf::RoomDetailProto* release_detail();
  inline void set_allocated_detail(::ProtoBuf::RoomDetailProto* detail);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_CreateRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::RoomDetailProto* detail_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_CreateRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_SetPwdReq : public ::google::protobuf::Message {
 public:
  Room_SetPwdReq();
  virtual ~Room_SetPwdReq();

  Room_SetPwdReq(const Room_SetPwdReq& from);

  inline Room_SetPwdReq& operator=(const Room_SetPwdReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SetPwdReq& default_instance();

  void Swap(Room_SetPwdReq* other);

  // implements Message ----------------------------------------------

  Room_SetPwdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SetPwdReq& from);
  void MergeFrom(const Room_SetPwdReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 pwd = 2;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 2;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_SetPwdReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_SetPwdReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_SetPwdRsp : public ::google::protobuf::Message {
 public:
  Room_SetPwdRsp();
  virtual ~Room_SetPwdRsp();

  Room_SetPwdRsp(const Room_SetPwdRsp& from);

  inline Room_SetPwdRsp& operator=(const Room_SetPwdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_SetPwdRsp& default_instance();

  void Swap(Room_SetPwdRsp* other);

  // implements Message ----------------------------------------------

  Room_SetPwdRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_SetPwdRsp& from);
  void MergeFrom(const Room_SetPwdRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 pwd = 3;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_SetPwdRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_SetPwdRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_JoinReq : public ::google::protobuf::Message {
 public:
  Room_JoinReq();
  virtual ~Room_JoinReq();

  Room_JoinReq(const Room_JoinReq& from);

  inline Room_JoinReq& operator=(const Room_JoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_JoinReq& default_instance();

  void Swap(Room_JoinReq* other);

  // implements Message ----------------------------------------------

  Room_JoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_JoinReq& from);
  void MergeFrom(const Room_JoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dup_id = 1;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 1;
  inline ::google::protobuf::uint32 dup_id() const;
  inline void set_dup_id(::google::protobuf::uint32 value);

  // required uint32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // repeated int32 pwd = 3;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_JoinReq)
 private:
  inline void set_has_dup_id();
  inline void clear_has_dup_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dup_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_JoinReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_JoinRsp : public ::google::protobuf::Message {
 public:
  Room_JoinRsp();
  virtual ~Room_JoinRsp();

  Room_JoinRsp(const Room_JoinRsp& from);

  inline Room_JoinRsp& operator=(const Room_JoinRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_JoinRsp& default_instance();

  void Swap(Room_JoinRsp* other);

  // implements Message ----------------------------------------------

  Room_JoinRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_JoinRsp& from);
  void MergeFrom(const Room_JoinRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional .ProtoBuf.RoomDetailProto detail = 2;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::ProtoBuf::RoomDetailProto& detail() const;
  inline ::ProtoBuf::RoomDetailProto* mutable_detail();
  inline ::ProtoBuf::RoomDetailProto* release_detail();
  inline void set_allocated_detail(::ProtoBuf::RoomDetailProto* detail);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_JoinRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::RoomDetailProto* detail_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_JoinRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_InviteReq : public ::google::protobuf::Message {
 public:
  Room_InviteReq();
  virtual ~Room_InviteReq();

  Room_InviteReq(const Room_InviteReq& from);

  inline Room_InviteReq& operator=(const Room_InviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_InviteReq& default_instance();

  void Swap(Room_InviteReq* other);

  // implements Message ----------------------------------------------

  Room_InviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_InviteReq& from);
  void MergeFrom(const Room_InviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 friend_cid = 1;
  inline bool has_friend_cid() const;
  inline void clear_friend_cid();
  static const int kFriendCidFieldNumber = 1;
  inline ::google::protobuf::uint32 friend_cid() const;
  inline void set_friend_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_InviteReq)
 private:
  inline void set_has_friend_cid();
  inline void clear_has_friend_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 friend_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_InviteReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_InviteRsp : public ::google::protobuf::Message {
 public:
  Room_InviteRsp();
  virtual ~Room_InviteRsp();

  Room_InviteRsp(const Room_InviteRsp& from);

  inline Room_InviteRsp& operator=(const Room_InviteRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_InviteRsp& default_instance();

  void Swap(Room_InviteRsp* other);

  // implements Message ----------------------------------------------

  Room_InviteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_InviteRsp& from);
  void MergeFrom(const Room_InviteRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_InviteRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_InviteRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_ReplyInviteReq : public ::google::protobuf::Message {
 public:
  Room_ReplyInviteReq();
  virtual ~Room_ReplyInviteReq();

  Room_ReplyInviteReq(const Room_ReplyInviteReq& from);

  inline Room_ReplyInviteReq& operator=(const Room_ReplyInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_ReplyInviteReq& default_instance();

  void Swap(Room_ReplyInviteReq* other);

  // implements Message ----------------------------------------------

  Room_ReplyInviteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_ReplyInviteReq& from);
  void MergeFrom(const Room_ReplyInviteReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reply = 1;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 1;
  inline ::google::protobuf::int32 reply() const;
  inline void set_reply(::google::protobuf::int32 value);

  // required uint32 dup_id = 2;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dup_id() const;
  inline void set_dup_id(::google::protobuf::uint32 value);

  // required uint32 room_id = 3;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // repeated int32 pwd = 4;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 4;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_ReplyInviteReq)
 private:
  inline void set_has_reply();
  inline void clear_has_reply();
  inline void set_has_dup_id();
  inline void clear_has_dup_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reply_;
  ::google::protobuf::uint32 dup_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;
  ::google::protobuf::uint32 room_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_ReplyInviteReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_ReplyInviteRsp : public ::google::protobuf::Message {
 public:
  Room_ReplyInviteRsp();
  virtual ~Room_ReplyInviteRsp();

  Room_ReplyInviteRsp(const Room_ReplyInviteRsp& from);

  inline Room_ReplyInviteRsp& operator=(const Room_ReplyInviteRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_ReplyInviteRsp& default_instance();

  void Swap(Room_ReplyInviteRsp* other);

  // implements Message ----------------------------------------------

  Room_ReplyInviteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_ReplyInviteRsp& from);
  void MergeFrom(const Room_ReplyInviteRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 reply = 2;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 2;
  inline ::google::protobuf::int32 reply() const;
  inline void set_reply(::google::protobuf::int32 value);

  // optional .ProtoBuf.RoomDetailProto detail = 3;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 3;
  inline const ::ProtoBuf::RoomDetailProto& detail() const;
  inline ::ProtoBuf::RoomDetailProto* mutable_detail();
  inline ::ProtoBuf::RoomDetailProto* release_detail();
  inline void set_allocated_detail(::ProtoBuf::RoomDetailProto* detail);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_ReplyInviteRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_reply();
  inline void clear_has_reply();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 reply_;
  ::ProtoBuf::RoomDetailProto* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_ReplyInviteRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_KickReq : public ::google::protobuf::Message {
 public:
  Room_KickReq();
  virtual ~Room_KickReq();

  Room_KickReq(const Room_KickReq& from);

  inline Room_KickReq& operator=(const Room_KickReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_KickReq& default_instance();

  void Swap(Room_KickReq* other);

  // implements Message ----------------------------------------------

  Room_KickReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_KickReq& from);
  void MergeFrom(const Room_KickReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_KickReq)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_KickReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_KickRsp : public ::google::protobuf::Message {
 public:
  Room_KickRsp();
  virtual ~Room_KickRsp();

  Room_KickRsp(const Room_KickRsp& from);

  inline Room_KickRsp& operator=(const Room_KickRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_KickRsp& default_instance();

  void Swap(Room_KickRsp* other);

  // implements Message ----------------------------------------------

  Room_KickRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_KickRsp& from);
  void MergeFrom(const Room_KickRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_KickRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_KickRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_LeaveReq : public ::google::protobuf::Message {
 public:
  Room_LeaveReq();
  virtual ~Room_LeaveReq();

  Room_LeaveReq(const Room_LeaveReq& from);

  inline Room_LeaveReq& operator=(const Room_LeaveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_LeaveReq& default_instance();

  void Swap(Room_LeaveReq* other);

  // implements Message ----------------------------------------------

  Room_LeaveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_LeaveReq& from);
  void MergeFrom(const Room_LeaveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_LeaveReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_LeaveReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_LeaveRsp : public ::google::protobuf::Message {
 public:
  Room_LeaveRsp();
  virtual ~Room_LeaveRsp();

  Room_LeaveRsp(const Room_LeaveRsp& from);

  inline Room_LeaveRsp& operator=(const Room_LeaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_LeaveRsp& default_instance();

  void Swap(Room_LeaveRsp* other);

  // implements Message ----------------------------------------------

  Room_LeaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_LeaveRsp& from);
  void MergeFrom(const Room_LeaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_LeaveRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_LeaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_AutoJoinReq : public ::google::protobuf::Message {
 public:
  Room_AutoJoinReq();
  virtual ~Room_AutoJoinReq();

  Room_AutoJoinReq(const Room_AutoJoinReq& from);

  inline Room_AutoJoinReq& operator=(const Room_AutoJoinReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_AutoJoinReq& default_instance();

  void Swap(Room_AutoJoinReq* other);

  // implements Message ----------------------------------------------

  Room_AutoJoinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_AutoJoinReq& from);
  void MergeFrom(const Room_AutoJoinReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_AutoJoinReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_AutoJoinReq* default_instance_;
};
// -------------------------------------------------------------------

class Room_AutoJoinRsp : public ::google::protobuf::Message {
 public:
  Room_AutoJoinRsp();
  virtual ~Room_AutoJoinRsp();

  Room_AutoJoinRsp(const Room_AutoJoinRsp& from);

  inline Room_AutoJoinRsp& operator=(const Room_AutoJoinRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_AutoJoinRsp& default_instance();

  void Swap(Room_AutoJoinRsp* other);

  // implements Message ----------------------------------------------

  Room_AutoJoinRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_AutoJoinRsp& from);
  void MergeFrom(const Room_AutoJoinRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_AutoJoinRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_AutoJoinRsp* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyLeave : public ::google::protobuf::Message {
 public:
  Room_NotifyLeave();
  virtual ~Room_NotifyLeave();

  Room_NotifyLeave(const Room_NotifyLeave& from);

  inline Room_NotifyLeave& operator=(const Room_NotifyLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyLeave& default_instance();

  void Swap(Room_NotifyLeave* other);

  // implements Message ----------------------------------------------

  Room_NotifyLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyLeave& from);
  void MergeFrom(const Room_NotifyLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyLeave)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyLeave* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyJoin : public ::google::protobuf::Message {
 public:
  Room_NotifyJoin();
  virtual ~Room_NotifyJoin();

  Room_NotifyJoin(const Room_NotifyJoin& from);

  inline Room_NotifyJoin& operator=(const Room_NotifyJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyJoin& default_instance();

  void Swap(Room_NotifyJoin* other);

  // implements Message ----------------------------------------------

  Room_NotifyJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyJoin& from);
  void MergeFrom(const Room_NotifyJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoBuf.RoomMemberProto join = 1;
  inline bool has_join() const;
  inline void clear_join();
  static const int kJoinFieldNumber = 1;
  inline const ::ProtoBuf::RoomMemberProto& join() const;
  inline ::ProtoBuf::RoomMemberProto* mutable_join();
  inline ::ProtoBuf::RoomMemberProto* release_join();
  inline void set_allocated_join(::ProtoBuf::RoomMemberProto* join);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyJoin)
 private:
  inline void set_has_join();
  inline void clear_has_join();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::RoomMemberProto* join_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyJoin* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyUpdate : public ::google::protobuf::Message {
 public:
  Room_NotifyUpdate();
  virtual ~Room_NotifyUpdate();

  Room_NotifyUpdate(const Room_NotifyUpdate& from);

  inline Room_NotifyUpdate& operator=(const Room_NotifyUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyUpdate& default_instance();

  void Swap(Room_NotifyUpdate* other);

  // implements Message ----------------------------------------------

  Room_NotifyUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyUpdate& from);
  void MergeFrom(const Room_NotifyUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoBuf.RoomMemberProto update = 1;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 1;
  inline const ::ProtoBuf::RoomMemberProto& update() const;
  inline ::ProtoBuf::RoomMemberProto* mutable_update();
  inline ::ProtoBuf::RoomMemberProto* release_update();
  inline void set_allocated_update(::ProtoBuf::RoomMemberProto* update);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyUpdate)
 private:
  inline void set_has_update();
  inline void clear_has_update();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::RoomMemberProto* update_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyUpdate* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyRecvInvite : public ::google::protobuf::Message {
 public:
  Room_NotifyRecvInvite();
  virtual ~Room_NotifyRecvInvite();

  Room_NotifyRecvInvite(const Room_NotifyRecvInvite& from);

  inline Room_NotifyRecvInvite& operator=(const Room_NotifyRecvInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyRecvInvite& default_instance();

  void Swap(Room_NotifyRecvInvite* other);

  // implements Message ----------------------------------------------

  Room_NotifyRecvInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyRecvInvite& from);
  void MergeFrom(const Room_NotifyRecvInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoBuf.RoomProto room = 1;
  inline bool has_room() const;
  inline void clear_room();
  static const int kRoomFieldNumber = 1;
  inline const ::ProtoBuf::RoomProto& room() const;
  inline ::ProtoBuf::RoomProto* mutable_room();
  inline ::ProtoBuf::RoomProto* release_room();
  inline void set_allocated_room(::ProtoBuf::RoomProto* room);

  // optional .ProtoBuf.RoomMemberProto owner = 2;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 2;
  inline const ::ProtoBuf::RoomMemberProto& owner() const;
  inline ::ProtoBuf::RoomMemberProto* mutable_owner();
  inline ::ProtoBuf::RoomMemberProto* release_owner();
  inline void set_allocated_owner(::ProtoBuf::RoomMemberProto* owner);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyRecvInvite)
 private:
  inline void set_has_room();
  inline void clear_has_room();
  inline void set_has_owner();
  inline void clear_has_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::RoomProto* room_;
  ::ProtoBuf::RoomMemberProto* owner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyRecvInvite* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyRefuse : public ::google::protobuf::Message {
 public:
  Room_NotifyRefuse();
  virtual ~Room_NotifyRefuse();

  Room_NotifyRefuse(const Room_NotifyRefuse& from);

  inline Room_NotifyRefuse& operator=(const Room_NotifyRefuse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyRefuse& default_instance();

  void Swap(Room_NotifyRefuse* other);

  // implements Message ----------------------------------------------

  Room_NotifyRefuse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyRefuse& from);
  void MergeFrom(const Room_NotifyRefuse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyRefuse)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyRefuse* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyKick : public ::google::protobuf::Message {
 public:
  Room_NotifyKick();
  virtual ~Room_NotifyKick();

  Room_NotifyKick(const Room_NotifyKick& from);

  inline Room_NotifyKick& operator=(const Room_NotifyKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyKick& default_instance();

  void Swap(Room_NotifyKick* other);

  // implements Message ----------------------------------------------

  Room_NotifyKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyKick& from);
  void MergeFrom(const Room_NotifyKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyKick)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyKick* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyMemberKick : public ::google::protobuf::Message {
 public:
  Room_NotifyMemberKick();
  virtual ~Room_NotifyMemberKick();

  Room_NotifyMemberKick(const Room_NotifyMemberKick& from);

  inline Room_NotifyMemberKick& operator=(const Room_NotifyMemberKick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyMemberKick& default_instance();

  void Swap(Room_NotifyMemberKick* other);

  // implements Message ----------------------------------------------

  Room_NotifyMemberKick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyMemberKick& from);
  void MergeFrom(const Room_NotifyMemberKick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 kick = 1;
  inline bool has_kick() const;
  inline void clear_kick();
  static const int kKickFieldNumber = 1;
  inline ::google::protobuf::uint32 kick() const;
  inline void set_kick(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyMemberKick)
 private:
  inline void set_has_kick();
  inline void clear_has_kick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 kick_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyMemberKick* default_instance_;
};
// -------------------------------------------------------------------

class Room_NotifyDismiss : public ::google::protobuf::Message {
 public:
  Room_NotifyDismiss();
  virtual ~Room_NotifyDismiss();

  Room_NotifyDismiss(const Room_NotifyDismiss& from);

  inline Room_NotifyDismiss& operator=(const Room_NotifyDismiss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Room_NotifyDismiss& default_instance();

  void Swap(Room_NotifyDismiss* other);

  // implements Message ----------------------------------------------

  Room_NotifyDismiss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Room_NotifyDismiss& from);
  void MergeFrom(const Room_NotifyDismiss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Room_NotifyDismiss)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static Room_NotifyDismiss* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_CreateRoom : public ::google::protobuf::Message {
 public:
  LCRoom_CreateRoom();
  virtual ~LCRoom_CreateRoom();

  LCRoom_CreateRoom(const LCRoom_CreateRoom& from);

  inline LCRoom_CreateRoom& operator=(const LCRoom_CreateRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_CreateRoom& default_instance();

  void Swap(LCRoom_CreateRoom* other);

  // implements Message ----------------------------------------------

  LCRoom_CreateRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_CreateRoom& from);
  void MergeFrom(const LCRoom_CreateRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 dupid = 2;
  inline bool has_dupid() const;
  inline void clear_dupid();
  static const int kDupidFieldNumber = 2;
  inline ::google::protobuf::uint32 dupid() const;
  inline void set_dupid(::google::protobuf::uint32 value);

  // repeated int32 pwd = 3;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_CreateRoom)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dupid();
  inline void clear_has_dupid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 dupid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_CreateRoom* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_SetPwd : public ::google::protobuf::Message {
 public:
  LCRoom_SetPwd();
  virtual ~LCRoom_SetPwd();

  LCRoom_SetPwd(const LCRoom_SetPwd& from);

  inline LCRoom_SetPwd& operator=(const LCRoom_SetPwd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_SetPwd& default_instance();

  void Swap(LCRoom_SetPwd* other);

  // implements Message ----------------------------------------------

  LCRoom_SetPwd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_SetPwd& from);
  void MergeFrom(const LCRoom_SetPwd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated int32 pwd = 3;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_SetPwd)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_SetPwd* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_Join : public ::google::protobuf::Message {
 public:
  LCRoom_Join();
  virtual ~LCRoom_Join();

  LCRoom_Join(const LCRoom_Join& from);

  inline LCRoom_Join& operator=(const LCRoom_Join& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_Join& default_instance();

  void Swap(LCRoom_Join* other);

  // implements Message ----------------------------------------------

  LCRoom_Join* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_Join& from);
  void MergeFrom(const LCRoom_Join& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 dup_id = 2;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dup_id() const;
  inline void set_dup_id(::google::protobuf::uint32 value);

  // required uint32 roomid = 3;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 3;
  inline ::google::protobuf::uint32 roomid() const;
  inline void set_roomid(::google::protobuf::uint32 value);

  // repeated int32 pwd = 4;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 4;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_Join)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dup_id();
  inline void clear_has_dup_id();
  inline void set_has_roomid();
  inline void clear_has_roomid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 dup_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;
  ::google::protobuf::uint32 roomid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_Join* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_InviteFriend : public ::google::protobuf::Message {
 public:
  LCRoom_InviteFriend();
  virtual ~LCRoom_InviteFriend();

  LCRoom_InviteFriend(const LCRoom_InviteFriend& from);

  inline LCRoom_InviteFriend& operator=(const LCRoom_InviteFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_InviteFriend& default_instance();

  void Swap(LCRoom_InviteFriend* other);

  // implements Message ----------------------------------------------

  LCRoom_InviteFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_InviteFriend& from);
  void MergeFrom(const LCRoom_InviteFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 friend_cid = 2;
  inline bool has_friend_cid() const;
  inline void clear_friend_cid();
  static const int kFriendCidFieldNumber = 2;
  inline ::google::protobuf::uint32 friend_cid() const;
  inline void set_friend_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_InviteFriend)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_friend_cid();
  inline void clear_has_friend_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 friend_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_InviteFriend* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_ReplyInvite : public ::google::protobuf::Message {
 public:
  LCRoom_ReplyInvite();
  virtual ~LCRoom_ReplyInvite();

  LCRoom_ReplyInvite(const LCRoom_ReplyInvite& from);

  inline LCRoom_ReplyInvite& operator=(const LCRoom_ReplyInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_ReplyInvite& default_instance();

  void Swap(LCRoom_ReplyInvite* other);

  // implements Message ----------------------------------------------

  LCRoom_ReplyInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_ReplyInvite& from);
  void MergeFrom(const LCRoom_ReplyInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required int32 reply = 2;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 2;
  inline ::google::protobuf::int32 reply() const;
  inline void set_reply(::google::protobuf::int32 value);

  // required uint32 dup_id = 3;
  inline bool has_dup_id() const;
  inline void clear_dup_id();
  static const int kDupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 dup_id() const;
  inline void set_dup_id(::google::protobuf::uint32 value);

  // required uint32 room_id = 4;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);

  // repeated int32 pwd = 5;
  inline int pwd_size() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 5;
  inline ::google::protobuf::int32 pwd(int index) const;
  inline void set_pwd(int index, ::google::protobuf::int32 value);
  inline void add_pwd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwd();

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_ReplyInvite)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_reply();
  inline void clear_has_reply();
  inline void set_has_dup_id();
  inline void clear_has_dup_id();
  inline void set_has_room_id();
  inline void clear_has_room_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::int32 reply_;
  ::google::protobuf::uint32 dup_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_ReplyInvite* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_KickRoom : public ::google::protobuf::Message {
 public:
  LCRoom_KickRoom();
  virtual ~LCRoom_KickRoom();

  LCRoom_KickRoom(const LCRoom_KickRoom& from);

  inline LCRoom_KickRoom& operator=(const LCRoom_KickRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_KickRoom& default_instance();

  void Swap(LCRoom_KickRoom* other);

  // implements Message ----------------------------------------------

  LCRoom_KickRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_KickRoom& from);
  void MergeFrom(const LCRoom_KickRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 cid = 2;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 2;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_KickRoom)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_KickRoom* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_LeaveRoom : public ::google::protobuf::Message {
 public:
  LCRoom_LeaveRoom();
  virtual ~LCRoom_LeaveRoom();

  LCRoom_LeaveRoom(const LCRoom_LeaveRoom& from);

  inline LCRoom_LeaveRoom& operator=(const LCRoom_LeaveRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_LeaveRoom& default_instance();

  void Swap(LCRoom_LeaveRoom* other);

  // implements Message ----------------------------------------------

  LCRoom_LeaveRoom* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_LeaveRoom& from);
  void MergeFrom(const LCRoom_LeaveRoom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_LeaveRoom)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_LeaveRoom* default_instance_;
};
// -------------------------------------------------------------------

class LCRoom_AutoJoin : public ::google::protobuf::Message {
 public:
  LCRoom_AutoJoin();
  virtual ~LCRoom_AutoJoin();

  LCRoom_AutoJoin(const LCRoom_AutoJoin& from);

  inline LCRoom_AutoJoin& operator=(const LCRoom_AutoJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LCRoom_AutoJoin& default_instance();

  void Swap(LCRoom_AutoJoin* other);

  // implements Message ----------------------------------------------

  LCRoom_AutoJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LCRoom_AutoJoin& from);
  void MergeFrom(const LCRoom_AutoJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LCRoom_AutoJoin)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static LCRoom_AutoJoin* default_instance_;
};
// -------------------------------------------------------------------

class CLRoom_CharRoomNotify : public ::google::protobuf::Message {
 public:
  CLRoom_CharRoomNotify();
  virtual ~CLRoom_CharRoomNotify();

  CLRoom_CharRoomNotify(const CLRoom_CharRoomNotify& from);

  inline CLRoom_CharRoomNotify& operator=(const CLRoom_CharRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLRoom_CharRoomNotify& default_instance();

  void Swap(CLRoom_CharRoomNotify* other);

  // implements Message ----------------------------------------------

  CLRoom_CharRoomNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLRoom_CharRoomNotify& from);
  void MergeFrom(const CLRoom_CharRoomNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 roomid = 2;
  inline bool has_roomid() const;
  inline void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  inline ::google::protobuf::uint32 roomid() const;
  inline void set_roomid(::google::protobuf::uint32 value);

  // required uint32 owner = 3;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 3;
  inline ::google::protobuf::uint32 owner() const;
  inline void set_owner(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CLRoom_CharRoomNotify)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_roomid();
  inline void clear_has_roomid();
  inline void set_has_owner();
  inline void clear_has_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 owner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fRoom_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fRoom_2eproto();

  void InitAsDefaultInstance();
  static CLRoom_CharRoomNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// RoomMemberProto

// optional uint32 cid = 1;
inline bool RoomMemberProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomMemberProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomMemberProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomMemberProto::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 RoomMemberProto::cid() const {
  return cid_;
}
inline void RoomMemberProto::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// optional string name = 2;
inline bool RoomMemberProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomMemberProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomMemberProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomMemberProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoomMemberProto::name() const {
  return *name_;
}
inline void RoomMemberProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoomMemberProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoomMemberProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoomMemberProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoomMemberProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoomMemberProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 prof = 3;
inline bool RoomMemberProto::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomMemberProto::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomMemberProto::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomMemberProto::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 RoomMemberProto::prof() const {
  return prof_;
}
inline void RoomMemberProto::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// optional int32 level = 4;
inline bool RoomMemberProto::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomMemberProto::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomMemberProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomMemberProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 RoomMemberProto::level() const {
  return level_;
}
inline void RoomMemberProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 fight = 5;
inline bool RoomMemberProto::has_fight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomMemberProto::set_has_fight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomMemberProto::clear_has_fight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomMemberProto::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 RoomMemberProto::fight() const {
  return fight_;
}
inline void RoomMemberProto::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// optional int32 type = 6;
inline bool RoomMemberProto::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomMemberProto::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomMemberProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomMemberProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RoomMemberProto::type() const {
  return type_;
}
inline void RoomMemberProto::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RoomAllMemberProto

// repeated .ProtoBuf.RoomMemberProto member = 1;
inline int RoomAllMemberProto::member_size() const {
  return member_.size();
}
inline void RoomAllMemberProto::clear_member() {
  member_.Clear();
}
inline const ::ProtoBuf::RoomMemberProto& RoomAllMemberProto::member(int index) const {
  return member_.Get(index);
}
inline ::ProtoBuf::RoomMemberProto* RoomAllMemberProto::mutable_member(int index) {
  return member_.Mutable(index);
}
inline ::ProtoBuf::RoomMemberProto* RoomAllMemberProto::add_member() {
  return member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RoomMemberProto >&
RoomAllMemberProto::member() const {
  return member_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RoomMemberProto >*
RoomAllMemberProto::mutable_member() {
  return &member_;
}

// -------------------------------------------------------------------

// RoomProto

// optional uint32 room_id = 1;
inline bool RoomProto::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomProto::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomProto::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomProto::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 RoomProto::room_id() const {
  return room_id_;
}
inline void RoomProto::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional uint32 dup_id = 2;
inline bool RoomProto::has_dup_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomProto::set_has_dup_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomProto::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomProto::clear_dup_id() {
  dup_id_ = 0u;
  clear_has_dup_id();
}
inline ::google::protobuf::uint32 RoomProto::dup_id() const {
  return dup_id_;
}
inline void RoomProto::set_dup_id(::google::protobuf::uint32 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// repeated int32 pwd = 3;
inline int RoomProto::pwd_size() const {
  return pwd_.size();
}
inline void RoomProto::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 RoomProto::pwd(int index) const {
  return pwd_.Get(index);
}
inline void RoomProto::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void RoomProto::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoomProto::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoomProto::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// RoomDetailProto

// optional .ProtoBuf.RoomProto room = 1;
inline bool RoomDetailProto::has_room() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomDetailProto::set_has_room() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomDetailProto::clear_has_room() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomDetailProto::clear_room() {
  if (room_ != NULL) room_->::ProtoBuf::RoomProto::Clear();
  clear_has_room();
}
inline const ::ProtoBuf::RoomProto& RoomDetailProto::room() const {
  return room_ != NULL ? *room_ : *default_instance_->room_;
}
inline ::ProtoBuf::RoomProto* RoomDetailProto::mutable_room() {
  set_has_room();
  if (room_ == NULL) room_ = new ::ProtoBuf::RoomProto;
  return room_;
}
inline ::ProtoBuf::RoomProto* RoomDetailProto::release_room() {
  clear_has_room();
  ::ProtoBuf::RoomProto* temp = room_;
  room_ = NULL;
  return temp;
}
inline void RoomDetailProto::set_allocated_room(::ProtoBuf::RoomProto* room) {
  delete room_;
  room_ = room;
  if (room) {
    set_has_room();
  } else {
    clear_has_room();
  }
}

// optional .ProtoBuf.RoomAllMemberProto member = 2;
inline bool RoomDetailProto::has_member() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomDetailProto::set_has_member() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomDetailProto::clear_has_member() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomDetailProto::clear_member() {
  if (member_ != NULL) member_->::ProtoBuf::RoomAllMemberProto::Clear();
  clear_has_member();
}
inline const ::ProtoBuf::RoomAllMemberProto& RoomDetailProto::member() const {
  return member_ != NULL ? *member_ : *default_instance_->member_;
}
inline ::ProtoBuf::RoomAllMemberProto* RoomDetailProto::mutable_member() {
  set_has_member();
  if (member_ == NULL) member_ = new ::ProtoBuf::RoomAllMemberProto;
  return member_;
}
inline ::ProtoBuf::RoomAllMemberProto* RoomDetailProto::release_member() {
  clear_has_member();
  ::ProtoBuf::RoomAllMemberProto* temp = member_;
  member_ = NULL;
  return temp;
}
inline void RoomDetailProto::set_allocated_member(::ProtoBuf::RoomAllMemberProto* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
}

// -------------------------------------------------------------------

// Room_CreateReq

// required int32 dup_id = 1;
inline bool Room_CreateReq::has_dup_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CreateReq::set_has_dup_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CreateReq::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CreateReq::clear_dup_id() {
  dup_id_ = 0;
  clear_has_dup_id();
}
inline ::google::protobuf::int32 Room_CreateReq::dup_id() const {
  return dup_id_;
}
inline void Room_CreateReq::set_dup_id(::google::protobuf::int32 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// repeated int32 pwd = 2;
inline int Room_CreateReq::pwd_size() const {
  return pwd_.size();
}
inline void Room_CreateReq::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 Room_CreateReq::pwd(int index) const {
  return pwd_.Get(index);
}
inline void Room_CreateReq::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void Room_CreateReq::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Room_CreateReq::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Room_CreateReq::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// Room_CreateRsp

// required int32 retcode = 1;
inline bool Room_CreateRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_CreateRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_CreateRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_CreateRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_CreateRsp::retcode() const {
  return retcode_;
}
inline void Room_CreateRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional .ProtoBuf.RoomDetailProto detail = 2;
inline bool Room_CreateRsp::has_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_CreateRsp::set_has_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_CreateRsp::clear_has_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_CreateRsp::clear_detail() {
  if (detail_ != NULL) detail_->::ProtoBuf::RoomDetailProto::Clear();
  clear_has_detail();
}
inline const ::ProtoBuf::RoomDetailProto& Room_CreateRsp::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::ProtoBuf::RoomDetailProto* Room_CreateRsp::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::ProtoBuf::RoomDetailProto;
  return detail_;
}
inline ::ProtoBuf::RoomDetailProto* Room_CreateRsp::release_detail() {
  clear_has_detail();
  ::ProtoBuf::RoomDetailProto* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void Room_CreateRsp::set_allocated_detail(::ProtoBuf::RoomDetailProto* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// Room_SetPwdReq

// required int32 type = 1;
inline bool Room_SetPwdReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SetPwdReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SetPwdReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SetPwdReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Room_SetPwdReq::type() const {
  return type_;
}
inline void Room_SetPwdReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int32 pwd = 2;
inline int Room_SetPwdReq::pwd_size() const {
  return pwd_.size();
}
inline void Room_SetPwdReq::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 Room_SetPwdReq::pwd(int index) const {
  return pwd_.Get(index);
}
inline void Room_SetPwdReq::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void Room_SetPwdReq::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Room_SetPwdReq::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Room_SetPwdReq::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// Room_SetPwdRsp

// required int32 retcode = 1;
inline bool Room_SetPwdRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_SetPwdRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_SetPwdRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_SetPwdRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_SetPwdRsp::retcode() const {
  return retcode_;
}
inline void Room_SetPwdRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 type = 2;
inline bool Room_SetPwdRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_SetPwdRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_SetPwdRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_SetPwdRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Room_SetPwdRsp::type() const {
  return type_;
}
inline void Room_SetPwdRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int32 pwd = 3;
inline int Room_SetPwdRsp::pwd_size() const {
  return pwd_.size();
}
inline void Room_SetPwdRsp::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 Room_SetPwdRsp::pwd(int index) const {
  return pwd_.Get(index);
}
inline void Room_SetPwdRsp::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void Room_SetPwdRsp::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Room_SetPwdRsp::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Room_SetPwdRsp::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// Room_JoinReq

// required uint32 dup_id = 1;
inline bool Room_JoinReq::has_dup_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_JoinReq::set_has_dup_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_JoinReq::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_JoinReq::clear_dup_id() {
  dup_id_ = 0u;
  clear_has_dup_id();
}
inline ::google::protobuf::uint32 Room_JoinReq::dup_id() const {
  return dup_id_;
}
inline void Room_JoinReq::set_dup_id(::google::protobuf::uint32 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// required uint32 room_id = 2;
inline bool Room_JoinReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_JoinReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_JoinReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_JoinReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Room_JoinReq::room_id() const {
  return room_id_;
}
inline void Room_JoinReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 pwd = 3;
inline int Room_JoinReq::pwd_size() const {
  return pwd_.size();
}
inline void Room_JoinReq::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 Room_JoinReq::pwd(int index) const {
  return pwd_.Get(index);
}
inline void Room_JoinReq::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void Room_JoinReq::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Room_JoinReq::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Room_JoinReq::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// Room_JoinRsp

// required int32 retcode = 1;
inline bool Room_JoinRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_JoinRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_JoinRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_JoinRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_JoinRsp::retcode() const {
  return retcode_;
}
inline void Room_JoinRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional .ProtoBuf.RoomDetailProto detail = 2;
inline bool Room_JoinRsp::has_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_JoinRsp::set_has_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_JoinRsp::clear_has_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_JoinRsp::clear_detail() {
  if (detail_ != NULL) detail_->::ProtoBuf::RoomDetailProto::Clear();
  clear_has_detail();
}
inline const ::ProtoBuf::RoomDetailProto& Room_JoinRsp::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::ProtoBuf::RoomDetailProto* Room_JoinRsp::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::ProtoBuf::RoomDetailProto;
  return detail_;
}
inline ::ProtoBuf::RoomDetailProto* Room_JoinRsp::release_detail() {
  clear_has_detail();
  ::ProtoBuf::RoomDetailProto* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void Room_JoinRsp::set_allocated_detail(::ProtoBuf::RoomDetailProto* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// Room_InviteReq

// required uint32 friend_cid = 1;
inline bool Room_InviteReq::has_friend_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_InviteReq::set_has_friend_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_InviteReq::clear_has_friend_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_InviteReq::clear_friend_cid() {
  friend_cid_ = 0u;
  clear_has_friend_cid();
}
inline ::google::protobuf::uint32 Room_InviteReq::friend_cid() const {
  return friend_cid_;
}
inline void Room_InviteReq::set_friend_cid(::google::protobuf::uint32 value) {
  set_has_friend_cid();
  friend_cid_ = value;
}

// -------------------------------------------------------------------

// Room_InviteRsp

// required int32 retcode = 1;
inline bool Room_InviteRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_InviteRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_InviteRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_InviteRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_InviteRsp::retcode() const {
  return retcode_;
}
inline void Room_InviteRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Room_ReplyInviteReq

// required int32 reply = 1;
inline bool Room_ReplyInviteReq::has_reply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_ReplyInviteReq::set_has_reply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_ReplyInviteReq::clear_has_reply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_ReplyInviteReq::clear_reply() {
  reply_ = 0;
  clear_has_reply();
}
inline ::google::protobuf::int32 Room_ReplyInviteReq::reply() const {
  return reply_;
}
inline void Room_ReplyInviteReq::set_reply(::google::protobuf::int32 value) {
  set_has_reply();
  reply_ = value;
}

// required uint32 dup_id = 2;
inline bool Room_ReplyInviteReq::has_dup_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_ReplyInviteReq::set_has_dup_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_ReplyInviteReq::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_ReplyInviteReq::clear_dup_id() {
  dup_id_ = 0u;
  clear_has_dup_id();
}
inline ::google::protobuf::uint32 Room_ReplyInviteReq::dup_id() const {
  return dup_id_;
}
inline void Room_ReplyInviteReq::set_dup_id(::google::protobuf::uint32 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// required uint32 room_id = 3;
inline bool Room_ReplyInviteReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Room_ReplyInviteReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Room_ReplyInviteReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Room_ReplyInviteReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 Room_ReplyInviteReq::room_id() const {
  return room_id_;
}
inline void Room_ReplyInviteReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 pwd = 4;
inline int Room_ReplyInviteReq::pwd_size() const {
  return pwd_.size();
}
inline void Room_ReplyInviteReq::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 Room_ReplyInviteReq::pwd(int index) const {
  return pwd_.Get(index);
}
inline void Room_ReplyInviteReq::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void Room_ReplyInviteReq::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Room_ReplyInviteReq::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Room_ReplyInviteReq::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// Room_ReplyInviteRsp

// required int32 retcode = 1;
inline bool Room_ReplyInviteRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_ReplyInviteRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_ReplyInviteRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_ReplyInviteRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_ReplyInviteRsp::retcode() const {
  return retcode_;
}
inline void Room_ReplyInviteRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 reply = 2;
inline bool Room_ReplyInviteRsp::has_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_ReplyInviteRsp::set_has_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_ReplyInviteRsp::clear_has_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_ReplyInviteRsp::clear_reply() {
  reply_ = 0;
  clear_has_reply();
}
inline ::google::protobuf::int32 Room_ReplyInviteRsp::reply() const {
  return reply_;
}
inline void Room_ReplyInviteRsp::set_reply(::google::protobuf::int32 value) {
  set_has_reply();
  reply_ = value;
}

// optional .ProtoBuf.RoomDetailProto detail = 3;
inline bool Room_ReplyInviteRsp::has_detail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Room_ReplyInviteRsp::set_has_detail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Room_ReplyInviteRsp::clear_has_detail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Room_ReplyInviteRsp::clear_detail() {
  if (detail_ != NULL) detail_->::ProtoBuf::RoomDetailProto::Clear();
  clear_has_detail();
}
inline const ::ProtoBuf::RoomDetailProto& Room_ReplyInviteRsp::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::ProtoBuf::RoomDetailProto* Room_ReplyInviteRsp::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::ProtoBuf::RoomDetailProto;
  return detail_;
}
inline ::ProtoBuf::RoomDetailProto* Room_ReplyInviteRsp::release_detail() {
  clear_has_detail();
  ::ProtoBuf::RoomDetailProto* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void Room_ReplyInviteRsp::set_allocated_detail(::ProtoBuf::RoomDetailProto* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// Room_KickReq

// required uint32 cid = 1;
inline bool Room_KickReq::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_KickReq::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_KickReq::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_KickReq::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 Room_KickReq::cid() const {
  return cid_;
}
inline void Room_KickReq::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// Room_KickRsp

// required int32 retcode = 1;
inline bool Room_KickRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_KickRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_KickRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_KickRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_KickRsp::retcode() const {
  return retcode_;
}
inline void Room_KickRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Room_LeaveReq

// -------------------------------------------------------------------

// Room_LeaveRsp

// required int32 retcode = 1;
inline bool Room_LeaveRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_LeaveRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_LeaveRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_LeaveRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_LeaveRsp::retcode() const {
  return retcode_;
}
inline void Room_LeaveRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Room_AutoJoinReq

// -------------------------------------------------------------------

// Room_AutoJoinRsp

// required int32 retcode = 1;
inline bool Room_AutoJoinRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_AutoJoinRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_AutoJoinRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_AutoJoinRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Room_AutoJoinRsp::retcode() const {
  return retcode_;
}
inline void Room_AutoJoinRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Room_NotifyLeave

// required uint32 cid = 1;
inline bool Room_NotifyLeave::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_NotifyLeave::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_NotifyLeave::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_NotifyLeave::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 Room_NotifyLeave::cid() const {
  return cid_;
}
inline void Room_NotifyLeave::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// Room_NotifyJoin

// optional .ProtoBuf.RoomMemberProto join = 1;
inline bool Room_NotifyJoin::has_join() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_NotifyJoin::set_has_join() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_NotifyJoin::clear_has_join() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_NotifyJoin::clear_join() {
  if (join_ != NULL) join_->::ProtoBuf::RoomMemberProto::Clear();
  clear_has_join();
}
inline const ::ProtoBuf::RoomMemberProto& Room_NotifyJoin::join() const {
  return join_ != NULL ? *join_ : *default_instance_->join_;
}
inline ::ProtoBuf::RoomMemberProto* Room_NotifyJoin::mutable_join() {
  set_has_join();
  if (join_ == NULL) join_ = new ::ProtoBuf::RoomMemberProto;
  return join_;
}
inline ::ProtoBuf::RoomMemberProto* Room_NotifyJoin::release_join() {
  clear_has_join();
  ::ProtoBuf::RoomMemberProto* temp = join_;
  join_ = NULL;
  return temp;
}
inline void Room_NotifyJoin::set_allocated_join(::ProtoBuf::RoomMemberProto* join) {
  delete join_;
  join_ = join;
  if (join) {
    set_has_join();
  } else {
    clear_has_join();
  }
}

// -------------------------------------------------------------------

// Room_NotifyUpdate

// optional .ProtoBuf.RoomMemberProto update = 1;
inline bool Room_NotifyUpdate::has_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_NotifyUpdate::set_has_update() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_NotifyUpdate::clear_has_update() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_NotifyUpdate::clear_update() {
  if (update_ != NULL) update_->::ProtoBuf::RoomMemberProto::Clear();
  clear_has_update();
}
inline const ::ProtoBuf::RoomMemberProto& Room_NotifyUpdate::update() const {
  return update_ != NULL ? *update_ : *default_instance_->update_;
}
inline ::ProtoBuf::RoomMemberProto* Room_NotifyUpdate::mutable_update() {
  set_has_update();
  if (update_ == NULL) update_ = new ::ProtoBuf::RoomMemberProto;
  return update_;
}
inline ::ProtoBuf::RoomMemberProto* Room_NotifyUpdate::release_update() {
  clear_has_update();
  ::ProtoBuf::RoomMemberProto* temp = update_;
  update_ = NULL;
  return temp;
}
inline void Room_NotifyUpdate::set_allocated_update(::ProtoBuf::RoomMemberProto* update) {
  delete update_;
  update_ = update;
  if (update) {
    set_has_update();
  } else {
    clear_has_update();
  }
}

// -------------------------------------------------------------------

// Room_NotifyRecvInvite

// optional .ProtoBuf.RoomProto room = 1;
inline bool Room_NotifyRecvInvite::has_room() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_NotifyRecvInvite::set_has_room() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_NotifyRecvInvite::clear_has_room() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_NotifyRecvInvite::clear_room() {
  if (room_ != NULL) room_->::ProtoBuf::RoomProto::Clear();
  clear_has_room();
}
inline const ::ProtoBuf::RoomProto& Room_NotifyRecvInvite::room() const {
  return room_ != NULL ? *room_ : *default_instance_->room_;
}
inline ::ProtoBuf::RoomProto* Room_NotifyRecvInvite::mutable_room() {
  set_has_room();
  if (room_ == NULL) room_ = new ::ProtoBuf::RoomProto;
  return room_;
}
inline ::ProtoBuf::RoomProto* Room_NotifyRecvInvite::release_room() {
  clear_has_room();
  ::ProtoBuf::RoomProto* temp = room_;
  room_ = NULL;
  return temp;
}
inline void Room_NotifyRecvInvite::set_allocated_room(::ProtoBuf::RoomProto* room) {
  delete room_;
  room_ = room;
  if (room) {
    set_has_room();
  } else {
    clear_has_room();
  }
}

// optional .ProtoBuf.RoomMemberProto owner = 2;
inline bool Room_NotifyRecvInvite::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Room_NotifyRecvInvite::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Room_NotifyRecvInvite::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Room_NotifyRecvInvite::clear_owner() {
  if (owner_ != NULL) owner_->::ProtoBuf::RoomMemberProto::Clear();
  clear_has_owner();
}
inline const ::ProtoBuf::RoomMemberProto& Room_NotifyRecvInvite::owner() const {
  return owner_ != NULL ? *owner_ : *default_instance_->owner_;
}
inline ::ProtoBuf::RoomMemberProto* Room_NotifyRecvInvite::mutable_owner() {
  set_has_owner();
  if (owner_ == NULL) owner_ = new ::ProtoBuf::RoomMemberProto;
  return owner_;
}
inline ::ProtoBuf::RoomMemberProto* Room_NotifyRecvInvite::release_owner() {
  clear_has_owner();
  ::ProtoBuf::RoomMemberProto* temp = owner_;
  owner_ = NULL;
  return temp;
}
inline void Room_NotifyRecvInvite::set_allocated_owner(::ProtoBuf::RoomMemberProto* owner) {
  delete owner_;
  owner_ = owner;
  if (owner) {
    set_has_owner();
  } else {
    clear_has_owner();
  }
}

// -------------------------------------------------------------------

// Room_NotifyRefuse

// optional string name = 1;
inline bool Room_NotifyRefuse::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_NotifyRefuse::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_NotifyRefuse::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_NotifyRefuse::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Room_NotifyRefuse::name() const {
  return *name_;
}
inline void Room_NotifyRefuse::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Room_NotifyRefuse::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Room_NotifyRefuse::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Room_NotifyRefuse::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Room_NotifyRefuse::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Room_NotifyRefuse::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Room_NotifyKick

// -------------------------------------------------------------------

// Room_NotifyMemberKick

// required uint32 kick = 1;
inline bool Room_NotifyMemberKick::has_kick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Room_NotifyMemberKick::set_has_kick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Room_NotifyMemberKick::clear_has_kick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Room_NotifyMemberKick::clear_kick() {
  kick_ = 0u;
  clear_has_kick();
}
inline ::google::protobuf::uint32 Room_NotifyMemberKick::kick() const {
  return kick_;
}
inline void Room_NotifyMemberKick::set_kick(::google::protobuf::uint32 value) {
  set_has_kick();
  kick_ = value;
}

// -------------------------------------------------------------------

// Room_NotifyDismiss

// -------------------------------------------------------------------

// LCRoom_CreateRoom

// required uint32 charid = 1;
inline bool LCRoom_CreateRoom::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_CreateRoom::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_CreateRoom::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_CreateRoom::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_CreateRoom::charid() const {
  return charid_;
}
inline void LCRoom_CreateRoom::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 dupid = 2;
inline bool LCRoom_CreateRoom::has_dupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCRoom_CreateRoom::set_has_dupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCRoom_CreateRoom::clear_has_dupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCRoom_CreateRoom::clear_dupid() {
  dupid_ = 0u;
  clear_has_dupid();
}
inline ::google::protobuf::uint32 LCRoom_CreateRoom::dupid() const {
  return dupid_;
}
inline void LCRoom_CreateRoom::set_dupid(::google::protobuf::uint32 value) {
  set_has_dupid();
  dupid_ = value;
}

// repeated int32 pwd = 3;
inline int LCRoom_CreateRoom::pwd_size() const {
  return pwd_.size();
}
inline void LCRoom_CreateRoom::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 LCRoom_CreateRoom::pwd(int index) const {
  return pwd_.Get(index);
}
inline void LCRoom_CreateRoom::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void LCRoom_CreateRoom::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LCRoom_CreateRoom::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LCRoom_CreateRoom::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// LCRoom_SetPwd

// required uint32 charid = 1;
inline bool LCRoom_SetPwd::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_SetPwd::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_SetPwd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_SetPwd::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_SetPwd::charid() const {
  return charid_;
}
inline void LCRoom_SetPwd::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 type = 2;
inline bool LCRoom_SetPwd::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCRoom_SetPwd::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCRoom_SetPwd::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCRoom_SetPwd::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 LCRoom_SetPwd::type() const {
  return type_;
}
inline void LCRoom_SetPwd::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated int32 pwd = 3;
inline int LCRoom_SetPwd::pwd_size() const {
  return pwd_.size();
}
inline void LCRoom_SetPwd::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 LCRoom_SetPwd::pwd(int index) const {
  return pwd_.Get(index);
}
inline void LCRoom_SetPwd::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void LCRoom_SetPwd::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LCRoom_SetPwd::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LCRoom_SetPwd::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// LCRoom_Join

// required uint32 charid = 1;
inline bool LCRoom_Join::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_Join::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_Join::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_Join::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_Join::charid() const {
  return charid_;
}
inline void LCRoom_Join::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 dup_id = 2;
inline bool LCRoom_Join::has_dup_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCRoom_Join::set_has_dup_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCRoom_Join::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCRoom_Join::clear_dup_id() {
  dup_id_ = 0u;
  clear_has_dup_id();
}
inline ::google::protobuf::uint32 LCRoom_Join::dup_id() const {
  return dup_id_;
}
inline void LCRoom_Join::set_dup_id(::google::protobuf::uint32 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// required uint32 roomid = 3;
inline bool LCRoom_Join::has_roomid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LCRoom_Join::set_has_roomid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LCRoom_Join::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LCRoom_Join::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 LCRoom_Join::roomid() const {
  return roomid_;
}
inline void LCRoom_Join::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
}

// repeated int32 pwd = 4;
inline int LCRoom_Join::pwd_size() const {
  return pwd_.size();
}
inline void LCRoom_Join::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 LCRoom_Join::pwd(int index) const {
  return pwd_.Get(index);
}
inline void LCRoom_Join::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void LCRoom_Join::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LCRoom_Join::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LCRoom_Join::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// LCRoom_InviteFriend

// required uint32 charid = 1;
inline bool LCRoom_InviteFriend::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_InviteFriend::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_InviteFriend::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_InviteFriend::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_InviteFriend::charid() const {
  return charid_;
}
inline void LCRoom_InviteFriend::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 friend_cid = 2;
inline bool LCRoom_InviteFriend::has_friend_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCRoom_InviteFriend::set_has_friend_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCRoom_InviteFriend::clear_has_friend_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCRoom_InviteFriend::clear_friend_cid() {
  friend_cid_ = 0u;
  clear_has_friend_cid();
}
inline ::google::protobuf::uint32 LCRoom_InviteFriend::friend_cid() const {
  return friend_cid_;
}
inline void LCRoom_InviteFriend::set_friend_cid(::google::protobuf::uint32 value) {
  set_has_friend_cid();
  friend_cid_ = value;
}

// -------------------------------------------------------------------

// LCRoom_ReplyInvite

// required uint32 charid = 1;
inline bool LCRoom_ReplyInvite::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_ReplyInvite::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_ReplyInvite::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_ReplyInvite::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_ReplyInvite::charid() const {
  return charid_;
}
inline void LCRoom_ReplyInvite::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required int32 reply = 2;
inline bool LCRoom_ReplyInvite::has_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCRoom_ReplyInvite::set_has_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCRoom_ReplyInvite::clear_has_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCRoom_ReplyInvite::clear_reply() {
  reply_ = 0;
  clear_has_reply();
}
inline ::google::protobuf::int32 LCRoom_ReplyInvite::reply() const {
  return reply_;
}
inline void LCRoom_ReplyInvite::set_reply(::google::protobuf::int32 value) {
  set_has_reply();
  reply_ = value;
}

// required uint32 dup_id = 3;
inline bool LCRoom_ReplyInvite::has_dup_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LCRoom_ReplyInvite::set_has_dup_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LCRoom_ReplyInvite::clear_has_dup_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LCRoom_ReplyInvite::clear_dup_id() {
  dup_id_ = 0u;
  clear_has_dup_id();
}
inline ::google::protobuf::uint32 LCRoom_ReplyInvite::dup_id() const {
  return dup_id_;
}
inline void LCRoom_ReplyInvite::set_dup_id(::google::protobuf::uint32 value) {
  set_has_dup_id();
  dup_id_ = value;
}

// required uint32 room_id = 4;
inline bool LCRoom_ReplyInvite::has_room_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LCRoom_ReplyInvite::set_has_room_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LCRoom_ReplyInvite::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LCRoom_ReplyInvite::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 LCRoom_ReplyInvite::room_id() const {
  return room_id_;
}
inline void LCRoom_ReplyInvite::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// repeated int32 pwd = 5;
inline int LCRoom_ReplyInvite::pwd_size() const {
  return pwd_.size();
}
inline void LCRoom_ReplyInvite::clear_pwd() {
  pwd_.Clear();
}
inline ::google::protobuf::int32 LCRoom_ReplyInvite::pwd(int index) const {
  return pwd_.Get(index);
}
inline void LCRoom_ReplyInvite::set_pwd(int index, ::google::protobuf::int32 value) {
  pwd_.Set(index, value);
}
inline void LCRoom_ReplyInvite::add_pwd(::google::protobuf::int32 value) {
  pwd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LCRoom_ReplyInvite::pwd() const {
  return pwd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LCRoom_ReplyInvite::mutable_pwd() {
  return &pwd_;
}

// -------------------------------------------------------------------

// LCRoom_KickRoom

// required uint32 charid = 1;
inline bool LCRoom_KickRoom::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_KickRoom::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_KickRoom::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_KickRoom::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_KickRoom::charid() const {
  return charid_;
}
inline void LCRoom_KickRoom::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 cid = 2;
inline bool LCRoom_KickRoom::has_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LCRoom_KickRoom::set_has_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LCRoom_KickRoom::clear_has_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LCRoom_KickRoom::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 LCRoom_KickRoom::cid() const {
  return cid_;
}
inline void LCRoom_KickRoom::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// LCRoom_LeaveRoom

// required uint32 charid = 1;
inline bool LCRoom_LeaveRoom::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_LeaveRoom::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_LeaveRoom::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_LeaveRoom::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_LeaveRoom::charid() const {
  return charid_;
}
inline void LCRoom_LeaveRoom::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// LCRoom_AutoJoin

// required uint32 charid = 1;
inline bool LCRoom_AutoJoin::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LCRoom_AutoJoin::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LCRoom_AutoJoin::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LCRoom_AutoJoin::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LCRoom_AutoJoin::charid() const {
  return charid_;
}
inline void LCRoom_AutoJoin::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// CLRoom_CharRoomNotify

// required uint32 charid = 1;
inline bool CLRoom_CharRoomNotify::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLRoom_CharRoomNotify::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLRoom_CharRoomNotify::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLRoom_CharRoomNotify::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 CLRoom_CharRoomNotify::charid() const {
  return charid_;
}
inline void CLRoom_CharRoomNotify::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 roomid = 2;
inline bool CLRoom_CharRoomNotify::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLRoom_CharRoomNotify::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLRoom_CharRoomNotify::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLRoom_CharRoomNotify::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 CLRoom_CharRoomNotify::roomid() const {
  return roomid_;
}
inline void CLRoom_CharRoomNotify::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
}

// required uint32 owner = 3;
inline bool CLRoom_CharRoomNotify::has_owner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLRoom_CharRoomNotify::set_has_owner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLRoom_CharRoomNotify::clear_has_owner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLRoom_CharRoomNotify::clear_owner() {
  owner_ = 0u;
  clear_has_owner();
}
inline ::google::protobuf::uint32 CLRoom_CharRoomNotify::owner() const {
  return owner_;
}
inline void CLRoom_CharRoomNotify::set_owner(::google::protobuf::uint32 value) {
  set_has_owner();
  owner_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBuffer_2fRoom_2eproto__INCLUDED
