import "ProtoBuffer/ComProtocol.proto";
import "ProtoBuffer/ClientToServerCmd.proto";
import "Common/ComDefine.proto";
package ProtoBuf;

message CItemInfo
{
	optional uint32 type = 1;           //完成类型
	optional uint64	id	= 2;			//任务完成目标ID
	optional uint32 curValue = 3;		//任务当前值
	optional uint32 finValue = 4;		//任务完成值
	optional uint32 parma1	= 5;        //可选参数1
	optional uint32 parma2	= 6;		//可选参数2
	optional uint32 parma3	= 7;		//可选参数3
}

message CMissionTrack
{
	optional uint32 missionId = 1; //任务id
	optional uint32 status = 2; //任务状态 1可接 2已接 3已完成 4已提交 5失败
	optional uint32 acceptTime = 3; //接取的时间
	optional CItemInfo itemInfo = 4; //完成任务需要信息
}

//玩家上线拉取任务列表
message CGQueryMissionListReq
{
	
}

//任务列表返回
message GCQueryMissionListRsp
{
	repeated CMissionTrack acceptedList = 1; //已接的任务列表
	repeated uint32	acceptableList = 2; //可接任务列表
}

//请求接收任务
message CGAcceptMissionReq
{
	optional uint32 missionId = 1; //接收的任务id
}

//接收任务返回
message GCAcceptMissionRsp
{
	optional uint32 missionId = 1;  //接收的任务id
	optional uint32 ret = 2;		//状态码
}

//请求放弃任务
message CGAbandonMissionReq
{
	optional uint32 missionId = 1; //放弃的任务id
}

//放弃任务返回
message GCAbandonMissionRsp
{
	optional uint32 missionId = 1;  //放弃的任务id
	optional uint32 ret = 2;		//状态码  ERetCode
}

//提交任务
message CGSubmitMissionReq
{
	optional uint32 missionId = 1;	//提交的任务id
	optional uint32 index = 2;		//领取奖励对应的索引 1表示第一个奖励 2表示第二个奖励
}

//提交任务返回
message GCSubmitMissionRsp
{
	optional uint32 missionId = 1;  //放弃的任务id
	optional uint32 ret = 2;		//状态码  ERetCode
}

//任务进度更新
message GCUpdateMissionStatusNotify
{
	repeated CMissionTrack updateList = 1; //更新任务列表
}

//更新可接任务列表通知(这里不会有库任务和环任务的ID)
message GCUpdateAcceptableListNotify
{
	repeated uint32 acceptableList = 1; //可接任务列表
}

//接取到新的任务通知
message GCReceiveMissionNotify
{
	repeated CMissionTrack receiveList = 1; //新接任务列表
}

//删除已接任务列表（这条协议会在隔天0点，完成任务，放弃任务，任务失败）
message GCDeleteMissionNotify
{
	repeated uint32 missionId = 1;
}

//和npc交谈,寻人
message CGTalkWithNpcReq
{
	optional uint32 npcId = 1;
	optional uint32 missionId = 2;
}

//---------------------------阵营任务-----------------------------
//请求阵营任务列表
message CGGetCampMissionInfoReq
{
	
}

message CampMissionInfo
{
	optional uint32 missionId = 1;  //任务ID
	optional uint32 quality = 2;	//任务品质
	optional bool   isAccept = 3;   //是否接取
}

//阵营任务列表返回
message GCGetCampMissionInfoRsp
{
	repeated CampMissionInfo missionInfoList = 1;		//刷新到可接的阵营任务列表
	optional uint32 times = 2;							//当天完成次数
	optional uint32 boxPorgress = 3;					//宝箱进度
}

//摇骰子
message CGDiceCampMissionReq
{
	optional bool isNormal = 1;							//true表示普通 false表示高级
	optional uint32 missionId = 2;						//指定的任务ID
}

message CGDiceCampMissionRsp
{
	optional uint32 ret = 1;
	optional uint32 missionId = 2;						//摇出的任务ID
}

//领取阵营任务宝箱
message CGGetCampBoxRewardReq
{
	
}

message CGGetCampBoxRewardRsp
{
	optional uint32 ret = 1;
}