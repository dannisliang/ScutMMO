// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffer/Deputy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoBuffer/Deputy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoBuf {

namespace {

const ::google::protobuf::Descriptor* Deputy_CollectSkillInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_CollectSkillInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_CollectSkillInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_CollectSkillInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_MakeSkillInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_MakeSkillInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_MakeSkillInfoRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_MakeSkillInfoRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_UpgradeCollectSkillReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_UpgradeCollectSkillReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_UpgradeCollectSkillRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_UpgradeCollectSkillRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_RefineMakeSkillReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_RefineMakeSkillReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_RefineMakeSkillRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_RefineMakeSkillRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_CollectOperateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_CollectOperateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_CollectOperateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_CollectOperateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_MakeOperateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_MakeOperateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_MakeOperateRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_MakeOperateRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_CollectNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_CollectNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* Deputy_CollectEnergyUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Deputy_CollectEnergyUpdate_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoBuffer_2fDeputy_2eproto() {
  protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoBuffer/Deputy.proto");
  GOOGLE_CHECK(file != NULL);
  Deputy_CollectSkillInfoReq_descriptor_ = file->message_type(0);
  static const int Deputy_CollectSkillInfoReq_offsets_[1] = {
  };
  Deputy_CollectSkillInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_CollectSkillInfoReq_descriptor_,
      Deputy_CollectSkillInfoReq::default_instance_,
      Deputy_CollectSkillInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectSkillInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectSkillInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_CollectSkillInfoReq));
  Deputy_CollectSkillInfoRsp_descriptor_ = file->message_type(1);
  static const int Deputy_CollectSkillInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectSkillInfoRsp, data_),
  };
  Deputy_CollectSkillInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_CollectSkillInfoRsp_descriptor_,
      Deputy_CollectSkillInfoRsp::default_instance_,
      Deputy_CollectSkillInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectSkillInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectSkillInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_CollectSkillInfoRsp));
  Deputy_MakeSkillInfoReq_descriptor_ = file->message_type(2);
  static const int Deputy_MakeSkillInfoReq_offsets_[1] = {
  };
  Deputy_MakeSkillInfoReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_MakeSkillInfoReq_descriptor_,
      Deputy_MakeSkillInfoReq::default_instance_,
      Deputy_MakeSkillInfoReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeSkillInfoReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeSkillInfoReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_MakeSkillInfoReq));
  Deputy_MakeSkillInfoRsp_descriptor_ = file->message_type(3);
  static const int Deputy_MakeSkillInfoRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeSkillInfoRsp, data_),
  };
  Deputy_MakeSkillInfoRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_MakeSkillInfoRsp_descriptor_,
      Deputy_MakeSkillInfoRsp::default_instance_,
      Deputy_MakeSkillInfoRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeSkillInfoRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeSkillInfoRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_MakeSkillInfoRsp));
  Deputy_UpgradeCollectSkillReq_descriptor_ = file->message_type(4);
  static const int Deputy_UpgradeCollectSkillReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillReq, collect_type_),
  };
  Deputy_UpgradeCollectSkillReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_UpgradeCollectSkillReq_descriptor_,
      Deputy_UpgradeCollectSkillReq::default_instance_,
      Deputy_UpgradeCollectSkillReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_UpgradeCollectSkillReq));
  Deputy_UpgradeCollectSkillRsp_descriptor_ = file->message_type(5);
  static const int Deputy_UpgradeCollectSkillRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillRsp, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillRsp, collect_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillRsp, level_),
  };
  Deputy_UpgradeCollectSkillRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_UpgradeCollectSkillRsp_descriptor_,
      Deputy_UpgradeCollectSkillRsp::default_instance_,
      Deputy_UpgradeCollectSkillRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_UpgradeCollectSkillRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_UpgradeCollectSkillRsp));
  Deputy_RefineMakeSkillReq_descriptor_ = file->message_type(6);
  static const int Deputy_RefineMakeSkillReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillReq, make_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillReq, refine_type_),
  };
  Deputy_RefineMakeSkillReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_RefineMakeSkillReq_descriptor_,
      Deputy_RefineMakeSkillReq::default_instance_,
      Deputy_RefineMakeSkillReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_RefineMakeSkillReq));
  Deputy_RefineMakeSkillRsp_descriptor_ = file->message_type(7);
  static const int Deputy_RefineMakeSkillRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillRsp, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillRsp, make_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillRsp, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillRsp, exp_),
  };
  Deputy_RefineMakeSkillRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_RefineMakeSkillRsp_descriptor_,
      Deputy_RefineMakeSkillRsp::default_instance_,
      Deputy_RefineMakeSkillRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_RefineMakeSkillRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_RefineMakeSkillRsp));
  Deputy_CollectOperateReq_descriptor_ = file->message_type(8);
  static const int Deputy_CollectOperateReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectOperateReq, collect_cid_),
  };
  Deputy_CollectOperateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_CollectOperateReq_descriptor_,
      Deputy_CollectOperateReq::default_instance_,
      Deputy_CollectOperateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectOperateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectOperateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_CollectOperateReq));
  Deputy_CollectOperateRsp_descriptor_ = file->message_type(9);
  static const int Deputy_CollectOperateRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectOperateRsp, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectOperateRsp, collect_type_),
  };
  Deputy_CollectOperateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_CollectOperateRsp_descriptor_,
      Deputy_CollectOperateRsp::default_instance_,
      Deputy_CollectOperateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectOperateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectOperateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_CollectOperateRsp));
  Deputy_MakeOperateReq_descriptor_ = file->message_type(10);
  static const int Deputy_MakeOperateReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateReq, make_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateReq, reel_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateReq, make_num_),
  };
  Deputy_MakeOperateReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_MakeOperateReq_descriptor_,
      Deputy_MakeOperateReq::default_instance_,
      Deputy_MakeOperateReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_MakeOperateReq));
  Deputy_MakeOperateRsp_descriptor_ = file->message_type(11);
  static const int Deputy_MakeOperateRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateRsp, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateRsp, make_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateRsp, item_id_),
  };
  Deputy_MakeOperateRsp_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_MakeOperateRsp_descriptor_,
      Deputy_MakeOperateRsp::default_instance_,
      Deputy_MakeOperateRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateRsp, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_MakeOperateRsp, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_MakeOperateRsp));
  Deputy_CollectNotify_descriptor_ = file->message_type(12);
  static const int Deputy_CollectNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectNotify, collect_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectNotify, state_),
  };
  Deputy_CollectNotify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_CollectNotify_descriptor_,
      Deputy_CollectNotify::default_instance_,
      Deputy_CollectNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectNotify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectNotify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_CollectNotify));
  Deputy_CollectEnergyUpdate_descriptor_ = file->message_type(13);
  static const int Deputy_CollectEnergyUpdate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectEnergyUpdate, collect_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectEnergyUpdate, energy_),
  };
  Deputy_CollectEnergyUpdate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Deputy_CollectEnergyUpdate_descriptor_,
      Deputy_CollectEnergyUpdate::default_instance_,
      Deputy_CollectEnergyUpdate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectEnergyUpdate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Deputy_CollectEnergyUpdate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Deputy_CollectEnergyUpdate));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoBuffer_2fDeputy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_CollectSkillInfoReq_descriptor_, &Deputy_CollectSkillInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_CollectSkillInfoRsp_descriptor_, &Deputy_CollectSkillInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_MakeSkillInfoReq_descriptor_, &Deputy_MakeSkillInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_MakeSkillInfoRsp_descriptor_, &Deputy_MakeSkillInfoRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_UpgradeCollectSkillReq_descriptor_, &Deputy_UpgradeCollectSkillReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_UpgradeCollectSkillRsp_descriptor_, &Deputy_UpgradeCollectSkillRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_RefineMakeSkillReq_descriptor_, &Deputy_RefineMakeSkillReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_RefineMakeSkillRsp_descriptor_, &Deputy_RefineMakeSkillRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_CollectOperateReq_descriptor_, &Deputy_CollectOperateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_CollectOperateRsp_descriptor_, &Deputy_CollectOperateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_MakeOperateReq_descriptor_, &Deputy_MakeOperateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_MakeOperateRsp_descriptor_, &Deputy_MakeOperateRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_CollectNotify_descriptor_, &Deputy_CollectNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Deputy_CollectEnergyUpdate_descriptor_, &Deputy_CollectEnergyUpdate::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoBuffer_2fDeputy_2eproto() {
  delete Deputy_CollectSkillInfoReq::default_instance_;
  delete Deputy_CollectSkillInfoReq_reflection_;
  delete Deputy_CollectSkillInfoRsp::default_instance_;
  delete Deputy_CollectSkillInfoRsp_reflection_;
  delete Deputy_MakeSkillInfoReq::default_instance_;
  delete Deputy_MakeSkillInfoReq_reflection_;
  delete Deputy_MakeSkillInfoRsp::default_instance_;
  delete Deputy_MakeSkillInfoRsp_reflection_;
  delete Deputy_UpgradeCollectSkillReq::default_instance_;
  delete Deputy_UpgradeCollectSkillReq_reflection_;
  delete Deputy_UpgradeCollectSkillRsp::default_instance_;
  delete Deputy_UpgradeCollectSkillRsp_reflection_;
  delete Deputy_RefineMakeSkillReq::default_instance_;
  delete Deputy_RefineMakeSkillReq_reflection_;
  delete Deputy_RefineMakeSkillRsp::default_instance_;
  delete Deputy_RefineMakeSkillRsp_reflection_;
  delete Deputy_CollectOperateReq::default_instance_;
  delete Deputy_CollectOperateReq_reflection_;
  delete Deputy_CollectOperateRsp::default_instance_;
  delete Deputy_CollectOperateRsp_reflection_;
  delete Deputy_MakeOperateReq::default_instance_;
  delete Deputy_MakeOperateReq_reflection_;
  delete Deputy_MakeOperateRsp::default_instance_;
  delete Deputy_MakeOperateRsp_reflection_;
  delete Deputy_CollectNotify::default_instance_;
  delete Deputy_CollectNotify_reflection_;
  delete Deputy_CollectEnergyUpdate::default_instance_;
  delete Deputy_CollectEnergyUpdate_reflection_;
}

void protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoBuf::protobuf_AddDesc_ProtoBuffer_2fComProtocol_2eproto();
  ::ProtoBuf::protobuf_AddDesc_ProtoBuffer_2fClientToServerCmd_2eproto();
  ::ProtoBuf::protobuf_AddDesc_Common_2fComDefine_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030ProtoBuffer/Deputy.proto\022\010ProtoBuf\032\035Pr"
    "otoBuffer/ComProtocol.proto\032#ProtoBuffer"
    "/ClientToServerCmd.proto\032\026Common/ComDefi"
    "ne.proto\"\034\n\032Deputy_CollectSkillInfoReq\"H"
    "\n\032Deputy_CollectSkillInfoRsp\022*\n\004data\030\001 \003"
    "(\0132\034.ProtoBuf.SingleDeputyDBData\"\031\n\027Depu"
    "ty_MakeSkillInfoReq\"E\n\027Deputy_MakeSkillI"
    "nfoRsp\022*\n\004data\030\001 \003(\0132\034.ProtoBuf.SingleDe"
    "putyDBData\"5\n\035Deputy_UpgradeCollectSkill"
    "Req\022\024\n\014collect_type\030\001 \002(\005\"U\n\035Deputy_Upgr"
    "adeCollectSkillRsp\022\017\n\007retcode\030\001 \002(\005\022\024\n\014c"
    "ollect_type\030\002 \001(\005\022\r\n\005level\030\003 \001(\005\"C\n\031Depu"
    "ty_RefineMakeSkillReq\022\021\n\tmake_type\030\001 \002(\005"
    "\022\023\n\013refine_type\030\002 \002(\005\"[\n\031Deputy_RefineMa"
    "keSkillRsp\022\017\n\007retcode\030\001 \002(\005\022\021\n\tmake_type"
    "\030\002 \001(\005\022\r\n\005level\030\003 \001(\005\022\013\n\003exp\030\004 \001(\005\"/\n\030De"
    "puty_CollectOperateReq\022\023\n\013collect_cid\030\001 "
    "\002(\r\"A\n\030Deputy_CollectOperateRsp\022\017\n\007retco"
    "de\030\001 \002(\005\022\024\n\014collect_type\030\002 \001(\005\"K\n\025Deputy"
    "_MakeOperateReq\022\017\n\007make_id\030\001 \002(\005\022\017\n\007reel"
    "_id\030\002 \001(\005\022\020\n\010make_num\030\003 \001(\005\"J\n\025Deputy_Ma"
    "keOperateRsp\022\017\n\007retcode\030\001 \002(\005\022\017\n\007make_id"
    "\030\002 \001(\005\022\017\n\007item_id\030\003 \001(\r\";\n\024Deputy_Collec"
    "tNotify\022\024\n\014collect_type\030\001 \002(\005\022\r\n\005state\030\002"
    " \002(\005\"B\n\032Deputy_CollectEnergyUpdate\022\024\n\014co"
    "llect_type\030\001 \002(\005\022\016\n\006energy\030\002 \002(\005", 1032);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoBuffer/Deputy.proto", &protobuf_RegisterTypes);
  Deputy_CollectSkillInfoReq::default_instance_ = new Deputy_CollectSkillInfoReq();
  Deputy_CollectSkillInfoRsp::default_instance_ = new Deputy_CollectSkillInfoRsp();
  Deputy_MakeSkillInfoReq::default_instance_ = new Deputy_MakeSkillInfoReq();
  Deputy_MakeSkillInfoRsp::default_instance_ = new Deputy_MakeSkillInfoRsp();
  Deputy_UpgradeCollectSkillReq::default_instance_ = new Deputy_UpgradeCollectSkillReq();
  Deputy_UpgradeCollectSkillRsp::default_instance_ = new Deputy_UpgradeCollectSkillRsp();
  Deputy_RefineMakeSkillReq::default_instance_ = new Deputy_RefineMakeSkillReq();
  Deputy_RefineMakeSkillRsp::default_instance_ = new Deputy_RefineMakeSkillRsp();
  Deputy_CollectOperateReq::default_instance_ = new Deputy_CollectOperateReq();
  Deputy_CollectOperateRsp::default_instance_ = new Deputy_CollectOperateRsp();
  Deputy_MakeOperateReq::default_instance_ = new Deputy_MakeOperateReq();
  Deputy_MakeOperateRsp::default_instance_ = new Deputy_MakeOperateRsp();
  Deputy_CollectNotify::default_instance_ = new Deputy_CollectNotify();
  Deputy_CollectEnergyUpdate::default_instance_ = new Deputy_CollectEnergyUpdate();
  Deputy_CollectSkillInfoReq::default_instance_->InitAsDefaultInstance();
  Deputy_CollectSkillInfoRsp::default_instance_->InitAsDefaultInstance();
  Deputy_MakeSkillInfoReq::default_instance_->InitAsDefaultInstance();
  Deputy_MakeSkillInfoRsp::default_instance_->InitAsDefaultInstance();
  Deputy_UpgradeCollectSkillReq::default_instance_->InitAsDefaultInstance();
  Deputy_UpgradeCollectSkillRsp::default_instance_->InitAsDefaultInstance();
  Deputy_RefineMakeSkillReq::default_instance_->InitAsDefaultInstance();
  Deputy_RefineMakeSkillRsp::default_instance_->InitAsDefaultInstance();
  Deputy_CollectOperateReq::default_instance_->InitAsDefaultInstance();
  Deputy_CollectOperateRsp::default_instance_->InitAsDefaultInstance();
  Deputy_MakeOperateReq::default_instance_->InitAsDefaultInstance();
  Deputy_MakeOperateRsp::default_instance_->InitAsDefaultInstance();
  Deputy_CollectNotify::default_instance_->InitAsDefaultInstance();
  Deputy_CollectEnergyUpdate::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoBuffer_2fDeputy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoBuffer_2fDeputy_2eproto {
  StaticDescriptorInitializer_ProtoBuffer_2fDeputy_2eproto() {
    protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  }
} static_descriptor_initializer_ProtoBuffer_2fDeputy_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Deputy_CollectSkillInfoReq::Deputy_CollectSkillInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_CollectSkillInfoReq::InitAsDefaultInstance() {
}

Deputy_CollectSkillInfoReq::Deputy_CollectSkillInfoReq(const Deputy_CollectSkillInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_CollectSkillInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_CollectSkillInfoReq::~Deputy_CollectSkillInfoReq() {
  SharedDtor();
}

void Deputy_CollectSkillInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_CollectSkillInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_CollectSkillInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_CollectSkillInfoReq_descriptor_;
}

const Deputy_CollectSkillInfoReq& Deputy_CollectSkillInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_CollectSkillInfoReq* Deputy_CollectSkillInfoReq::default_instance_ = NULL;

Deputy_CollectSkillInfoReq* Deputy_CollectSkillInfoReq::New() const {
  return new Deputy_CollectSkillInfoReq;
}

void Deputy_CollectSkillInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_CollectSkillInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Deputy_CollectSkillInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_CollectSkillInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_CollectSkillInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_CollectSkillInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_CollectSkillInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_CollectSkillInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_CollectSkillInfoReq::MergeFrom(const Deputy_CollectSkillInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_CollectSkillInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_CollectSkillInfoReq::CopyFrom(const Deputy_CollectSkillInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_CollectSkillInfoReq::IsInitialized() const {

  return true;
}

void Deputy_CollectSkillInfoReq::Swap(Deputy_CollectSkillInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_CollectSkillInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_CollectSkillInfoReq_descriptor_;
  metadata.reflection = Deputy_CollectSkillInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_CollectSkillInfoRsp::kDataFieldNumber;
#endif  // !_MSC_VER

Deputy_CollectSkillInfoRsp::Deputy_CollectSkillInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_CollectSkillInfoRsp::InitAsDefaultInstance() {
}

Deputy_CollectSkillInfoRsp::Deputy_CollectSkillInfoRsp(const Deputy_CollectSkillInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_CollectSkillInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_CollectSkillInfoRsp::~Deputy_CollectSkillInfoRsp() {
  SharedDtor();
}

void Deputy_CollectSkillInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_CollectSkillInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_CollectSkillInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_CollectSkillInfoRsp_descriptor_;
}

const Deputy_CollectSkillInfoRsp& Deputy_CollectSkillInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_CollectSkillInfoRsp* Deputy_CollectSkillInfoRsp::default_instance_ = NULL;

Deputy_CollectSkillInfoRsp* Deputy_CollectSkillInfoRsp::New() const {
  return new Deputy_CollectSkillInfoRsp;
}

void Deputy_CollectSkillInfoRsp::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_CollectSkillInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBuf.SingleDeputyDBData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_CollectSkillInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoBuf.SingleDeputyDBData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_CollectSkillInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoBuf.SingleDeputyDBData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_CollectSkillInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoBuf.SingleDeputyDBData data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_CollectSkillInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_CollectSkillInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_CollectSkillInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_CollectSkillInfoRsp::MergeFrom(const Deputy_CollectSkillInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_CollectSkillInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_CollectSkillInfoRsp::CopyFrom(const Deputy_CollectSkillInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_CollectSkillInfoRsp::IsInitialized() const {

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void Deputy_CollectSkillInfoRsp::Swap(Deputy_CollectSkillInfoRsp* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_CollectSkillInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_CollectSkillInfoRsp_descriptor_;
  metadata.reflection = Deputy_CollectSkillInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Deputy_MakeSkillInfoReq::Deputy_MakeSkillInfoReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_MakeSkillInfoReq::InitAsDefaultInstance() {
}

Deputy_MakeSkillInfoReq::Deputy_MakeSkillInfoReq(const Deputy_MakeSkillInfoReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_MakeSkillInfoReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_MakeSkillInfoReq::~Deputy_MakeSkillInfoReq() {
  SharedDtor();
}

void Deputy_MakeSkillInfoReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_MakeSkillInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_MakeSkillInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_MakeSkillInfoReq_descriptor_;
}

const Deputy_MakeSkillInfoReq& Deputy_MakeSkillInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_MakeSkillInfoReq* Deputy_MakeSkillInfoReq::default_instance_ = NULL;

Deputy_MakeSkillInfoReq* Deputy_MakeSkillInfoReq::New() const {
  return new Deputy_MakeSkillInfoReq;
}

void Deputy_MakeSkillInfoReq::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_MakeSkillInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Deputy_MakeSkillInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_MakeSkillInfoReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_MakeSkillInfoReq::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_MakeSkillInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_MakeSkillInfoReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_MakeSkillInfoReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_MakeSkillInfoReq::MergeFrom(const Deputy_MakeSkillInfoReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_MakeSkillInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_MakeSkillInfoReq::CopyFrom(const Deputy_MakeSkillInfoReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_MakeSkillInfoReq::IsInitialized() const {

  return true;
}

void Deputy_MakeSkillInfoReq::Swap(Deputy_MakeSkillInfoReq* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_MakeSkillInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_MakeSkillInfoReq_descriptor_;
  metadata.reflection = Deputy_MakeSkillInfoReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_MakeSkillInfoRsp::kDataFieldNumber;
#endif  // !_MSC_VER

Deputy_MakeSkillInfoRsp::Deputy_MakeSkillInfoRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_MakeSkillInfoRsp::InitAsDefaultInstance() {
}

Deputy_MakeSkillInfoRsp::Deputy_MakeSkillInfoRsp(const Deputy_MakeSkillInfoRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_MakeSkillInfoRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_MakeSkillInfoRsp::~Deputy_MakeSkillInfoRsp() {
  SharedDtor();
}

void Deputy_MakeSkillInfoRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_MakeSkillInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_MakeSkillInfoRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_MakeSkillInfoRsp_descriptor_;
}

const Deputy_MakeSkillInfoRsp& Deputy_MakeSkillInfoRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_MakeSkillInfoRsp* Deputy_MakeSkillInfoRsp::default_instance_ = NULL;

Deputy_MakeSkillInfoRsp* Deputy_MakeSkillInfoRsp::New() const {
  return new Deputy_MakeSkillInfoRsp;
}

void Deputy_MakeSkillInfoRsp::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_MakeSkillInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBuf.SingleDeputyDBData data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_MakeSkillInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoBuf.SingleDeputyDBData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_MakeSkillInfoRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoBuf.SingleDeputyDBData data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_MakeSkillInfoRsp::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoBuf.SingleDeputyDBData data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_MakeSkillInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_MakeSkillInfoRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_MakeSkillInfoRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_MakeSkillInfoRsp::MergeFrom(const Deputy_MakeSkillInfoRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_MakeSkillInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_MakeSkillInfoRsp::CopyFrom(const Deputy_MakeSkillInfoRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_MakeSkillInfoRsp::IsInitialized() const {

  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void Deputy_MakeSkillInfoRsp::Swap(Deputy_MakeSkillInfoRsp* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_MakeSkillInfoRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_MakeSkillInfoRsp_descriptor_;
  metadata.reflection = Deputy_MakeSkillInfoRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_UpgradeCollectSkillReq::kCollectTypeFieldNumber;
#endif  // !_MSC_VER

Deputy_UpgradeCollectSkillReq::Deputy_UpgradeCollectSkillReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_UpgradeCollectSkillReq::InitAsDefaultInstance() {
}

Deputy_UpgradeCollectSkillReq::Deputy_UpgradeCollectSkillReq(const Deputy_UpgradeCollectSkillReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_UpgradeCollectSkillReq::SharedCtor() {
  _cached_size_ = 0;
  collect_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_UpgradeCollectSkillReq::~Deputy_UpgradeCollectSkillReq() {
  SharedDtor();
}

void Deputy_UpgradeCollectSkillReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_UpgradeCollectSkillReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_UpgradeCollectSkillReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_UpgradeCollectSkillReq_descriptor_;
}

const Deputy_UpgradeCollectSkillReq& Deputy_UpgradeCollectSkillReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_UpgradeCollectSkillReq* Deputy_UpgradeCollectSkillReq::default_instance_ = NULL;

Deputy_UpgradeCollectSkillReq* Deputy_UpgradeCollectSkillReq::New() const {
  return new Deputy_UpgradeCollectSkillReq;
}

void Deputy_UpgradeCollectSkillReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    collect_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_UpgradeCollectSkillReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 collect_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collect_type_)));
          set_has_collect_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_UpgradeCollectSkillReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 collect_type = 1;
  if (has_collect_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->collect_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_UpgradeCollectSkillReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 collect_type = 1;
  if (has_collect_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->collect_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_UpgradeCollectSkillReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 collect_type = 1;
    if (has_collect_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collect_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_UpgradeCollectSkillReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_UpgradeCollectSkillReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_UpgradeCollectSkillReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_UpgradeCollectSkillReq::MergeFrom(const Deputy_UpgradeCollectSkillReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_collect_type()) {
      set_collect_type(from.collect_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_UpgradeCollectSkillReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_UpgradeCollectSkillReq::CopyFrom(const Deputy_UpgradeCollectSkillReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_UpgradeCollectSkillReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Deputy_UpgradeCollectSkillReq::Swap(Deputy_UpgradeCollectSkillReq* other) {
  if (other != this) {
    std::swap(collect_type_, other->collect_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_UpgradeCollectSkillReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_UpgradeCollectSkillReq_descriptor_;
  metadata.reflection = Deputy_UpgradeCollectSkillReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_UpgradeCollectSkillRsp::kRetcodeFieldNumber;
const int Deputy_UpgradeCollectSkillRsp::kCollectTypeFieldNumber;
const int Deputy_UpgradeCollectSkillRsp::kLevelFieldNumber;
#endif  // !_MSC_VER

Deputy_UpgradeCollectSkillRsp::Deputy_UpgradeCollectSkillRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_UpgradeCollectSkillRsp::InitAsDefaultInstance() {
}

Deputy_UpgradeCollectSkillRsp::Deputy_UpgradeCollectSkillRsp(const Deputy_UpgradeCollectSkillRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_UpgradeCollectSkillRsp::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  collect_type_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_UpgradeCollectSkillRsp::~Deputy_UpgradeCollectSkillRsp() {
  SharedDtor();
}

void Deputy_UpgradeCollectSkillRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_UpgradeCollectSkillRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_UpgradeCollectSkillRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_UpgradeCollectSkillRsp_descriptor_;
}

const Deputy_UpgradeCollectSkillRsp& Deputy_UpgradeCollectSkillRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_UpgradeCollectSkillRsp* Deputy_UpgradeCollectSkillRsp::default_instance_ = NULL;

Deputy_UpgradeCollectSkillRsp* Deputy_UpgradeCollectSkillRsp::New() const {
  return new Deputy_UpgradeCollectSkillRsp;
}

void Deputy_UpgradeCollectSkillRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0;
    collect_type_ = 0;
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_UpgradeCollectSkillRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_collect_type;
        break;
      }

      // optional int32 collect_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_collect_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collect_type_)));
          set_has_collect_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_UpgradeCollectSkillRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // optional int32 collect_type = 2;
  if (has_collect_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->collect_type(), output);
  }

  // optional int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_UpgradeCollectSkillRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 collect_type = 2;
  if (has_collect_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->collect_type(), target);
  }

  // optional int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_UpgradeCollectSkillRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

    // optional int32 collect_type = 2;
    if (has_collect_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collect_type());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_UpgradeCollectSkillRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_UpgradeCollectSkillRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_UpgradeCollectSkillRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_UpgradeCollectSkillRsp::MergeFrom(const Deputy_UpgradeCollectSkillRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
    if (from.has_collect_type()) {
      set_collect_type(from.collect_type());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_UpgradeCollectSkillRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_UpgradeCollectSkillRsp::CopyFrom(const Deputy_UpgradeCollectSkillRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_UpgradeCollectSkillRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Deputy_UpgradeCollectSkillRsp::Swap(Deputy_UpgradeCollectSkillRsp* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(collect_type_, other->collect_type_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_UpgradeCollectSkillRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_UpgradeCollectSkillRsp_descriptor_;
  metadata.reflection = Deputy_UpgradeCollectSkillRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_RefineMakeSkillReq::kMakeTypeFieldNumber;
const int Deputy_RefineMakeSkillReq::kRefineTypeFieldNumber;
#endif  // !_MSC_VER

Deputy_RefineMakeSkillReq::Deputy_RefineMakeSkillReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_RefineMakeSkillReq::InitAsDefaultInstance() {
}

Deputy_RefineMakeSkillReq::Deputy_RefineMakeSkillReq(const Deputy_RefineMakeSkillReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_RefineMakeSkillReq::SharedCtor() {
  _cached_size_ = 0;
  make_type_ = 0;
  refine_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_RefineMakeSkillReq::~Deputy_RefineMakeSkillReq() {
  SharedDtor();
}

void Deputy_RefineMakeSkillReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_RefineMakeSkillReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_RefineMakeSkillReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_RefineMakeSkillReq_descriptor_;
}

const Deputy_RefineMakeSkillReq& Deputy_RefineMakeSkillReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_RefineMakeSkillReq* Deputy_RefineMakeSkillReq::default_instance_ = NULL;

Deputy_RefineMakeSkillReq* Deputy_RefineMakeSkillReq::New() const {
  return new Deputy_RefineMakeSkillReq;
}

void Deputy_RefineMakeSkillReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    make_type_ = 0;
    refine_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_RefineMakeSkillReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 make_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &make_type_)));
          set_has_make_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_refine_type;
        break;
      }

      // required int32 refine_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refine_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refine_type_)));
          set_has_refine_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_RefineMakeSkillReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 make_type = 1;
  if (has_make_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->make_type(), output);
  }

  // required int32 refine_type = 2;
  if (has_refine_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->refine_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_RefineMakeSkillReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 make_type = 1;
  if (has_make_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->make_type(), target);
  }

  // required int32 refine_type = 2;
  if (has_refine_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->refine_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_RefineMakeSkillReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 make_type = 1;
    if (has_make_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->make_type());
    }

    // required int32 refine_type = 2;
    if (has_refine_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refine_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_RefineMakeSkillReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_RefineMakeSkillReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_RefineMakeSkillReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_RefineMakeSkillReq::MergeFrom(const Deputy_RefineMakeSkillReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_make_type()) {
      set_make_type(from.make_type());
    }
    if (from.has_refine_type()) {
      set_refine_type(from.refine_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_RefineMakeSkillReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_RefineMakeSkillReq::CopyFrom(const Deputy_RefineMakeSkillReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_RefineMakeSkillReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Deputy_RefineMakeSkillReq::Swap(Deputy_RefineMakeSkillReq* other) {
  if (other != this) {
    std::swap(make_type_, other->make_type_);
    std::swap(refine_type_, other->refine_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_RefineMakeSkillReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_RefineMakeSkillReq_descriptor_;
  metadata.reflection = Deputy_RefineMakeSkillReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_RefineMakeSkillRsp::kRetcodeFieldNumber;
const int Deputy_RefineMakeSkillRsp::kMakeTypeFieldNumber;
const int Deputy_RefineMakeSkillRsp::kLevelFieldNumber;
const int Deputy_RefineMakeSkillRsp::kExpFieldNumber;
#endif  // !_MSC_VER

Deputy_RefineMakeSkillRsp::Deputy_RefineMakeSkillRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_RefineMakeSkillRsp::InitAsDefaultInstance() {
}

Deputy_RefineMakeSkillRsp::Deputy_RefineMakeSkillRsp(const Deputy_RefineMakeSkillRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_RefineMakeSkillRsp::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  make_type_ = 0;
  level_ = 0;
  exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_RefineMakeSkillRsp::~Deputy_RefineMakeSkillRsp() {
  SharedDtor();
}

void Deputy_RefineMakeSkillRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_RefineMakeSkillRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_RefineMakeSkillRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_RefineMakeSkillRsp_descriptor_;
}

const Deputy_RefineMakeSkillRsp& Deputy_RefineMakeSkillRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_RefineMakeSkillRsp* Deputy_RefineMakeSkillRsp::default_instance_ = NULL;

Deputy_RefineMakeSkillRsp* Deputy_RefineMakeSkillRsp::New() const {
  return new Deputy_RefineMakeSkillRsp;
}

void Deputy_RefineMakeSkillRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0;
    make_type_ = 0;
    level_ = 0;
    exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_RefineMakeSkillRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_make_type;
        break;
      }

      // optional int32 make_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_make_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &make_type_)));
          set_has_make_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // optional int32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }

      // optional int32 exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_RefineMakeSkillRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // optional int32 make_type = 2;
  if (has_make_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->make_type(), output);
  }

  // optional int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional int32 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_RefineMakeSkillRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 make_type = 2;
  if (has_make_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->make_type(), target);
  }

  // optional int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional int32 exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_RefineMakeSkillRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

    // optional int32 make_type = 2;
    if (has_make_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->make_type());
    }

    // optional int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_RefineMakeSkillRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_RefineMakeSkillRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_RefineMakeSkillRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_RefineMakeSkillRsp::MergeFrom(const Deputy_RefineMakeSkillRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
    if (from.has_make_type()) {
      set_make_type(from.make_type());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_RefineMakeSkillRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_RefineMakeSkillRsp::CopyFrom(const Deputy_RefineMakeSkillRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_RefineMakeSkillRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Deputy_RefineMakeSkillRsp::Swap(Deputy_RefineMakeSkillRsp* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(make_type_, other->make_type_);
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_RefineMakeSkillRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_RefineMakeSkillRsp_descriptor_;
  metadata.reflection = Deputy_RefineMakeSkillRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_CollectOperateReq::kCollectCidFieldNumber;
#endif  // !_MSC_VER

Deputy_CollectOperateReq::Deputy_CollectOperateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_CollectOperateReq::InitAsDefaultInstance() {
}

Deputy_CollectOperateReq::Deputy_CollectOperateReq(const Deputy_CollectOperateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_CollectOperateReq::SharedCtor() {
  _cached_size_ = 0;
  collect_cid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_CollectOperateReq::~Deputy_CollectOperateReq() {
  SharedDtor();
}

void Deputy_CollectOperateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_CollectOperateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_CollectOperateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_CollectOperateReq_descriptor_;
}

const Deputy_CollectOperateReq& Deputy_CollectOperateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_CollectOperateReq* Deputy_CollectOperateReq::default_instance_ = NULL;

Deputy_CollectOperateReq* Deputy_CollectOperateReq::New() const {
  return new Deputy_CollectOperateReq;
}

void Deputy_CollectOperateReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    collect_cid_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_CollectOperateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 collect_cid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &collect_cid_)));
          set_has_collect_cid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_CollectOperateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 collect_cid = 1;
  if (has_collect_cid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->collect_cid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_CollectOperateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 collect_cid = 1;
  if (has_collect_cid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->collect_cid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_CollectOperateReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 collect_cid = 1;
    if (has_collect_cid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->collect_cid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_CollectOperateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_CollectOperateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_CollectOperateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_CollectOperateReq::MergeFrom(const Deputy_CollectOperateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_collect_cid()) {
      set_collect_cid(from.collect_cid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_CollectOperateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_CollectOperateReq::CopyFrom(const Deputy_CollectOperateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_CollectOperateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Deputy_CollectOperateReq::Swap(Deputy_CollectOperateReq* other) {
  if (other != this) {
    std::swap(collect_cid_, other->collect_cid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_CollectOperateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_CollectOperateReq_descriptor_;
  metadata.reflection = Deputy_CollectOperateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_CollectOperateRsp::kRetcodeFieldNumber;
const int Deputy_CollectOperateRsp::kCollectTypeFieldNumber;
#endif  // !_MSC_VER

Deputy_CollectOperateRsp::Deputy_CollectOperateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_CollectOperateRsp::InitAsDefaultInstance() {
}

Deputy_CollectOperateRsp::Deputy_CollectOperateRsp(const Deputy_CollectOperateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_CollectOperateRsp::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  collect_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_CollectOperateRsp::~Deputy_CollectOperateRsp() {
  SharedDtor();
}

void Deputy_CollectOperateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_CollectOperateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_CollectOperateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_CollectOperateRsp_descriptor_;
}

const Deputy_CollectOperateRsp& Deputy_CollectOperateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_CollectOperateRsp* Deputy_CollectOperateRsp::default_instance_ = NULL;

Deputy_CollectOperateRsp* Deputy_CollectOperateRsp::New() const {
  return new Deputy_CollectOperateRsp;
}

void Deputy_CollectOperateRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0;
    collect_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_CollectOperateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_collect_type;
        break;
      }

      // optional int32 collect_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_collect_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collect_type_)));
          set_has_collect_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_CollectOperateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // optional int32 collect_type = 2;
  if (has_collect_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->collect_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_CollectOperateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 collect_type = 2;
  if (has_collect_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->collect_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_CollectOperateRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

    // optional int32 collect_type = 2;
    if (has_collect_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collect_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_CollectOperateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_CollectOperateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_CollectOperateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_CollectOperateRsp::MergeFrom(const Deputy_CollectOperateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
    if (from.has_collect_type()) {
      set_collect_type(from.collect_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_CollectOperateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_CollectOperateRsp::CopyFrom(const Deputy_CollectOperateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_CollectOperateRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Deputy_CollectOperateRsp::Swap(Deputy_CollectOperateRsp* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(collect_type_, other->collect_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_CollectOperateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_CollectOperateRsp_descriptor_;
  metadata.reflection = Deputy_CollectOperateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_MakeOperateReq::kMakeIdFieldNumber;
const int Deputy_MakeOperateReq::kReelIdFieldNumber;
const int Deputy_MakeOperateReq::kMakeNumFieldNumber;
#endif  // !_MSC_VER

Deputy_MakeOperateReq::Deputy_MakeOperateReq()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_MakeOperateReq::InitAsDefaultInstance() {
}

Deputy_MakeOperateReq::Deputy_MakeOperateReq(const Deputy_MakeOperateReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_MakeOperateReq::SharedCtor() {
  _cached_size_ = 0;
  make_id_ = 0;
  reel_id_ = 0;
  make_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_MakeOperateReq::~Deputy_MakeOperateReq() {
  SharedDtor();
}

void Deputy_MakeOperateReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_MakeOperateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_MakeOperateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_MakeOperateReq_descriptor_;
}

const Deputy_MakeOperateReq& Deputy_MakeOperateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_MakeOperateReq* Deputy_MakeOperateReq::default_instance_ = NULL;

Deputy_MakeOperateReq* Deputy_MakeOperateReq::New() const {
  return new Deputy_MakeOperateReq;
}

void Deputy_MakeOperateReq::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    make_id_ = 0;
    reel_id_ = 0;
    make_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_MakeOperateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 make_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &make_id_)));
          set_has_make_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reel_id;
        break;
      }

      // optional int32 reel_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reel_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reel_id_)));
          set_has_reel_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_make_num;
        break;
      }

      // optional int32 make_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_make_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &make_num_)));
          set_has_make_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_MakeOperateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 make_id = 1;
  if (has_make_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->make_id(), output);
  }

  // optional int32 reel_id = 2;
  if (has_reel_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reel_id(), output);
  }

  // optional int32 make_num = 3;
  if (has_make_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->make_num(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_MakeOperateReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 make_id = 1;
  if (has_make_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->make_id(), target);
  }

  // optional int32 reel_id = 2;
  if (has_reel_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reel_id(), target);
  }

  // optional int32 make_num = 3;
  if (has_make_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->make_num(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_MakeOperateReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 make_id = 1;
    if (has_make_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->make_id());
    }

    // optional int32 reel_id = 2;
    if (has_reel_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reel_id());
    }

    // optional int32 make_num = 3;
    if (has_make_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->make_num());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_MakeOperateReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_MakeOperateReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_MakeOperateReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_MakeOperateReq::MergeFrom(const Deputy_MakeOperateReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_make_id()) {
      set_make_id(from.make_id());
    }
    if (from.has_reel_id()) {
      set_reel_id(from.reel_id());
    }
    if (from.has_make_num()) {
      set_make_num(from.make_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_MakeOperateReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_MakeOperateReq::CopyFrom(const Deputy_MakeOperateReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_MakeOperateReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Deputy_MakeOperateReq::Swap(Deputy_MakeOperateReq* other) {
  if (other != this) {
    std::swap(make_id_, other->make_id_);
    std::swap(reel_id_, other->reel_id_);
    std::swap(make_num_, other->make_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_MakeOperateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_MakeOperateReq_descriptor_;
  metadata.reflection = Deputy_MakeOperateReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_MakeOperateRsp::kRetcodeFieldNumber;
const int Deputy_MakeOperateRsp::kMakeIdFieldNumber;
const int Deputy_MakeOperateRsp::kItemIdFieldNumber;
#endif  // !_MSC_VER

Deputy_MakeOperateRsp::Deputy_MakeOperateRsp()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_MakeOperateRsp::InitAsDefaultInstance() {
}

Deputy_MakeOperateRsp::Deputy_MakeOperateRsp(const Deputy_MakeOperateRsp& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_MakeOperateRsp::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  make_id_ = 0;
  item_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_MakeOperateRsp::~Deputy_MakeOperateRsp() {
  SharedDtor();
}

void Deputy_MakeOperateRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_MakeOperateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_MakeOperateRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_MakeOperateRsp_descriptor_;
}

const Deputy_MakeOperateRsp& Deputy_MakeOperateRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_MakeOperateRsp* Deputy_MakeOperateRsp::default_instance_ = NULL;

Deputy_MakeOperateRsp* Deputy_MakeOperateRsp::New() const {
  return new Deputy_MakeOperateRsp;
}

void Deputy_MakeOperateRsp::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    retcode_ = 0;
    make_id_ = 0;
    item_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_MakeOperateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retcode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
          set_has_retcode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_make_id;
        break;
      }

      // optional int32 make_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_make_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &make_id_)));
          set_has_make_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }

      // optional uint32 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_MakeOperateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // optional int32 make_id = 2;
  if (has_make_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->make_id(), output);
  }

  // optional uint32 item_id = 3;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_MakeOperateRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 make_id = 2;
  if (has_make_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->make_id(), target);
  }

  // optional uint32 item_id = 3;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_MakeOperateRsp::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

    // optional int32 make_id = 2;
    if (has_make_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->make_id());
    }

    // optional uint32 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_MakeOperateRsp::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_MakeOperateRsp* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_MakeOperateRsp*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_MakeOperateRsp::MergeFrom(const Deputy_MakeOperateRsp& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
    if (from.has_make_id()) {
      set_make_id(from.make_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_MakeOperateRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_MakeOperateRsp::CopyFrom(const Deputy_MakeOperateRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_MakeOperateRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Deputy_MakeOperateRsp::Swap(Deputy_MakeOperateRsp* other) {
  if (other != this) {
    std::swap(retcode_, other->retcode_);
    std::swap(make_id_, other->make_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_MakeOperateRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_MakeOperateRsp_descriptor_;
  metadata.reflection = Deputy_MakeOperateRsp_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_CollectNotify::kCollectTypeFieldNumber;
const int Deputy_CollectNotify::kStateFieldNumber;
#endif  // !_MSC_VER

Deputy_CollectNotify::Deputy_CollectNotify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_CollectNotify::InitAsDefaultInstance() {
}

Deputy_CollectNotify::Deputy_CollectNotify(const Deputy_CollectNotify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_CollectNotify::SharedCtor() {
  _cached_size_ = 0;
  collect_type_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_CollectNotify::~Deputy_CollectNotify() {
  SharedDtor();
}

void Deputy_CollectNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_CollectNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_CollectNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_CollectNotify_descriptor_;
}

const Deputy_CollectNotify& Deputy_CollectNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_CollectNotify* Deputy_CollectNotify::default_instance_ = NULL;

Deputy_CollectNotify* Deputy_CollectNotify::New() const {
  return new Deputy_CollectNotify;
}

void Deputy_CollectNotify::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    collect_type_ = 0;
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_CollectNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 collect_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collect_type_)));
          set_has_collect_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // required int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_CollectNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 collect_type = 1;
  if (has_collect_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->collect_type(), output);
  }

  // required int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_CollectNotify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 collect_type = 1;
  if (has_collect_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->collect_type(), target);
  }

  // required int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_CollectNotify::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 collect_type = 1;
    if (has_collect_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collect_type());
    }

    // required int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_CollectNotify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_CollectNotify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_CollectNotify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_CollectNotify::MergeFrom(const Deputy_CollectNotify& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_collect_type()) {
      set_collect_type(from.collect_type());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_CollectNotify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_CollectNotify::CopyFrom(const Deputy_CollectNotify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_CollectNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Deputy_CollectNotify::Swap(Deputy_CollectNotify* other) {
  if (other != this) {
    std::swap(collect_type_, other->collect_type_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_CollectNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_CollectNotify_descriptor_;
  metadata.reflection = Deputy_CollectNotify_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Deputy_CollectEnergyUpdate::kCollectTypeFieldNumber;
const int Deputy_CollectEnergyUpdate::kEnergyFieldNumber;
#endif  // !_MSC_VER

Deputy_CollectEnergyUpdate::Deputy_CollectEnergyUpdate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Deputy_CollectEnergyUpdate::InitAsDefaultInstance() {
}

Deputy_CollectEnergyUpdate::Deputy_CollectEnergyUpdate(const Deputy_CollectEnergyUpdate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Deputy_CollectEnergyUpdate::SharedCtor() {
  _cached_size_ = 0;
  collect_type_ = 0;
  energy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Deputy_CollectEnergyUpdate::~Deputy_CollectEnergyUpdate() {
  SharedDtor();
}

void Deputy_CollectEnergyUpdate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Deputy_CollectEnergyUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Deputy_CollectEnergyUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Deputy_CollectEnergyUpdate_descriptor_;
}

const Deputy_CollectEnergyUpdate& Deputy_CollectEnergyUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoBuffer_2fDeputy_2eproto();
  return *default_instance_;
}

Deputy_CollectEnergyUpdate* Deputy_CollectEnergyUpdate::default_instance_ = NULL;

Deputy_CollectEnergyUpdate* Deputy_CollectEnergyUpdate::New() const {
  return new Deputy_CollectEnergyUpdate;
}

void Deputy_CollectEnergyUpdate::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    collect_type_ = 0;
    energy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Deputy_CollectEnergyUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 collect_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collect_type_)));
          set_has_collect_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_energy;
        break;
      }

      // required int32 energy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_energy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &energy_)));
          set_has_energy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Deputy_CollectEnergyUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 collect_type = 1;
  if (has_collect_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->collect_type(), output);
  }

  // required int32 energy = 2;
  if (has_energy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->energy(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Deputy_CollectEnergyUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 collect_type = 1;
  if (has_collect_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->collect_type(), target);
  }

  // required int32 energy = 2;
  if (has_energy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->energy(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Deputy_CollectEnergyUpdate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 collect_type = 1;
    if (has_collect_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collect_type());
    }

    // required int32 energy = 2;
    if (has_energy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->energy());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Deputy_CollectEnergyUpdate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Deputy_CollectEnergyUpdate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Deputy_CollectEnergyUpdate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Deputy_CollectEnergyUpdate::MergeFrom(const Deputy_CollectEnergyUpdate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_collect_type()) {
      set_collect_type(from.collect_type());
    }
    if (from.has_energy()) {
      set_energy(from.energy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Deputy_CollectEnergyUpdate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Deputy_CollectEnergyUpdate::CopyFrom(const Deputy_CollectEnergyUpdate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deputy_CollectEnergyUpdate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Deputy_CollectEnergyUpdate::Swap(Deputy_CollectEnergyUpdate* other) {
  if (other != this) {
    std::swap(collect_type_, other->collect_type_);
    std::swap(energy_, other->energy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Deputy_CollectEnergyUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Deputy_CollectEnergyUpdate_descriptor_;
  metadata.reflection = Deputy_CollectEnergyUpdate_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

// @@protoc_insertion_point(global_scope)
