// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffer/LogicToClient.proto

#ifndef PROTOBUF_ProtoBuffer_2fLogicToClient_2eproto__INCLUDED
#define PROTOBUF_ProtoBuffer_2fLogicToClient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBuffer/ComProtocol.pb.h"
#include "Common/ComDefine.pb.h"
#include "ProtoBuffer/ServerToClientCmd.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

class PlayerClientInfo;
class CreaturesCreateData;
class CreaturesCreateData_Player;
class CreaturesCreateData_Monster;
class CreaturesCreateData_Npc;
class CreaturesCreateData_Drop;
class CreaturesCreateData_Summon;
class CreaturesCreateData_Pet;
class CreaturesCreateData_Herbs;
class CreaturesCreateData_Mine;
class CreaturesCreateData_Fish;
class CreatureDestoryData;
class SynAttrsAllClient;
class SynAttrsToSingleClient;
class CreaturesLevUp;
class CreaturesLevUp_Player;
class AccountLoginLogicResponse;
class NotifyClientState;
class NotifyLogoutGame;
class NotifyLogoutGame_SwitchServerParam;
class ClientCharacterListResponse;
class ClientCreateCharacterResponse;
class ClientDelCharacterRsp;
class ReconnectResponse;
class SyncActorMove;
class TransSceneRet;
class NotifyLoadMap;
class NotifyTransLogicNode;
class UseSkillResult;
class UseSkillResult_Target;
class BroadcastSkillUse;
class UseBuffResult;
class UseBuffResult_Target;
class LevUpSkillRsp;
class BroadcastUseSkillStop;
class BuffBagDetailInfo;
class BuffStateChangeInfo;
class AiPlayIdleInfo;
class PvpKillingValueBroadCast;
class PvpRedPlayer;
class BuffReplaceNormalSkills;

enum AccountLoginLogicResponse_RESULT {
  AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_SUCESS = 0,
  AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_TIME_OUT = 1,
  AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_INVALID = 2,
  AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_BLACK = 3,
  AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_REFUSE = 4,
  AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_ALREADY_ONLINE = 5,
  AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_UNKNOWN = 6
};
bool AccountLoginLogicResponse_RESULT_IsValid(int value);
const AccountLoginLogicResponse_RESULT AccountLoginLogicResponse_RESULT_RESULT_MIN = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_SUCESS;
const AccountLoginLogicResponse_RESULT AccountLoginLogicResponse_RESULT_RESULT_MAX = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_UNKNOWN;
const int AccountLoginLogicResponse_RESULT_RESULT_ARRAYSIZE = AccountLoginLogicResponse_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccountLoginLogicResponse_RESULT_descriptor();
inline const ::std::string& AccountLoginLogicResponse_RESULT_Name(AccountLoginLogicResponse_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccountLoginLogicResponse_RESULT_descriptor(), value);
}
inline bool AccountLoginLogicResponse_RESULT_Parse(
    const ::std::string& name, AccountLoginLogicResponse_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccountLoginLogicResponse_RESULT>(
    AccountLoginLogicResponse_RESULT_descriptor(), name, value);
}
enum ClientCreateCharacterResponse_RESULT {
  ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_SUCCESS = 0,
  ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_FAIL = 1,
  ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_NAME_EXSIT = 2,
  ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_NAME_LENGTH = 3,
  ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_NAME_ERROR = 4,
  ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_MAX_COUNT = 5
};
bool ClientCreateCharacterResponse_RESULT_IsValid(int value);
const ClientCreateCharacterResponse_RESULT ClientCreateCharacterResponse_RESULT_RESULT_MIN = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_SUCCESS;
const ClientCreateCharacterResponse_RESULT ClientCreateCharacterResponse_RESULT_RESULT_MAX = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_MAX_COUNT;
const int ClientCreateCharacterResponse_RESULT_RESULT_ARRAYSIZE = ClientCreateCharacterResponse_RESULT_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientCreateCharacterResponse_RESULT_descriptor();
inline const ::std::string& ClientCreateCharacterResponse_RESULT_Name(ClientCreateCharacterResponse_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientCreateCharacterResponse_RESULT_descriptor(), value);
}
inline bool ClientCreateCharacterResponse_RESULT_Parse(
    const ::std::string& name, ClientCreateCharacterResponse_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientCreateCharacterResponse_RESULT>(
    ClientCreateCharacterResponse_RESULT_descriptor(), name, value);
}
enum ReconnectResponse_Result {
  ReconnectResponse_Result_SUCCESS = 1,
  ReconnectResponse_Result_FAILED = 2
};
bool ReconnectResponse_Result_IsValid(int value);
const ReconnectResponse_Result ReconnectResponse_Result_Result_MIN = ReconnectResponse_Result_SUCCESS;
const ReconnectResponse_Result ReconnectResponse_Result_Result_MAX = ReconnectResponse_Result_FAILED;
const int ReconnectResponse_Result_Result_ARRAYSIZE = ReconnectResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReconnectResponse_Result_descriptor();
inline const ::std::string& ReconnectResponse_Result_Name(ReconnectResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReconnectResponse_Result_descriptor(), value);
}
inline bool ReconnectResponse_Result_Parse(
    const ::std::string& name, ReconnectResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReconnectResponse_Result>(
    ReconnectResponse_Result_descriptor(), name, value);
}
// ===================================================================

class PlayerClientInfo : public ::google::protobuf::Message {
 public:
  PlayerClientInfo();
  virtual ~PlayerClientInfo();

  PlayerClientInfo(const PlayerClientInfo& from);

  inline PlayerClientInfo& operator=(const PlayerClientInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerClientInfo& default_instance();

  void Swap(PlayerClientInfo* other);

  // implements Message ----------------------------------------------

  PlayerClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerClientInfo& from);
  void MergeFrom(const PlayerClientInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string playername = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // required uint32 groupId = 3;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 groupid() const;
  inline void set_groupid(::google::protobuf::uint32 value);

  // required uint64 createTime = 4;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreateTimeFieldNumber = 4;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // required uint64 loginTime = 5;
  inline bool has_logintime() const;
  inline void clear_logintime();
  static const int kLoginTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 logintime() const;
  inline void set_logintime(::google::protobuf::uint64 value);

  // required uint32 mapId = 6;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 6;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required float posX = 7;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 7;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 8;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 8;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 9;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 9;
  inline float posz() const;
  inline void set_posz(float value);

  // required float mspeed = 10;
  inline bool has_mspeed() const;
  inline void clear_mspeed();
  static const int kMspeedFieldNumber = 10;
  inline float mspeed() const;
  inline void set_mspeed(float value);

  // required uint32 namebody = 11;
  inline bool has_namebody() const;
  inline void clear_namebody();
  static const int kNamebodyFieldNumber = 11;
  inline ::google::protobuf::uint32 namebody() const;
  inline void set_namebody(::google::protobuf::uint32 value);

  // required uint32 nameweapon = 12;
  inline bool has_nameweapon() const;
  inline void clear_nameweapon();
  static const int kNameweaponFieldNumber = 12;
  inline ::google::protobuf::uint32 nameweapon() const;
  inline void set_nameweapon(::google::protobuf::uint32 value);

  // required uint32 curstate = 13;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurstateFieldNumber = 13;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.SkillCell skills = 14;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 14;
  inline const ::ProtoBuf::SkillCell& skills(int index) const;
  inline ::ProtoBuf::SkillCell* mutable_skills(int index);
  inline ::ProtoBuf::SkillCell* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >*
      mutable_skills();

  // repeated .ProtoBuf.Attr playerAttrs = 15;
  inline int playerattrs_size() const;
  inline void clear_playerattrs();
  static const int kPlayerAttrsFieldNumber = 15;
  inline const ::ProtoBuf::Attr& playerattrs(int index) const;
  inline ::ProtoBuf::Attr* mutable_playerattrs(int index);
  inline ::ProtoBuf::Attr* add_playerattrs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
      playerattrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
      mutable_playerattrs();

  // required uint32 pk_mode = 16;
  inline bool has_pk_mode() const;
  inline void clear_pk_mode();
  static const int kPkModeFieldNumber = 16;
  inline ::google::protobuf::uint32 pk_mode() const;
  inline void set_pk_mode(::google::protobuf::uint32 value);

  // required uint32 pk_killing_value = 17;
  inline bool has_pk_killing_value() const;
  inline void clear_pk_killing_value();
  static const int kPkKillingValueFieldNumber = 17;
  inline ::google::protobuf::uint32 pk_killing_value() const;
  inline void set_pk_killing_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.PlayerClientInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_logintime();
  inline void clear_has_logintime();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_mspeed();
  inline void clear_has_mspeed();
  inline void set_has_namebody();
  inline void clear_has_namebody();
  inline void set_has_nameweapon();
  inline void clear_has_nameweapon();
  inline void set_has_curstate();
  inline void clear_has_curstate();
  inline void set_has_pk_mode();
  inline void clear_has_pk_mode();
  inline void set_has_pk_killing_value();
  inline void clear_has_pk_killing_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* playername_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 groupid_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::uint64 logintime_;
  ::google::protobuf::uint32 mapid_;
  float posx_;
  float posy_;
  float posz_;
  float mspeed_;
  ::google::protobuf::uint32 namebody_;
  ::google::protobuf::uint32 nameweapon_;
  ::google::protobuf::uint32 curstate_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell > skills_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr > playerattrs_;
  ::google::protobuf::uint32 pk_mode_;
  ::google::protobuf::uint32 pk_killing_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static PlayerClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Player : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Player();
  virtual ~CreaturesCreateData_Player();

  CreaturesCreateData_Player(const CreaturesCreateData_Player& from);

  inline CreaturesCreateData_Player& operator=(const CreaturesCreateData_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Player& default_instance();

  void Swap(CreaturesCreateData_Player* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Player& from);
  void MergeFrom(const CreaturesCreateData_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 playerid() const;
  inline void set_playerid(::google::protobuf::uint32 value);

  // required string playername = 2;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // required uint32 prof = 3;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 3;
  inline ::google::protobuf::uint32 prof() const;
  inline void set_prof(::google::protobuf::uint32 value);

  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 hp = 5;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 5;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required uint32 maxhp = 6;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxhpFieldNumber = 6;
  inline ::google::protobuf::uint32 maxhp() const;
  inline void set_maxhp(::google::protobuf::uint32 value);

  // required float posX = 7;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 7;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 8;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 8;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 9;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 9;
  inline float posz() const;
  inline void set_posz(float value);

  // required uint32 playerrace = 10;
  inline bool has_playerrace() const;
  inline void clear_playerrace();
  static const int kPlayerraceFieldNumber = 10;
  inline ::google::protobuf::uint32 playerrace() const;
  inline void set_playerrace(::google::protobuf::uint32 value);

  // required uint32 gender = 11;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 11;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);

  // required uint32 namebody = 12;
  inline bool has_namebody() const;
  inline void clear_namebody();
  static const int kNamebodyFieldNumber = 12;
  inline ::google::protobuf::uint32 namebody() const;
  inline void set_namebody(::google::protobuf::uint32 value);

  // required uint32 nameweapon = 13;
  inline bool has_nameweapon() const;
  inline void clear_nameweapon();
  static const int kNameweaponFieldNumber = 13;
  inline ::google::protobuf::uint32 nameweapon() const;
  inline void set_nameweapon(::google::protobuf::uint32 value);

  // required uint32 curstate = 14;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurstateFieldNumber = 14;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);

  // optional float mspeed = 15;
  inline bool has_mspeed() const;
  inline void clear_mspeed();
  static const int kMspeedFieldNumber = 15;
  inline float mspeed() const;
  inline void set_mspeed(float value);

  // optional uint32 pk_mode = 16;
  inline bool has_pk_mode() const;
  inline void clear_pk_mode();
  static const int kPkModeFieldNumber = 16;
  inline ::google::protobuf::uint32 pk_mode() const;
  inline void set_pk_mode(::google::protobuf::uint32 value);

  // optional uint32 pk_killing_value = 17;
  inline bool has_pk_killing_value() const;
  inline void clear_pk_killing_value();
  static const int kPkKillingValueFieldNumber = 17;
  inline ::google::protobuf::uint32 pk_killing_value() const;
  inline void set_pk_killing_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Player)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_playername();
  inline void clear_has_playername();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_playerrace();
  inline void clear_has_playerrace();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_namebody();
  inline void clear_has_namebody();
  inline void set_has_nameweapon();
  inline void clear_has_nameweapon();
  inline void set_has_curstate();
  inline void clear_has_curstate();
  inline void set_has_mspeed();
  inline void clear_has_mspeed();
  inline void set_has_pk_mode();
  inline void clear_has_pk_mode();
  inline void set_has_pk_killing_value();
  inline void clear_has_pk_killing_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* playername_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 maxhp_;
  float posx_;
  float posy_;
  float posz_;
  ::google::protobuf::uint32 playerrace_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 namebody_;
  ::google::protobuf::uint32 nameweapon_;
  ::google::protobuf::uint32 curstate_;
  float mspeed_;
  ::google::protobuf::uint32 pk_mode_;
  ::google::protobuf::uint32 pk_killing_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Player* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Monster : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Monster();
  virtual ~CreaturesCreateData_Monster();

  CreaturesCreateData_Monster(const CreaturesCreateData_Monster& from);

  inline CreaturesCreateData_Monster& operator=(const CreaturesCreateData_Monster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Monster& default_instance();

  void Swap(CreaturesCreateData_Monster* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Monster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Monster& from);
  void MergeFrom(const CreaturesCreateData_Monster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 monsterCid = 1;
  inline bool has_monstercid() const;
  inline void clear_monstercid();
  static const int kMonsterCidFieldNumber = 1;
  inline ::google::protobuf::uint32 monstercid() const;
  inline void set_monstercid(::google::protobuf::uint32 value);

  // required uint32 monsterConfigId = 2;
  inline bool has_monsterconfigid() const;
  inline void clear_monsterconfigid();
  static const int kMonsterConfigIdFieldNumber = 2;
  inline ::google::protobuf::uint32 monsterconfigid() const;
  inline void set_monsterconfigid(::google::protobuf::uint32 value);

  // required uint32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required float posX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 6;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 6;
  inline float posz() const;
  inline void set_posz(float value);

  // required uint32 curstate = 7;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurstateFieldNumber = 7;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);

  // required float mspeed = 8;
  inline bool has_mspeed() const;
  inline void clear_mspeed();
  static const int kMspeedFieldNumber = 8;
  inline float mspeed() const;
  inline void set_mspeed(float value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Monster)
 private:
  inline void set_has_monstercid();
  inline void clear_has_monstercid();
  inline void set_has_monsterconfigid();
  inline void clear_has_monsterconfigid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_curstate();
  inline void clear_has_curstate();
  inline void set_has_mspeed();
  inline void clear_has_mspeed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 monstercid_;
  ::google::protobuf::uint32 monsterconfigid_;
  ::google::protobuf::uint32 hp_;
  float posx_;
  float posy_;
  float posz_;
  ::google::protobuf::uint32 curstate_;
  float mspeed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Monster* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Npc : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Npc();
  virtual ~CreaturesCreateData_Npc();

  CreaturesCreateData_Npc(const CreaturesCreateData_Npc& from);

  inline CreaturesCreateData_Npc& operator=(const CreaturesCreateData_Npc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Npc& default_instance();

  void Swap(CreaturesCreateData_Npc* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Npc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Npc& from);
  void MergeFrom(const CreaturesCreateData_Npc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 npcCid = 1;
  inline bool has_npccid() const;
  inline void clear_npccid();
  static const int kNpcCidFieldNumber = 1;
  inline ::google::protobuf::uint32 npccid() const;
  inline void set_npccid(::google::protobuf::uint32 value);

  // required uint32 npcConfigId = 2;
  inline bool has_npcconfigid() const;
  inline void clear_npcconfigid();
  static const int kNpcConfigIdFieldNumber = 2;
  inline ::google::protobuf::uint32 npcconfigid() const;
  inline void set_npcconfigid(::google::protobuf::uint32 value);

  // required float posX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 5;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 5;
  inline float posz() const;
  inline void set_posz(float value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Npc)
 private:
  inline void set_has_npccid();
  inline void clear_has_npccid();
  inline void set_has_npcconfigid();
  inline void clear_has_npcconfigid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 npccid_;
  ::google::protobuf::uint32 npcconfigid_;
  float posx_;
  float posy_;
  float posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Npc* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Drop : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Drop();
  virtual ~CreaturesCreateData_Drop();

  CreaturesCreateData_Drop(const CreaturesCreateData_Drop& from);

  inline CreaturesCreateData_Drop& operator=(const CreaturesCreateData_Drop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Drop& default_instance();

  void Swap(CreaturesCreateData_Drop* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Drop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Drop& from);
  void MergeFrom(const CreaturesCreateData_Drop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dropCid = 1;
  inline bool has_dropcid() const;
  inline void clear_dropcid();
  static const int kDropCidFieldNumber = 1;
  inline ::google::protobuf::uint32 dropcid() const;
  inline void set_dropcid(::google::protobuf::uint32 value);

  // required float posX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 3;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 3;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 4;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 4;
  inline float posz() const;
  inline void set_posz(float value);

  // required int32 dropType = 5;
  inline bool has_droptype() const;
  inline void clear_droptype();
  static const int kDropTypeFieldNumber = 5;
  inline ::google::protobuf::int32 droptype() const;
  inline void set_droptype(::google::protobuf::int32 value);

  // required uint32 dropTypeVal = 6;
  inline bool has_droptypeval() const;
  inline void clear_droptypeval();
  static const int kDropTypeValFieldNumber = 6;
  inline ::google::protobuf::uint32 droptypeval() const;
  inline void set_droptypeval(::google::protobuf::uint32 value);

  // required uint64 dropTime = 7;
  inline bool has_droptime() const;
  inline void clear_droptime();
  static const int kDropTimeFieldNumber = 7;
  inline ::google::protobuf::uint64 droptime() const;
  inline void set_droptime(::google::protobuf::uint64 value);

  // optional .ProtoBuf.ItemProtoInfo item = 8;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 8;
  inline const ::ProtoBuf::ItemProtoInfo& item() const;
  inline ::ProtoBuf::ItemProtoInfo* mutable_item();
  inline ::ProtoBuf::ItemProtoInfo* release_item();
  inline void set_allocated_item(::ProtoBuf::ItemProtoInfo* item);

  // optional uint32 gold = 9;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 9;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Drop)
 private:
  inline void set_has_dropcid();
  inline void clear_has_dropcid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_droptype();
  inline void clear_has_droptype();
  inline void set_has_droptypeval();
  inline void clear_has_droptypeval();
  inline void set_has_droptime();
  inline void clear_has_droptime();
  inline void set_has_item();
  inline void clear_has_item();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dropcid_;
  float posx_;
  float posy_;
  float posz_;
  ::google::protobuf::int32 droptype_;
  ::google::protobuf::uint32 droptypeval_;
  ::google::protobuf::uint64 droptime_;
  ::ProtoBuf::ItemProtoInfo* item_;
  ::google::protobuf::uint32 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Drop* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Summon : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Summon();
  virtual ~CreaturesCreateData_Summon();

  CreaturesCreateData_Summon(const CreaturesCreateData_Summon& from);

  inline CreaturesCreateData_Summon& operator=(const CreaturesCreateData_Summon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Summon& default_instance();

  void Swap(CreaturesCreateData_Summon* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Summon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Summon& from);
  void MergeFrom(const CreaturesCreateData_Summon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 summonCid = 1;
  inline bool has_summoncid() const;
  inline void clear_summoncid();
  static const int kSummonCidFieldNumber = 1;
  inline ::google::protobuf::uint32 summoncid() const;
  inline void set_summoncid(::google::protobuf::uint32 value);

  // required uint32 summonConfigId = 2;
  inline bool has_summonconfigid() const;
  inline void clear_summonconfigid();
  static const int kSummonConfigIdFieldNumber = 2;
  inline ::google::protobuf::uint32 summonconfigid() const;
  inline void set_summonconfigid(::google::protobuf::uint32 value);

  // required uint32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required float posX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 6;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 6;
  inline float posz() const;
  inline void set_posz(float value);

  // required uint32 curstate = 7;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurstateFieldNumber = 7;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);

  // required float mspeed = 8;
  inline bool has_mspeed() const;
  inline void clear_mspeed();
  static const int kMspeedFieldNumber = 8;
  inline float mspeed() const;
  inline void set_mspeed(float value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Summon)
 private:
  inline void set_has_summoncid();
  inline void clear_has_summoncid();
  inline void set_has_summonconfigid();
  inline void clear_has_summonconfigid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_curstate();
  inline void clear_has_curstate();
  inline void set_has_mspeed();
  inline void clear_has_mspeed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 summoncid_;
  ::google::protobuf::uint32 summonconfigid_;
  ::google::protobuf::uint32 hp_;
  float posx_;
  float posy_;
  float posz_;
  ::google::protobuf::uint32 curstate_;
  float mspeed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Summon* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Pet : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Pet();
  virtual ~CreaturesCreateData_Pet();

  CreaturesCreateData_Pet(const CreaturesCreateData_Pet& from);

  inline CreaturesCreateData_Pet& operator=(const CreaturesCreateData_Pet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Pet& default_instance();

  void Swap(CreaturesCreateData_Pet* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Pet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Pet& from);
  void MergeFrom(const CreaturesCreateData_Pet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 petCid = 1;
  inline bool has_petcid() const;
  inline void clear_petcid();
  static const int kPetCidFieldNumber = 1;
  inline ::google::protobuf::uint32 petcid() const;
  inline void set_petcid(::google::protobuf::uint32 value);

  // required uint32 petConfigId = 2;
  inline bool has_petconfigid() const;
  inline void clear_petconfigid();
  static const int kPetConfigIdFieldNumber = 2;
  inline ::google::protobuf::uint32 petconfigid() const;
  inline void set_petconfigid(::google::protobuf::uint32 value);

  // required uint32 hp = 3;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // required float posX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 5;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 5;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 6;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 6;
  inline float posz() const;
  inline void set_posz(float value);

  // required uint32 curstate = 7;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurstateFieldNumber = 7;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);

  // required float mspeed = 8;
  inline bool has_mspeed() const;
  inline void clear_mspeed();
  static const int kMspeedFieldNumber = 8;
  inline float mspeed() const;
  inline void set_mspeed(float value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Pet)
 private:
  inline void set_has_petcid();
  inline void clear_has_petcid();
  inline void set_has_petconfigid();
  inline void clear_has_petconfigid();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_curstate();
  inline void clear_has_curstate();
  inline void set_has_mspeed();
  inline void clear_has_mspeed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 petcid_;
  ::google::protobuf::uint32 petconfigid_;
  ::google::protobuf::uint32 hp_;
  float posx_;
  float posy_;
  float posz_;
  ::google::protobuf::uint32 curstate_;
  float mspeed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Pet* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Herbs : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Herbs();
  virtual ~CreaturesCreateData_Herbs();

  CreaturesCreateData_Herbs(const CreaturesCreateData_Herbs& from);

  inline CreaturesCreateData_Herbs& operator=(const CreaturesCreateData_Herbs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Herbs& default_instance();

  void Swap(CreaturesCreateData_Herbs* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Herbs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Herbs& from);
  void MergeFrom(const CreaturesCreateData_Herbs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 herbsCid = 1;
  inline bool has_herbscid() const;
  inline void clear_herbscid();
  static const int kHerbsCidFieldNumber = 1;
  inline ::google::protobuf::uint32 herbscid() const;
  inline void set_herbscid(::google::protobuf::uint32 value);

  // required uint32 herbsId = 2;
  inline bool has_herbsid() const;
  inline void clear_herbsid();
  static const int kHerbsIdFieldNumber = 2;
  inline ::google::protobuf::uint32 herbsid() const;
  inline void set_herbsid(::google::protobuf::uint32 value);

  // required float posX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 5;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 5;
  inline float posz() const;
  inline void set_posz(float value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Herbs)
 private:
  inline void set_has_herbscid();
  inline void clear_has_herbscid();
  inline void set_has_herbsid();
  inline void clear_has_herbsid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 herbscid_;
  ::google::protobuf::uint32 herbsid_;
  float posx_;
  float posy_;
  float posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Herbs* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Mine : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Mine();
  virtual ~CreaturesCreateData_Mine();

  CreaturesCreateData_Mine(const CreaturesCreateData_Mine& from);

  inline CreaturesCreateData_Mine& operator=(const CreaturesCreateData_Mine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Mine& default_instance();

  void Swap(CreaturesCreateData_Mine* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Mine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Mine& from);
  void MergeFrom(const CreaturesCreateData_Mine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mineCid = 1;
  inline bool has_minecid() const;
  inline void clear_minecid();
  static const int kMineCidFieldNumber = 1;
  inline ::google::protobuf::uint32 minecid() const;
  inline void set_minecid(::google::protobuf::uint32 value);

  // required uint32 mineId = 2;
  inline bool has_mineid() const;
  inline void clear_mineid();
  static const int kMineIdFieldNumber = 2;
  inline ::google::protobuf::uint32 mineid() const;
  inline void set_mineid(::google::protobuf::uint32 value);

  // required float posX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 5;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 5;
  inline float posz() const;
  inline void set_posz(float value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Mine)
 private:
  inline void set_has_minecid();
  inline void clear_has_minecid();
  inline void set_has_mineid();
  inline void clear_has_mineid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 minecid_;
  ::google::protobuf::uint32 mineid_;
  float posx_;
  float posy_;
  float posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Mine* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData_Fish : public ::google::protobuf::Message {
 public:
  CreaturesCreateData_Fish();
  virtual ~CreaturesCreateData_Fish();

  CreaturesCreateData_Fish(const CreaturesCreateData_Fish& from);

  inline CreaturesCreateData_Fish& operator=(const CreaturesCreateData_Fish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData_Fish& default_instance();

  void Swap(CreaturesCreateData_Fish* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData_Fish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData_Fish& from);
  void MergeFrom(const CreaturesCreateData_Fish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 fishCid = 1;
  inline bool has_fishcid() const;
  inline void clear_fishcid();
  static const int kFishCidFieldNumber = 1;
  inline ::google::protobuf::uint32 fishcid() const;
  inline void set_fishcid(::google::protobuf::uint32 value);

  // required uint32 fishId = 2;
  inline bool has_fishid() const;
  inline void clear_fishid();
  static const int kFishIdFieldNumber = 2;
  inline ::google::protobuf::uint32 fishid() const;
  inline void set_fishid(::google::protobuf::uint32 value);

  // required float posX = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 3;
  inline float posx() const;
  inline void set_posx(float value);

  // required float posY = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosYFieldNumber = 4;
  inline float posy() const;
  inline void set_posy(float value);

  // required float posZ = 5;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 5;
  inline float posz() const;
  inline void set_posz(float value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData.Fish)
 private:
  inline void set_has_fishcid();
  inline void clear_has_fishcid();
  inline void set_has_fishid();
  inline void clear_has_fishid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 fishcid_;
  ::google::protobuf::uint32 fishid_;
  float posx_;
  float posy_;
  float posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData_Fish* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesCreateData : public ::google::protobuf::Message {
 public:
  CreaturesCreateData();
  virtual ~CreaturesCreateData();

  CreaturesCreateData(const CreaturesCreateData& from);

  inline CreaturesCreateData& operator=(const CreaturesCreateData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesCreateData& default_instance();

  void Swap(CreaturesCreateData* other);

  // implements Message ----------------------------------------------

  CreaturesCreateData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesCreateData& from);
  void MergeFrom(const CreaturesCreateData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreaturesCreateData_Player Player;
  typedef CreaturesCreateData_Monster Monster;
  typedef CreaturesCreateData_Npc Npc;
  typedef CreaturesCreateData_Drop Drop;
  typedef CreaturesCreateData_Summon Summon;
  typedef CreaturesCreateData_Pet Pet;
  typedef CreaturesCreateData_Herbs Herbs;
  typedef CreaturesCreateData_Mine Mine;
  typedef CreaturesCreateData_Fish Fish;

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.CreaturesCreateData.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::ProtoBuf::CreaturesCreateData_Player& players(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Player* mutable_players(int index);
  inline ::ProtoBuf::CreaturesCreateData_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Player >*
      mutable_players();

  // repeated .ProtoBuf.CreaturesCreateData.Monster monsters = 2;
  inline int monsters_size() const;
  inline void clear_monsters();
  static const int kMonstersFieldNumber = 2;
  inline const ::ProtoBuf::CreaturesCreateData_Monster& monsters(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Monster* mutable_monsters(int index);
  inline ::ProtoBuf::CreaturesCreateData_Monster* add_monsters();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Monster >&
      monsters() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Monster >*
      mutable_monsters();

  // repeated .ProtoBuf.CreaturesCreateData.Npc npcs = 3;
  inline int npcs_size() const;
  inline void clear_npcs();
  static const int kNpcsFieldNumber = 3;
  inline const ::ProtoBuf::CreaturesCreateData_Npc& npcs(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Npc* mutable_npcs(int index);
  inline ::ProtoBuf::CreaturesCreateData_Npc* add_npcs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Npc >&
      npcs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Npc >*
      mutable_npcs();

  // repeated .ProtoBuf.CreaturesCreateData.Drop drops = 4;
  inline int drops_size() const;
  inline void clear_drops();
  static const int kDropsFieldNumber = 4;
  inline const ::ProtoBuf::CreaturesCreateData_Drop& drops(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Drop* mutable_drops(int index);
  inline ::ProtoBuf::CreaturesCreateData_Drop* add_drops();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Drop >&
      drops() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Drop >*
      mutable_drops();

  // repeated .ProtoBuf.CreaturesCreateData.Summon summons = 5;
  inline int summons_size() const;
  inline void clear_summons();
  static const int kSummonsFieldNumber = 5;
  inline const ::ProtoBuf::CreaturesCreateData_Summon& summons(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Summon* mutable_summons(int index);
  inline ::ProtoBuf::CreaturesCreateData_Summon* add_summons();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Summon >&
      summons() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Summon >*
      mutable_summons();

  // repeated .ProtoBuf.CreaturesCreateData.Herbs herbs = 6;
  inline int herbs_size() const;
  inline void clear_herbs();
  static const int kHerbsFieldNumber = 6;
  inline const ::ProtoBuf::CreaturesCreateData_Herbs& herbs(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Herbs* mutable_herbs(int index);
  inline ::ProtoBuf::CreaturesCreateData_Herbs* add_herbs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Herbs >&
      herbs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Herbs >*
      mutable_herbs();

  // repeated .ProtoBuf.CreaturesCreateData.Mine mines = 7;
  inline int mines_size() const;
  inline void clear_mines();
  static const int kMinesFieldNumber = 7;
  inline const ::ProtoBuf::CreaturesCreateData_Mine& mines(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Mine* mutable_mines(int index);
  inline ::ProtoBuf::CreaturesCreateData_Mine* add_mines();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Mine >&
      mines() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Mine >*
      mutable_mines();

  // repeated .ProtoBuf.CreaturesCreateData.Fish fishs = 8;
  inline int fishs_size() const;
  inline void clear_fishs();
  static const int kFishsFieldNumber = 8;
  inline const ::ProtoBuf::CreaturesCreateData_Fish& fishs(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Fish* mutable_fishs(int index);
  inline ::ProtoBuf::CreaturesCreateData_Fish* add_fishs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Fish >&
      fishs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Fish >*
      mutable_fishs();

  // repeated .ProtoBuf.CreaturesCreateData.Pet pets = 9;
  inline int pets_size() const;
  inline void clear_pets();
  static const int kPetsFieldNumber = 9;
  inline const ::ProtoBuf::CreaturesCreateData_Pet& pets(int index) const;
  inline ::ProtoBuf::CreaturesCreateData_Pet* mutable_pets(int index);
  inline ::ProtoBuf::CreaturesCreateData_Pet* add_pets();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Pet >&
      pets() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Pet >*
      mutable_pets();

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesCreateData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Player > players_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Monster > monsters_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Npc > npcs_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Drop > drops_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Summon > summons_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Herbs > herbs_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Mine > mines_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Fish > fishs_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Pet > pets_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesCreateData* default_instance_;
};
// -------------------------------------------------------------------

class CreatureDestoryData : public ::google::protobuf::Message {
 public:
  CreatureDestoryData();
  virtual ~CreatureDestoryData();

  CreatureDestoryData(const CreatureDestoryData& from);

  inline CreatureDestoryData& operator=(const CreatureDestoryData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatureDestoryData& default_instance();

  void Swap(CreatureDestoryData* other);

  // implements Message ----------------------------------------------

  CreatureDestoryData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatureDestoryData& from);
  void MergeFrom(const CreatureDestoryData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cids = 1;
  inline int cids_size() const;
  inline void clear_cids();
  static const int kCidsFieldNumber = 1;
  inline ::google::protobuf::uint32 cids(int index) const;
  inline void set_cids(int index, ::google::protobuf::uint32 value);
  inline void add_cids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cids();

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreatureDestoryData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreatureDestoryData* default_instance_;
};
// -------------------------------------------------------------------

class SynAttrsAllClient : public ::google::protobuf::Message {
 public:
  SynAttrsAllClient();
  virtual ~SynAttrsAllClient();

  SynAttrsAllClient(const SynAttrsAllClient& from);

  inline SynAttrsAllClient& operator=(const SynAttrsAllClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynAttrsAllClient& default_instance();

  void Swap(SynAttrsAllClient* other);

  // implements Message ----------------------------------------------

  SynAttrsAllClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynAttrsAllClient& from);
  void MergeFrom(const SynAttrsAllClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.Attr creatureAttrs = 2;
  inline int creatureattrs_size() const;
  inline void clear_creatureattrs();
  static const int kCreatureAttrsFieldNumber = 2;
  inline const ::ProtoBuf::Attr& creatureattrs(int index) const;
  inline ::ProtoBuf::Attr* mutable_creatureattrs(int index);
  inline ::ProtoBuf::Attr* add_creatureattrs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
      creatureattrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
      mutable_creatureattrs();

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 curstate = 4;
  inline bool has_curstate() const;
  inline void clear_curstate();
  static const int kCurstateFieldNumber = 4;
  inline ::google::protobuf::uint32 curstate() const;
  inline void set_curstate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.SynAttrsAllClient)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_curstate();
  inline void clear_has_curstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr > creatureattrs_;
  ::google::protobuf::uint32 cid_;
  ::google::protobuf::uint32 curstate_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static SynAttrsAllClient* default_instance_;
};
// -------------------------------------------------------------------

class SynAttrsToSingleClient : public ::google::protobuf::Message {
 public:
  SynAttrsToSingleClient();
  virtual ~SynAttrsToSingleClient();

  SynAttrsToSingleClient(const SynAttrsToSingleClient& from);

  inline SynAttrsToSingleClient& operator=(const SynAttrsToSingleClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SynAttrsToSingleClient& default_instance();

  void Swap(SynAttrsToSingleClient* other);

  // implements Message ----------------------------------------------

  SynAttrsToSingleClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SynAttrsToSingleClient& from);
  void MergeFrom(const SynAttrsToSingleClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.Attr creatureAttrs = 2;
  inline int creatureattrs_size() const;
  inline void clear_creatureattrs();
  static const int kCreatureAttrsFieldNumber = 2;
  inline const ::ProtoBuf::Attr& creatureattrs(int index) const;
  inline ::ProtoBuf::Attr* mutable_creatureattrs(int index);
  inline ::ProtoBuf::Attr* add_creatureattrs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
      creatureattrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
      mutable_creatureattrs();

  // @@protoc_insertion_point(class_scope:ProtoBuf.SynAttrsToSingleClient)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr > creatureattrs_;
  ::google::protobuf::uint32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static SynAttrsToSingleClient* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesLevUp_Player : public ::google::protobuf::Message {
 public:
  CreaturesLevUp_Player();
  virtual ~CreaturesLevUp_Player();

  CreaturesLevUp_Player(const CreaturesLevUp_Player& from);

  inline CreaturesLevUp_Player& operator=(const CreaturesLevUp_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesLevUp_Player& default_instance();

  void Swap(CreaturesLevUp_Player* other);

  // implements Message ----------------------------------------------

  CreaturesLevUp_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesLevUp_Player& from);
  void MergeFrom(const CreaturesLevUp_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.SkillCell skills = 1;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 1;
  inline const ::ProtoBuf::SkillCell& skills(int index) const;
  inline ::ProtoBuf::SkillCell* mutable_skills(int index);
  inline ::ProtoBuf::SkillCell* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesLevUp.Player)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell > skills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesLevUp_Player* default_instance_;
};
// -------------------------------------------------------------------

class CreaturesLevUp : public ::google::protobuf::Message {
 public:
  CreaturesLevUp();
  virtual ~CreaturesLevUp();

  CreaturesLevUp(const CreaturesLevUp& from);

  inline CreaturesLevUp& operator=(const CreaturesLevUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreaturesLevUp& default_instance();

  void Swap(CreaturesLevUp* other);

  // implements Message ----------------------------------------------

  CreaturesLevUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreaturesLevUp& from);
  void MergeFrom(const CreaturesLevUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CreaturesLevUp_Player Player;

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.Attr creatureAttrs = 3;
  inline int creatureattrs_size() const;
  inline void clear_creatureattrs();
  static const int kCreatureAttrsFieldNumber = 3;
  inline const ::ProtoBuf::Attr& creatureattrs(int index) const;
  inline ::ProtoBuf::Attr* mutable_creatureattrs(int index);
  inline ::ProtoBuf::Attr* add_creatureattrs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
      creatureattrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
      mutable_creatureattrs();

  // optional .ProtoBuf.CreaturesLevUp.Player character = 4;
  inline bool has_character() const;
  inline void clear_character();
  static const int kCharacterFieldNumber = 4;
  inline const ::ProtoBuf::CreaturesLevUp_Player& character() const;
  inline ::ProtoBuf::CreaturesLevUp_Player* mutable_character();
  inline ::ProtoBuf::CreaturesLevUp_Player* release_character();
  inline void set_allocated_character(::ProtoBuf::CreaturesLevUp_Player* character);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CreaturesLevUp)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_character();
  inline void clear_has_character();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr > creatureattrs_;
  ::ProtoBuf::CreaturesLevUp_Player* character_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static CreaturesLevUp* default_instance_;
};
// -------------------------------------------------------------------

class AccountLoginLogicResponse : public ::google::protobuf::Message {
 public:
  AccountLoginLogicResponse();
  virtual ~AccountLoginLogicResponse();

  AccountLoginLogicResponse(const AccountLoginLogicResponse& from);

  inline AccountLoginLogicResponse& operator=(const AccountLoginLogicResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountLoginLogicResponse& default_instance();

  void Swap(AccountLoginLogicResponse* other);

  // implements Message ----------------------------------------------

  AccountLoginLogicResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountLoginLogicResponse& from);
  void MergeFrom(const AccountLoginLogicResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AccountLoginLogicResponse_RESULT RESULT;
  static const RESULT CLIENT_LOGIN_LOGIC_SUCESS = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_SUCESS;
  static const RESULT CLIENT_LOGIN_LOGIC_TIME_OUT = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_TIME_OUT;
  static const RESULT CLIENT_LOGIN_LOGIC_INVALID = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_INVALID;
  static const RESULT CLIENT_LOGIN_LOGIC_BLACK = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_BLACK;
  static const RESULT CLIENT_LOGIN_LOGIC_REFUSE = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_REFUSE;
  static const RESULT CLIENT_LOGIN_ALREADY_ONLINE = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_ALREADY_ONLINE;
  static const RESULT CLIENT_LOGIN_LOGIC_UNKNOWN = AccountLoginLogicResponse_RESULT_CLIENT_LOGIN_LOGIC_UNKNOWN;
  static inline bool RESULT_IsValid(int value) {
    return AccountLoginLogicResponse_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    AccountLoginLogicResponse_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    AccountLoginLogicResponse_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    AccountLoginLogicResponse_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return AccountLoginLogicResponse_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return AccountLoginLogicResponse_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return AccountLoginLogicResponse_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 loginResult = 1;
  inline bool has_loginresult() const;
  inline void clear_loginresult();
  static const int kLoginResultFieldNumber = 1;
  inline ::google::protobuf::uint32 loginresult() const;
  inline void set_loginresult(::google::protobuf::uint32 value);

  // required uint64 serverTick = 2;
  inline bool has_servertick() const;
  inline void clear_servertick();
  static const int kServerTickFieldNumber = 2;
  inline ::google::protobuf::uint64 servertick() const;
  inline void set_servertick(::google::protobuf::uint64 value);

  // required uint64 unixMSec = 3;
  inline bool has_unixmsec() const;
  inline void clear_unixmsec();
  static const int kUnixMSecFieldNumber = 3;
  inline ::google::protobuf::uint64 unixmsec() const;
  inline void set_unixmsec(::google::protobuf::uint64 value);

  // optional uint32 accountIndex = 4;
  inline bool has_accountindex() const;
  inline void clear_accountindex();
  static const int kAccountIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 accountindex() const;
  inline void set_accountindex(::google::protobuf::uint32 value);

  // optional uint64 startMark = 5;
  inline bool has_startmark() const;
  inline void clear_startmark();
  static const int kStartMarkFieldNumber = 5;
  inline ::google::protobuf::uint64 startmark() const;
  inline void set_startmark(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.AccountLoginLogicResponse)
 private:
  inline void set_has_loginresult();
  inline void clear_has_loginresult();
  inline void set_has_servertick();
  inline void clear_has_servertick();
  inline void set_has_unixmsec();
  inline void clear_has_unixmsec();
  inline void set_has_accountindex();
  inline void clear_has_accountindex();
  inline void set_has_startmark();
  inline void clear_has_startmark();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 servertick_;
  ::google::protobuf::uint32 loginresult_;
  ::google::protobuf::uint32 accountindex_;
  ::google::protobuf::uint64 unixmsec_;
  ::google::protobuf::uint64 startmark_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static AccountLoginLogicResponse* default_instance_;
};
// -------------------------------------------------------------------

class NotifyClientState : public ::google::protobuf::Message {
 public:
  NotifyClientState();
  virtual ~NotifyClientState();

  NotifyClientState(const NotifyClientState& from);

  inline NotifyClientState& operator=(const NotifyClientState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyClientState& default_instance();

  void Swap(NotifyClientState* other);

  // implements Message ----------------------------------------------

  NotifyClientState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyClientState& from);
  void MergeFrom(const NotifyClientState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoBuf.GAME_STATE gameState = 1;
  inline bool has_gamestate() const;
  inline void clear_gamestate();
  static const int kGameStateFieldNumber = 1;
  inline ::ProtoBuf::GAME_STATE gamestate() const;
  inline void set_gamestate(::ProtoBuf::GAME_STATE value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.NotifyClientState)
 private:
  inline void set_has_gamestate();
  inline void clear_has_gamestate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int gamestate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static NotifyClientState* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLogoutGame_SwitchServerParam : public ::google::protobuf::Message {
 public:
  NotifyLogoutGame_SwitchServerParam();
  virtual ~NotifyLogoutGame_SwitchServerParam();

  NotifyLogoutGame_SwitchServerParam(const NotifyLogoutGame_SwitchServerParam& from);

  inline NotifyLogoutGame_SwitchServerParam& operator=(const NotifyLogoutGame_SwitchServerParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLogoutGame_SwitchServerParam& default_instance();

  void Swap(NotifyLogoutGame_SwitchServerParam* other);

  // implements Message ----------------------------------------------

  NotifyLogoutGame_SwitchServerParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLogoutGame_SwitchServerParam& from);
  void MergeFrom(const NotifyLogoutGame_SwitchServerParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string logic_server_ip = 1;
  inline bool has_logic_server_ip() const;
  inline void clear_logic_server_ip();
  static const int kLogicServerIpFieldNumber = 1;
  inline const ::std::string& logic_server_ip() const;
  inline void set_logic_server_ip(const ::std::string& value);
  inline void set_logic_server_ip(const char* value);
  inline void set_logic_server_ip(const char* value, size_t size);
  inline ::std::string* mutable_logic_server_ip();
  inline ::std::string* release_logic_server_ip();
  inline void set_allocated_logic_server_ip(::std::string* logic_server_ip);

  // required uint32 logic_server_port = 2;
  inline bool has_logic_server_port() const;
  inline void clear_logic_server_port();
  static const int kLogicServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 logic_server_port() const;
  inline void set_logic_server_port(::google::protobuf::uint32 value);

  // required uint32 scene_template_id = 3;
  inline bool has_scene_template_id() const;
  inline void clear_scene_template_id();
  static const int kSceneTemplateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 scene_template_id() const;
  inline void set_scene_template_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.NotifyLogoutGame.SwitchServerParam)
 private:
  inline void set_has_logic_server_ip();
  inline void clear_has_logic_server_ip();
  inline void set_has_logic_server_port();
  inline void clear_has_logic_server_port();
  inline void set_has_scene_template_id();
  inline void clear_has_scene_template_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* logic_server_ip_;
  ::google::protobuf::uint32 logic_server_port_;
  ::google::protobuf::uint32 scene_template_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static NotifyLogoutGame_SwitchServerParam* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLogoutGame : public ::google::protobuf::Message {
 public:
  NotifyLogoutGame();
  virtual ~NotifyLogoutGame();

  NotifyLogoutGame(const NotifyLogoutGame& from);

  inline NotifyLogoutGame& operator=(const NotifyLogoutGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLogoutGame& default_instance();

  void Swap(NotifyLogoutGame* other);

  // implements Message ----------------------------------------------

  NotifyLogoutGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLogoutGame& from);
  void MergeFrom(const NotifyLogoutGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NotifyLogoutGame_SwitchServerParam SwitchServerParam;

  // accessors -------------------------------------------------------

  // required .ProtoBuf.LOGOUT_FLAG flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::ProtoBuf::LOGOUT_FLAG flag() const;
  inline void set_flag(::ProtoBuf::LOGOUT_FLAG value);

  // optional .ProtoBuf.NotifyLogoutGame.SwitchServerParam switch_server_param = 2;
  inline bool has_switch_server_param() const;
  inline void clear_switch_server_param();
  static const int kSwitchServerParamFieldNumber = 2;
  inline const ::ProtoBuf::NotifyLogoutGame_SwitchServerParam& switch_server_param() const;
  inline ::ProtoBuf::NotifyLogoutGame_SwitchServerParam* mutable_switch_server_param();
  inline ::ProtoBuf::NotifyLogoutGame_SwitchServerParam* release_switch_server_param();
  inline void set_allocated_switch_server_param(::ProtoBuf::NotifyLogoutGame_SwitchServerParam* switch_server_param);

  // @@protoc_insertion_point(class_scope:ProtoBuf.NotifyLogoutGame)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_switch_server_param();
  inline void clear_has_switch_server_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::NotifyLogoutGame_SwitchServerParam* switch_server_param_;
  int flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static NotifyLogoutGame* default_instance_;
};
// -------------------------------------------------------------------

class ClientCharacterListResponse : public ::google::protobuf::Message {
 public:
  ClientCharacterListResponse();
  virtual ~ClientCharacterListResponse();

  ClientCharacterListResponse(const ClientCharacterListResponse& from);

  inline ClientCharacterListResponse& operator=(const ClientCharacterListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientCharacterListResponse& default_instance();

  void Swap(ClientCharacterListResponse* other);

  // implements Message ----------------------------------------------

  ClientCharacterListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientCharacterListResponse& from);
  void MergeFrom(const ClientCharacterListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.CharacterDBSimpleInfo charInfoList = 1;
  inline int charinfolist_size() const;
  inline void clear_charinfolist();
  static const int kCharInfoListFieldNumber = 1;
  inline const ::ProtoBuf::CharacterDBSimpleInfo& charinfolist(int index) const;
  inline ::ProtoBuf::CharacterDBSimpleInfo* mutable_charinfolist(int index);
  inline ::ProtoBuf::CharacterDBSimpleInfo* add_charinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CharacterDBSimpleInfo >&
      charinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CharacterDBSimpleInfo >*
      mutable_charinfolist();

  // @@protoc_insertion_point(class_scope:ProtoBuf.ClientCharacterListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CharacterDBSimpleInfo > charinfolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static ClientCharacterListResponse* default_instance_;
};
// -------------------------------------------------------------------

class ClientCreateCharacterResponse : public ::google::protobuf::Message {
 public:
  ClientCreateCharacterResponse();
  virtual ~ClientCreateCharacterResponse();

  ClientCreateCharacterResponse(const ClientCreateCharacterResponse& from);

  inline ClientCreateCharacterResponse& operator=(const ClientCreateCharacterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientCreateCharacterResponse& default_instance();

  void Swap(ClientCreateCharacterResponse* other);

  // implements Message ----------------------------------------------

  ClientCreateCharacterResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientCreateCharacterResponse& from);
  void MergeFrom(const ClientCreateCharacterResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ClientCreateCharacterResponse_RESULT RESULT;
  static const RESULT CREATE_CHARACTER_RESULT_SUCCESS = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_SUCCESS;
  static const RESULT CREATE_CHARACTER_RESULT_FAIL = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_FAIL;
  static const RESULT CREATE_CHARACTER_RESULT_NAME_EXSIT = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_NAME_EXSIT;
  static const RESULT CREATE_CHARACTER_RESULT_NAME_LENGTH = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_NAME_LENGTH;
  static const RESULT CREATE_CHARACTER_RESULT_NAME_ERROR = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_NAME_ERROR;
  static const RESULT CREATE_CHARACTER_RESULT_MAX_COUNT = ClientCreateCharacterResponse_RESULT_CREATE_CHARACTER_RESULT_MAX_COUNT;
  static inline bool RESULT_IsValid(int value) {
    return ClientCreateCharacterResponse_RESULT_IsValid(value);
  }
  static const RESULT RESULT_MIN =
    ClientCreateCharacterResponse_RESULT_RESULT_MIN;
  static const RESULT RESULT_MAX =
    ClientCreateCharacterResponse_RESULT_RESULT_MAX;
  static const int RESULT_ARRAYSIZE =
    ClientCreateCharacterResponse_RESULT_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RESULT_descriptor() {
    return ClientCreateCharacterResponse_RESULT_descriptor();
  }
  static inline const ::std::string& RESULT_Name(RESULT value) {
    return ClientCreateCharacterResponse_RESULT_Name(value);
  }
  static inline bool RESULT_Parse(const ::std::string& name,
      RESULT* value) {
    return ClientCreateCharacterResponse_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional .ProtoBuf.CharacterDBSimpleInfo newCharacterInfo = 2;
  inline bool has_newcharacterinfo() const;
  inline void clear_newcharacterinfo();
  static const int kNewCharacterInfoFieldNumber = 2;
  inline const ::ProtoBuf::CharacterDBSimpleInfo& newcharacterinfo() const;
  inline ::ProtoBuf::CharacterDBSimpleInfo* mutable_newcharacterinfo();
  inline ::ProtoBuf::CharacterDBSimpleInfo* release_newcharacterinfo();
  inline void set_allocated_newcharacterinfo(::ProtoBuf::CharacterDBSimpleInfo* newcharacterinfo);

  // @@protoc_insertion_point(class_scope:ProtoBuf.ClientCreateCharacterResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_newcharacterinfo();
  inline void clear_has_newcharacterinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::CharacterDBSimpleInfo* newcharacterinfo_;
  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static ClientCreateCharacterResponse* default_instance_;
};
// -------------------------------------------------------------------

class ClientDelCharacterRsp : public ::google::protobuf::Message {
 public:
  ClientDelCharacterRsp();
  virtual ~ClientDelCharacterRsp();

  ClientDelCharacterRsp(const ClientDelCharacterRsp& from);

  inline ClientDelCharacterRsp& operator=(const ClientDelCharacterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientDelCharacterRsp& default_instance();

  void Swap(ClientDelCharacterRsp* other);

  // implements Message ----------------------------------------------

  ClientDelCharacterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientDelCharacterRsp& from);
  void MergeFrom(const ClientDelCharacterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional uint32 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.ClientDelCharacterRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static ClientDelCharacterRsp* default_instance_;
};
// -------------------------------------------------------------------

class ReconnectResponse : public ::google::protobuf::Message {
 public:
  ReconnectResponse();
  virtual ~ReconnectResponse();

  ReconnectResponse(const ReconnectResponse& from);

  inline ReconnectResponse& operator=(const ReconnectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconnectResponse& default_instance();

  void Swap(ReconnectResponse* other);

  // implements Message ----------------------------------------------

  ReconnectResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconnectResponse& from);
  void MergeFrom(const ReconnectResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReconnectResponse_Result Result;
  static const Result SUCCESS = ReconnectResponse_Result_SUCCESS;
  static const Result FAILED = ReconnectResponse_Result_FAILED;
  static inline bool Result_IsValid(int value) {
    return ReconnectResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    ReconnectResponse_Result_Result_MIN;
  static const Result Result_MAX =
    ReconnectResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    ReconnectResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return ReconnectResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return ReconnectResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return ReconnectResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ProtoBuf.ReconnectResponse.Result result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::ProtoBuf::ReconnectResponse_Result result() const;
  inline void set_result(::ProtoBuf::ReconnectResponse_Result value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.ReconnectResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static ReconnectResponse* default_instance_;
};
// -------------------------------------------------------------------

class SyncActorMove : public ::google::protobuf::Message {
 public:
  SyncActorMove();
  virtual ~SyncActorMove();

  SyncActorMove(const SyncActorMove& from);

  inline SyncActorMove& operator=(const SyncActorMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncActorMove& default_instance();

  void Swap(SyncActorMove* other);

  // implements Message ----------------------------------------------

  SyncActorMove* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncActorMove& from);
  void MergeFrom(const SyncActorMove& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // required .ProtoBuf.Vector3PB currentPos = 2;
  inline bool has_currentpos() const;
  inline void clear_currentpos();
  static const int kCurrentPosFieldNumber = 2;
  inline const ::ProtoBuf::Vector3PB& currentpos() const;
  inline ::ProtoBuf::Vector3PB* mutable_currentpos();
  inline ::ProtoBuf::Vector3PB* release_currentpos();
  inline void set_allocated_currentpos(::ProtoBuf::Vector3PB* currentpos);

  // repeated .ProtoBuf.Vector3PB path = 3;
  inline int path_size() const;
  inline void clear_path();
  static const int kPathFieldNumber = 3;
  inline const ::ProtoBuf::Vector3PB& path(int index) const;
  inline ::ProtoBuf::Vector3PB* mutable_path(int index);
  inline ::ProtoBuf::Vector3PB* add_path();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Vector3PB >&
      path() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Vector3PB >*
      mutable_path();

  // @@protoc_insertion_point(class_scope:ProtoBuf.SyncActorMove)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_currentpos();
  inline void clear_has_currentpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::Vector3PB* currentpos_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Vector3PB > path_;
  ::google::protobuf::uint32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static SyncActorMove* default_instance_;
};
// -------------------------------------------------------------------

class TransSceneRet : public ::google::protobuf::Message {
 public:
  TransSceneRet();
  virtual ~TransSceneRet();

  TransSceneRet(const TransSceneRet& from);

  inline TransSceneRet& operator=(const TransSceneRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransSceneRet& default_instance();

  void Swap(TransSceneRet* other);

  // implements Message ----------------------------------------------

  TransSceneRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransSceneRet& from);
  void MergeFrom(const TransSceneRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.TransSceneRet)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static TransSceneRet* default_instance_;
};
// -------------------------------------------------------------------

class NotifyLoadMap : public ::google::protobuf::Message {
 public:
  NotifyLoadMap();
  virtual ~NotifyLoadMap();

  NotifyLoadMap(const NotifyLoadMap& from);

  inline NotifyLoadMap& operator=(const NotifyLoadMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyLoadMap& default_instance();

  void Swap(NotifyLoadMap* other);

  // implements Message ----------------------------------------------

  NotifyLoadMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyLoadMap& from);
  void MergeFrom(const NotifyLoadMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);

  // required uint32 routeId = 2;
  inline bool has_routeid() const;
  inline void clear_routeid();
  static const int kRouteIdFieldNumber = 2;
  inline ::google::protobuf::uint32 routeid() const;
  inline void set_routeid(::google::protobuf::uint32 value);

  // required .ProtoBuf.Vector3PB transPos = 3;
  inline bool has_transpos() const;
  inline void clear_transpos();
  static const int kTransPosFieldNumber = 3;
  inline const ::ProtoBuf::Vector3PB& transpos() const;
  inline ::ProtoBuf::Vector3PB* mutable_transpos();
  inline ::ProtoBuf::Vector3PB* release_transpos();
  inline void set_allocated_transpos(::ProtoBuf::Vector3PB* transpos);

  // @@protoc_insertion_point(class_scope:ProtoBuf.NotifyLoadMap)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_routeid();
  inline void clear_has_routeid();
  inline void set_has_transpos();
  inline void clear_has_transpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 routeid_;
  ::ProtoBuf::Vector3PB* transpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static NotifyLoadMap* default_instance_;
};
// -------------------------------------------------------------------

class NotifyTransLogicNode : public ::google::protobuf::Message {
 public:
  NotifyTransLogicNode();
  virtual ~NotifyTransLogicNode();

  NotifyTransLogicNode(const NotifyTransLogicNode& from);

  inline NotifyTransLogicNode& operator=(const NotifyTransLogicNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTransLogicNode& default_instance();

  void Swap(NotifyTransLogicNode* other);

  // implements Message ----------------------------------------------

  NotifyTransLogicNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTransLogicNode& from);
  void MergeFrom(const NotifyTransLogicNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 port = 1;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 1;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // required string ip = 2;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 2;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // required string token = 3;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 3;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ProtoBuf.NotifyTransLogicNode)
 private:
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ip_;
  ::std::string* token_;
  ::google::protobuf::uint32 port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static NotifyTransLogicNode* default_instance_;
};
// -------------------------------------------------------------------

class UseSkillResult_Target : public ::google::protobuf::Message {
 public:
  UseSkillResult_Target();
  virtual ~UseSkillResult_Target();

  UseSkillResult_Target(const UseSkillResult_Target& from);

  inline UseSkillResult_Target& operator=(const UseSkillResult_Target& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseSkillResult_Target& default_instance();

  void Swap(UseSkillResult_Target* other);

  // implements Message ----------------------------------------------

  UseSkillResult_Target* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseSkillResult_Target& from);
  void MergeFrom(const UseSkillResult_Target& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 targetCid = 1;
  inline bool has_targetcid() const;
  inline void clear_targetcid();
  static const int kTargetCidFieldNumber = 1;
  inline ::google::protobuf::uint32 targetcid() const;
  inline void set_targetcid(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.Attr creatureAttr = 2;
  inline int creatureattr_size() const;
  inline void clear_creatureattr();
  static const int kCreatureAttrFieldNumber = 2;
  inline const ::ProtoBuf::Attr& creatureattr(int index) const;
  inline ::ProtoBuf::Attr* mutable_creatureattr(int index);
  inline ::ProtoBuf::Attr* add_creatureattr();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
      creatureattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
      mutable_creatureattr();

  // repeated .ProtoBuf.DigPerfor digPerfors = 3;
  inline int digperfors_size() const;
  inline void clear_digperfors();
  static const int kDigPerforsFieldNumber = 3;
  inline const ::ProtoBuf::DigPerfor& digperfors(int index) const;
  inline ::ProtoBuf::DigPerfor* mutable_digperfors(int index);
  inline ::ProtoBuf::DigPerfor* add_digperfors();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >&
      digperfors() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >*
      mutable_digperfors();

  // optional bool BeDead = 4;
  inline bool has_bedead() const;
  inline void clear_bedead();
  static const int kBeDeadFieldNumber = 4;
  inline bool bedead() const;
  inline void set_bedead(bool value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.UseSkillResult.Target)
 private:
  inline void set_has_targetcid();
  inline void clear_has_targetcid();
  inline void set_has_bedead();
  inline void clear_has_bedead();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr > creatureattr_;
  ::google::protobuf::uint32 targetcid_;
  bool bedead_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor > digperfors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static UseSkillResult_Target* default_instance_;
};
// -------------------------------------------------------------------

class UseSkillResult : public ::google::protobuf::Message {
 public:
  UseSkillResult();
  virtual ~UseSkillResult();

  UseSkillResult(const UseSkillResult& from);

  inline UseSkillResult& operator=(const UseSkillResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseSkillResult& default_instance();

  void Swap(UseSkillResult* other);

  // implements Message ----------------------------------------------

  UseSkillResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseSkillResult& from);
  void MergeFrom(const UseSkillResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UseSkillResult_Target Target;

  // accessors -------------------------------------------------------

  // required uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // required uint32 userCid = 2;
  inline bool has_usercid() const;
  inline void clear_usercid();
  static const int kUserCidFieldNumber = 2;
  inline ::google::protobuf::uint32 usercid() const;
  inline void set_usercid(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.UseSkillResult.Target targets = 3;
  inline int targets_size() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 3;
  inline const ::ProtoBuf::UseSkillResult_Target& targets(int index) const;
  inline ::ProtoBuf::UseSkillResult_Target* mutable_targets(int index);
  inline ::ProtoBuf::UseSkillResult_Target* add_targets();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseSkillResult_Target >&
      targets() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseSkillResult_Target >*
      mutable_targets();

  // repeated .ProtoBuf.BuffBagDetailInfo statebags = 4;
  inline int statebags_size() const;
  inline void clear_statebags();
  static const int kStatebagsFieldNumber = 4;
  inline const ::ProtoBuf::BuffBagDetailInfo& statebags(int index) const;
  inline ::ProtoBuf::BuffBagDetailInfo* mutable_statebags(int index);
  inline ::ProtoBuf::BuffBagDetailInfo* add_statebags();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::BuffBagDetailInfo >&
      statebags() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::BuffBagDetailInfo >*
      mutable_statebags();

  // @@protoc_insertion_point(class_scope:ProtoBuf.UseSkillResult)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_usercid();
  inline void clear_has_usercid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 usercid_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseSkillResult_Target > targets_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::BuffBagDetailInfo > statebags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static UseSkillResult* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastSkillUse : public ::google::protobuf::Message {
 public:
  BroadcastSkillUse();
  virtual ~BroadcastSkillUse();

  BroadcastSkillUse(const BroadcastSkillUse& from);

  inline BroadcastSkillUse& operator=(const BroadcastSkillUse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastSkillUse& default_instance();

  void Swap(BroadcastSkillUse* other);

  // implements Message ----------------------------------------------

  BroadcastSkillUse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastSkillUse& from);
  void MergeFrom(const BroadcastSkillUse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // required uint32 userCid = 2;
  inline bool has_usercid() const;
  inline void clear_usercid();
  static const int kUserCidFieldNumber = 2;
  inline ::google::protobuf::uint32 usercid() const;
  inline void set_usercid(::google::protobuf::uint32 value);

  // repeated uint32 targetCids = 3;
  inline int targetcids_size() const;
  inline void clear_targetcids();
  static const int kTargetCidsFieldNumber = 3;
  inline ::google::protobuf::uint32 targetcids(int index) const;
  inline void set_targetcids(int index, ::google::protobuf::uint32 value);
  inline void add_targetcids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      targetcids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_targetcids();

  // required .ProtoBuf.Vector3PB dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::ProtoBuf::Vector3PB& dir() const;
  inline ::ProtoBuf::Vector3PB* mutable_dir();
  inline ::ProtoBuf::Vector3PB* release_dir();
  inline void set_allocated_dir(::ProtoBuf::Vector3PB* dir);

  // optional .ProtoBuf.Vector3PB targetPos = 5;
  inline bool has_targetpos() const;
  inline void clear_targetpos();
  static const int kTargetPosFieldNumber = 5;
  inline const ::ProtoBuf::Vector3PB& targetpos() const;
  inline ::ProtoBuf::Vector3PB* mutable_targetpos();
  inline ::ProtoBuf::Vector3PB* release_targetpos();
  inline void set_allocated_targetpos(::ProtoBuf::Vector3PB* targetpos);

  // @@protoc_insertion_point(class_scope:ProtoBuf.BroadcastSkillUse)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_usercid();
  inline void clear_has_usercid();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_targetpos();
  inline void clear_has_targetpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 usercid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > targetcids_;
  ::ProtoBuf::Vector3PB* dir_;
  ::ProtoBuf::Vector3PB* targetpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static BroadcastSkillUse* default_instance_;
};
// -------------------------------------------------------------------

class UseBuffResult_Target : public ::google::protobuf::Message {
 public:
  UseBuffResult_Target();
  virtual ~UseBuffResult_Target();

  UseBuffResult_Target(const UseBuffResult_Target& from);

  inline UseBuffResult_Target& operator=(const UseBuffResult_Target& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseBuffResult_Target& default_instance();

  void Swap(UseBuffResult_Target* other);

  // implements Message ----------------------------------------------

  UseBuffResult_Target* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseBuffResult_Target& from);
  void MergeFrom(const UseBuffResult_Target& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 targetCid = 1;
  inline bool has_targetcid() const;
  inline void clear_targetcid();
  static const int kTargetCidFieldNumber = 1;
  inline ::google::protobuf::uint32 targetcid() const;
  inline void set_targetcid(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.Attr creatureAttr = 2;
  inline int creatureattr_size() const;
  inline void clear_creatureattr();
  static const int kCreatureAttrFieldNumber = 2;
  inline const ::ProtoBuf::Attr& creatureattr(int index) const;
  inline ::ProtoBuf::Attr* mutable_creatureattr(int index);
  inline ::ProtoBuf::Attr* add_creatureattr();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
      creatureattr() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
      mutable_creatureattr();

  // repeated .ProtoBuf.DigPerfor digPerfors = 3;
  inline int digperfors_size() const;
  inline void clear_digperfors();
  static const int kDigPerforsFieldNumber = 3;
  inline const ::ProtoBuf::DigPerfor& digperfors(int index) const;
  inline ::ProtoBuf::DigPerfor* mutable_digperfors(int index);
  inline ::ProtoBuf::DigPerfor* add_digperfors();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >&
      digperfors() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >*
      mutable_digperfors();

  // optional bool BeDead = 4;
  inline bool has_bedead() const;
  inline void clear_bedead();
  static const int kBeDeadFieldNumber = 4;
  inline bool bedead() const;
  inline void set_bedead(bool value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.UseBuffResult.Target)
 private:
  inline void set_has_targetcid();
  inline void clear_has_targetcid();
  inline void set_has_bedead();
  inline void clear_has_bedead();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr > creatureattr_;
  ::google::protobuf::uint32 targetcid_;
  bool bedead_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor > digperfors_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static UseBuffResult_Target* default_instance_;
};
// -------------------------------------------------------------------

class UseBuffResult : public ::google::protobuf::Message {
 public:
  UseBuffResult();
  virtual ~UseBuffResult();

  UseBuffResult(const UseBuffResult& from);

  inline UseBuffResult& operator=(const UseBuffResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseBuffResult& default_instance();

  void Swap(UseBuffResult* other);

  // implements Message ----------------------------------------------

  UseBuffResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseBuffResult& from);
  void MergeFrom(const UseBuffResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UseBuffResult_Target Target;

  // accessors -------------------------------------------------------

  // required uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // required uint32 userCid = 2;
  inline bool has_usercid() const;
  inline void clear_usercid();
  static const int kUserCidFieldNumber = 2;
  inline ::google::protobuf::uint32 usercid() const;
  inline void set_usercid(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.UseBuffResult.Target targets = 3;
  inline int targets_size() const;
  inline void clear_targets();
  static const int kTargetsFieldNumber = 3;
  inline const ::ProtoBuf::UseBuffResult_Target& targets(int index) const;
  inline ::ProtoBuf::UseBuffResult_Target* mutable_targets(int index);
  inline ::ProtoBuf::UseBuffResult_Target* add_targets();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseBuffResult_Target >&
      targets() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseBuffResult_Target >*
      mutable_targets();

  // required uint32 buffBagId = 4;
  inline bool has_buffbagid() const;
  inline void clear_buffbagid();
  static const int kBuffBagIdFieldNumber = 4;
  inline ::google::protobuf::uint32 buffbagid() const;
  inline void set_buffbagid(::google::protobuf::uint32 value);

  // required uint32 buffBagInstId = 5;
  inline bool has_buffbaginstid() const;
  inline void clear_buffbaginstid();
  static const int kBuffBagInstIdFieldNumber = 5;
  inline ::google::protobuf::uint32 buffbaginstid() const;
  inline void set_buffbaginstid(::google::protobuf::uint32 value);

  // required uint32 buffId = 6;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIdFieldNumber = 6;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.UseBuffResult)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_usercid();
  inline void clear_has_usercid();
  inline void set_has_buffbagid();
  inline void clear_has_buffbagid();
  inline void set_has_buffbaginstid();
  inline void clear_has_buffbaginstid();
  inline void set_has_buffid();
  inline void clear_has_buffid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 usercid_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseBuffResult_Target > targets_;
  ::google::protobuf::uint32 buffbagid_;
  ::google::protobuf::uint32 buffbaginstid_;
  ::google::protobuf::uint32 buffid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static UseBuffResult* default_instance_;
};
// -------------------------------------------------------------------

class LevUpSkillRsp : public ::google::protobuf::Message {
 public:
  LevUpSkillRsp();
  virtual ~LevUpSkillRsp();

  LevUpSkillRsp(const LevUpSkillRsp& from);

  inline LevUpSkillRsp& operator=(const LevUpSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevUpSkillRsp& default_instance();

  void Swap(LevUpSkillRsp* other);

  // implements Message ----------------------------------------------

  LevUpSkillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevUpSkillRsp& from);
  void MergeFrom(const LevUpSkillRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ProtoBuf.ERetCode code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::ProtoBuf::ERetCode code() const;
  inline void set_code(::ProtoBuf::ERetCode value);

  // optional uint32 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 skillLev = 3;
  inline bool has_skilllev() const;
  inline void clear_skilllev();
  static const int kSkillLevFieldNumber = 3;
  inline ::google::protobuf::uint32 skilllev() const;
  inline void set_skilllev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LevUpSkillRsp)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_skilllev();
  inline void clear_has_skilllev();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int code_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skilllev_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static LevUpSkillRsp* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastUseSkillStop : public ::google::protobuf::Message {
 public:
  BroadcastUseSkillStop();
  virtual ~BroadcastUseSkillStop();

  BroadcastUseSkillStop(const BroadcastUseSkillStop& from);

  inline BroadcastUseSkillStop& operator=(const BroadcastUseSkillStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastUseSkillStop& default_instance();

  void Swap(BroadcastUseSkillStop* other);

  // implements Message ----------------------------------------------

  BroadcastUseSkillStop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastUseSkillStop& from);
  void MergeFrom(const BroadcastUseSkillStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);

  // required uint32 userCid = 2;
  inline bool has_usercid() const;
  inline void clear_usercid();
  static const int kUserCidFieldNumber = 2;
  inline ::google::protobuf::uint32 usercid() const;
  inline void set_usercid(::google::protobuf::uint32 value);

  // optional uint32 stopStep = 3;
  inline bool has_stopstep() const;
  inline void clear_stopstep();
  static const int kStopStepFieldNumber = 3;
  inline ::google::protobuf::uint32 stopstep() const;
  inline void set_stopstep(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.BroadcastUseSkillStop)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_usercid();
  inline void clear_has_usercid();
  inline void set_has_stopstep();
  inline void clear_has_stopstep();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 usercid_;
  ::google::protobuf::uint32 stopstep_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static BroadcastUseSkillStop* default_instance_;
};
// -------------------------------------------------------------------

class BuffBagDetailInfo : public ::google::protobuf::Message {
 public:
  BuffBagDetailInfo();
  virtual ~BuffBagDetailInfo();

  BuffBagDetailInfo(const BuffBagDetailInfo& from);

  inline BuffBagDetailInfo& operator=(const BuffBagDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffBagDetailInfo& default_instance();

  void Swap(BuffBagDetailInfo* other);

  // implements Message ----------------------------------------------

  BuffBagDetailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffBagDetailInfo& from);
  void MergeFrom(const BuffBagDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buff_bag_inst_id = 1;
  inline bool has_buff_bag_inst_id() const;
  inline void clear_buff_bag_inst_id();
  static const int kBuffBagInstIdFieldNumber = 1;
  inline ::google::protobuf::int32 buff_bag_inst_id() const;
  inline void set_buff_bag_inst_id(::google::protobuf::int32 value);

  // required int32 buff_bag_id = 2;
  inline bool has_buff_bag_id() const;
  inline void clear_buff_bag_id();
  static const int kBuffBagIdFieldNumber = 2;
  inline ::google::protobuf::int32 buff_bag_id() const;
  inline void set_buff_bag_id(::google::protobuf::int32 value);

  // optional int32 sender_cid = 3;
  inline bool has_sender_cid() const;
  inline void clear_sender_cid();
  static const int kSenderCidFieldNumber = 3;
  inline ::google::protobuf::int32 sender_cid() const;
  inline void set_sender_cid(::google::protobuf::int32 value);

  // optional int32 recver_cid = 4;
  inline bool has_recver_cid() const;
  inline void clear_recver_cid();
  static const int kRecverCidFieldNumber = 4;
  inline ::google::protobuf::int32 recver_cid() const;
  inline void set_recver_cid(::google::protobuf::int32 value);

  // optional int64 continuance_time = 5;
  inline bool has_continuance_time() const;
  inline void clear_continuance_time();
  static const int kContinuanceTimeFieldNumber = 5;
  inline ::google::protobuf::int64 continuance_time() const;
  inline void set_continuance_time(::google::protobuf::int64 value);

  // optional int32 delayed_time = 6;
  inline bool has_delayed_time() const;
  inline void clear_delayed_time();
  static const int kDelayedTimeFieldNumber = 6;
  inline ::google::protobuf::int32 delayed_time() const;
  inline void set_delayed_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.BuffBagDetailInfo)
 private:
  inline void set_has_buff_bag_inst_id();
  inline void clear_has_buff_bag_inst_id();
  inline void set_has_buff_bag_id();
  inline void clear_has_buff_bag_id();
  inline void set_has_sender_cid();
  inline void clear_has_sender_cid();
  inline void set_has_recver_cid();
  inline void clear_has_recver_cid();
  inline void set_has_continuance_time();
  inline void clear_has_continuance_time();
  inline void set_has_delayed_time();
  inline void clear_has_delayed_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buff_bag_inst_id_;
  ::google::protobuf::int32 buff_bag_id_;
  ::google::protobuf::int32 sender_cid_;
  ::google::protobuf::int32 recver_cid_;
  ::google::protobuf::int64 continuance_time_;
  ::google::protobuf::int32 delayed_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static BuffBagDetailInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuffStateChangeInfo : public ::google::protobuf::Message {
 public:
  BuffStateChangeInfo();
  virtual ~BuffStateChangeInfo();

  BuffStateChangeInfo(const BuffStateChangeInfo& from);

  inline BuffStateChangeInfo& operator=(const BuffStateChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffStateChangeInfo& default_instance();

  void Swap(BuffStateChangeInfo* other);

  // implements Message ----------------------------------------------

  BuffStateChangeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffStateChangeInfo& from);
  void MergeFrom(const BuffStateChangeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 buff_state_id = 1;
  inline bool has_buff_state_id() const;
  inline void clear_buff_state_id();
  static const int kBuffStateIdFieldNumber = 1;
  inline ::google::protobuf::int32 buff_state_id() const;
  inline void set_buff_state_id(::google::protobuf::int32 value);

  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // required int32 cid = 3;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 3;
  inline ::google::protobuf::int32 cid() const;
  inline void set_cid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.BuffStateChangeInfo)
 private:
  inline void set_has_buff_state_id();
  inline void clear_has_buff_state_id();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buff_state_id_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static BuffStateChangeInfo* default_instance_;
};
// -------------------------------------------------------------------

class AiPlayIdleInfo : public ::google::protobuf::Message {
 public:
  AiPlayIdleInfo();
  virtual ~AiPlayIdleInfo();

  AiPlayIdleInfo(const AiPlayIdleInfo& from);

  inline AiPlayIdleInfo& operator=(const AiPlayIdleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AiPlayIdleInfo& default_instance();

  void Swap(AiPlayIdleInfo* other);

  // implements Message ----------------------------------------------

  AiPlayIdleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AiPlayIdleInfo& from);
  void MergeFrom(const AiPlayIdleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::int32 cid() const;
  inline void set_cid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.AiPlayIdleInfo)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static AiPlayIdleInfo* default_instance_;
};
// -------------------------------------------------------------------

class PvpKillingValueBroadCast : public ::google::protobuf::Message {
 public:
  PvpKillingValueBroadCast();
  virtual ~PvpKillingValueBroadCast();

  PvpKillingValueBroadCast(const PvpKillingValueBroadCast& from);

  inline PvpKillingValueBroadCast& operator=(const PvpKillingValueBroadCast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpKillingValueBroadCast& default_instance();

  void Swap(PvpKillingValueBroadCast* other);

  // implements Message ----------------------------------------------

  PvpKillingValueBroadCast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpKillingValueBroadCast& from);
  void MergeFrom(const PvpKillingValueBroadCast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pk_killing_value = 1;
  inline bool has_pk_killing_value() const;
  inline void clear_pk_killing_value();
  static const int kPkKillingValueFieldNumber = 1;
  inline ::google::protobuf::uint32 pk_killing_value() const;
  inline void set_pk_killing_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.PvpKillingValueBroadCast)
 private:
  inline void set_has_pk_killing_value();
  inline void clear_has_pk_killing_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 pk_killing_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static PvpKillingValueBroadCast* default_instance_;
};
// -------------------------------------------------------------------

class PvpRedPlayer : public ::google::protobuf::Message {
 public:
  PvpRedPlayer();
  virtual ~PvpRedPlayer();

  PvpRedPlayer(const PvpRedPlayer& from);

  inline PvpRedPlayer& operator=(const PvpRedPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PvpRedPlayer& default_instance();

  void Swap(PvpRedPlayer* other);

  // implements Message ----------------------------------------------

  PvpRedPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PvpRedPlayer& from);
  void MergeFrom(const PvpRedPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_add = 1;
  inline bool has_is_add() const;
  inline void clear_is_add();
  static const int kIsAddFieldNumber = 1;
  inline bool is_add() const;
  inline void set_is_add(bool value);

  // optional uint32 player_cid = 2;
  inline bool has_player_cid() const;
  inline void clear_player_cid();
  static const int kPlayerCidFieldNumber = 2;
  inline ::google::protobuf::uint32 player_cid() const;
  inline void set_player_cid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.PvpRedPlayer)
 private:
  inline void set_has_is_add();
  inline void clear_has_is_add();
  inline void set_has_player_cid();
  inline void clear_has_player_cid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool is_add_;
  ::google::protobuf::uint32 player_cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static PvpRedPlayer* default_instance_;
};
// -------------------------------------------------------------------

class BuffReplaceNormalSkills : public ::google::protobuf::Message {
 public:
  BuffReplaceNormalSkills();
  virtual ~BuffReplaceNormalSkills();

  BuffReplaceNormalSkills(const BuffReplaceNormalSkills& from);

  inline BuffReplaceNormalSkills& operator=(const BuffReplaceNormalSkills& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffReplaceNormalSkills& default_instance();

  void Swap(BuffReplaceNormalSkills* other);

  // implements Message ----------------------------------------------

  BuffReplaceNormalSkills* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffReplaceNormalSkills& from);
  void MergeFrom(const BuffReplaceNormalSkills& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // optional .ProtoBuf.SkillCell oldSkill = 2;
  inline bool has_oldskill() const;
  inline void clear_oldskill();
  static const int kOldSkillFieldNumber = 2;
  inline const ::ProtoBuf::SkillCell& oldskill() const;
  inline ::ProtoBuf::SkillCell* mutable_oldskill();
  inline ::ProtoBuf::SkillCell* release_oldskill();
  inline void set_allocated_oldskill(::ProtoBuf::SkillCell* oldskill);

  // optional .ProtoBuf.SkillCell newSkill = 3;
  inline bool has_newskill() const;
  inline void clear_newskill();
  static const int kNewSkillFieldNumber = 3;
  inline const ::ProtoBuf::SkillCell& newskill() const;
  inline ::ProtoBuf::SkillCell* mutable_newskill();
  inline ::ProtoBuf::SkillCell* release_newskill();
  inline void set_allocated_newskill(::ProtoBuf::SkillCell* newskill);

  // @@protoc_insertion_point(class_scope:ProtoBuf.BuffReplaceNormalSkills)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_oldskill();
  inline void clear_has_oldskill();
  inline void set_has_newskill();
  inline void clear_has_newskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoBuf::SkillCell* oldskill_;
  ::ProtoBuf::SkillCell* newskill_;
  ::google::protobuf::uint32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fLogicToClient_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fLogicToClient_2eproto();

  void InitAsDefaultInstance();
  static BuffReplaceNormalSkills* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerClientInfo

// required uint32 playerId = 1;
inline bool PlayerClientInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerClientInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerClientInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerClientInfo::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PlayerClientInfo::playerid() const {
  return playerid_;
}
inline void PlayerClientInfo::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string playername = 2;
inline bool PlayerClientInfo::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerClientInfo::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerClientInfo::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerClientInfo::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& PlayerClientInfo::playername() const {
  return *playername_;
}
inline void PlayerClientInfo::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PlayerClientInfo::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void PlayerClientInfo::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerClientInfo::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* PlayerClientInfo::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerClientInfo::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 groupId = 3;
inline bool PlayerClientInfo::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerClientInfo::set_has_groupid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerClientInfo::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerClientInfo::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
inline ::google::protobuf::uint32 PlayerClientInfo::groupid() const {
  return groupid_;
}
inline void PlayerClientInfo::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
}

// required uint64 createTime = 4;
inline bool PlayerClientInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerClientInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerClientInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerClientInfo::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 PlayerClientInfo::createtime() const {
  return createtime_;
}
inline void PlayerClientInfo::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
}

// required uint64 loginTime = 5;
inline bool PlayerClientInfo::has_logintime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerClientInfo::set_has_logintime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerClientInfo::clear_has_logintime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerClientInfo::clear_logintime() {
  logintime_ = GOOGLE_ULONGLONG(0);
  clear_has_logintime();
}
inline ::google::protobuf::uint64 PlayerClientInfo::logintime() const {
  return logintime_;
}
inline void PlayerClientInfo::set_logintime(::google::protobuf::uint64 value) {
  set_has_logintime();
  logintime_ = value;
}

// required uint32 mapId = 6;
inline bool PlayerClientInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerClientInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerClientInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerClientInfo::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 PlayerClientInfo::mapid() const {
  return mapid_;
}
inline void PlayerClientInfo::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required float posX = 7;
inline bool PlayerClientInfo::has_posx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerClientInfo::set_has_posx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerClientInfo::clear_has_posx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerClientInfo::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float PlayerClientInfo::posx() const {
  return posx_;
}
inline void PlayerClientInfo::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 8;
inline bool PlayerClientInfo::has_posy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerClientInfo::set_has_posy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerClientInfo::clear_has_posy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerClientInfo::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float PlayerClientInfo::posy() const {
  return posy_;
}
inline void PlayerClientInfo::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 9;
inline bool PlayerClientInfo::has_posz() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerClientInfo::set_has_posz() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerClientInfo::clear_has_posz() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerClientInfo::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float PlayerClientInfo::posz() const {
  return posz_;
}
inline void PlayerClientInfo::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// required float mspeed = 10;
inline bool PlayerClientInfo::has_mspeed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerClientInfo::set_has_mspeed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerClientInfo::clear_has_mspeed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerClientInfo::clear_mspeed() {
  mspeed_ = 0;
  clear_has_mspeed();
}
inline float PlayerClientInfo::mspeed() const {
  return mspeed_;
}
inline void PlayerClientInfo::set_mspeed(float value) {
  set_has_mspeed();
  mspeed_ = value;
}

// required uint32 namebody = 11;
inline bool PlayerClientInfo::has_namebody() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerClientInfo::set_has_namebody() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerClientInfo::clear_has_namebody() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerClientInfo::clear_namebody() {
  namebody_ = 0u;
  clear_has_namebody();
}
inline ::google::protobuf::uint32 PlayerClientInfo::namebody() const {
  return namebody_;
}
inline void PlayerClientInfo::set_namebody(::google::protobuf::uint32 value) {
  set_has_namebody();
  namebody_ = value;
}

// required uint32 nameweapon = 12;
inline bool PlayerClientInfo::has_nameweapon() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerClientInfo::set_has_nameweapon() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerClientInfo::clear_has_nameweapon() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerClientInfo::clear_nameweapon() {
  nameweapon_ = 0u;
  clear_has_nameweapon();
}
inline ::google::protobuf::uint32 PlayerClientInfo::nameweapon() const {
  return nameweapon_;
}
inline void PlayerClientInfo::set_nameweapon(::google::protobuf::uint32 value) {
  set_has_nameweapon();
  nameweapon_ = value;
}

// required uint32 curstate = 13;
inline bool PlayerClientInfo::has_curstate() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlayerClientInfo::set_has_curstate() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlayerClientInfo::clear_has_curstate() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlayerClientInfo::clear_curstate() {
  curstate_ = 0u;
  clear_has_curstate();
}
inline ::google::protobuf::uint32 PlayerClientInfo::curstate() const {
  return curstate_;
}
inline void PlayerClientInfo::set_curstate(::google::protobuf::uint32 value) {
  set_has_curstate();
  curstate_ = value;
}

// repeated .ProtoBuf.SkillCell skills = 14;
inline int PlayerClientInfo::skills_size() const {
  return skills_.size();
}
inline void PlayerClientInfo::clear_skills() {
  skills_.Clear();
}
inline const ::ProtoBuf::SkillCell& PlayerClientInfo::skills(int index) const {
  return skills_.Get(index);
}
inline ::ProtoBuf::SkillCell* PlayerClientInfo::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::ProtoBuf::SkillCell* PlayerClientInfo::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >&
PlayerClientInfo::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >*
PlayerClientInfo::mutable_skills() {
  return &skills_;
}

// repeated .ProtoBuf.Attr playerAttrs = 15;
inline int PlayerClientInfo::playerattrs_size() const {
  return playerattrs_.size();
}
inline void PlayerClientInfo::clear_playerattrs() {
  playerattrs_.Clear();
}
inline const ::ProtoBuf::Attr& PlayerClientInfo::playerattrs(int index) const {
  return playerattrs_.Get(index);
}
inline ::ProtoBuf::Attr* PlayerClientInfo::mutable_playerattrs(int index) {
  return playerattrs_.Mutable(index);
}
inline ::ProtoBuf::Attr* PlayerClientInfo::add_playerattrs() {
  return playerattrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
PlayerClientInfo::playerattrs() const {
  return playerattrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
PlayerClientInfo::mutable_playerattrs() {
  return &playerattrs_;
}

// required uint32 pk_mode = 16;
inline bool PlayerClientInfo::has_pk_mode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PlayerClientInfo::set_has_pk_mode() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PlayerClientInfo::clear_has_pk_mode() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PlayerClientInfo::clear_pk_mode() {
  pk_mode_ = 0u;
  clear_has_pk_mode();
}
inline ::google::protobuf::uint32 PlayerClientInfo::pk_mode() const {
  return pk_mode_;
}
inline void PlayerClientInfo::set_pk_mode(::google::protobuf::uint32 value) {
  set_has_pk_mode();
  pk_mode_ = value;
}

// required uint32 pk_killing_value = 17;
inline bool PlayerClientInfo::has_pk_killing_value() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PlayerClientInfo::set_has_pk_killing_value() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PlayerClientInfo::clear_has_pk_killing_value() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PlayerClientInfo::clear_pk_killing_value() {
  pk_killing_value_ = 0u;
  clear_has_pk_killing_value();
}
inline ::google::protobuf::uint32 PlayerClientInfo::pk_killing_value() const {
  return pk_killing_value_;
}
inline void PlayerClientInfo::set_pk_killing_value(::google::protobuf::uint32 value) {
  set_has_pk_killing_value();
  pk_killing_value_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Player

// required uint32 playerId = 1;
inline bool CreaturesCreateData_Player::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Player::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Player::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Player::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::playerid() const {
  return playerid_;
}
inline void CreaturesCreateData_Player::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required string playername = 2;
inline bool CreaturesCreateData_Player::has_playername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Player::set_has_playername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Player::clear_has_playername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Player::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& CreaturesCreateData_Player::playername() const {
  return *playername_;
}
inline void CreaturesCreateData_Player::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void CreaturesCreateData_Player::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void CreaturesCreateData_Player::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreaturesCreateData_Player::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* CreaturesCreateData_Player::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreaturesCreateData_Player::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 prof = 3;
inline bool CreaturesCreateData_Player::has_prof() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Player::set_has_prof() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Player::clear_has_prof() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Player::clear_prof() {
  prof_ = 0u;
  clear_has_prof();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::prof() const {
  return prof_;
}
inline void CreaturesCreateData_Player::set_prof(::google::protobuf::uint32 value) {
  set_has_prof();
  prof_ = value;
}

// required uint32 level = 4;
inline bool CreaturesCreateData_Player::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Player::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Player::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Player::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::level() const {
  return level_;
}
inline void CreaturesCreateData_Player::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 hp = 5;
inline bool CreaturesCreateData_Player::has_hp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Player::set_has_hp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Player::clear_has_hp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Player::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::hp() const {
  return hp_;
}
inline void CreaturesCreateData_Player::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required uint32 maxhp = 6;
inline bool CreaturesCreateData_Player::has_maxhp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreaturesCreateData_Player::set_has_maxhp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreaturesCreateData_Player::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreaturesCreateData_Player::clear_maxhp() {
  maxhp_ = 0u;
  clear_has_maxhp();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::maxhp() const {
  return maxhp_;
}
inline void CreaturesCreateData_Player::set_maxhp(::google::protobuf::uint32 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// required float posX = 7;
inline bool CreaturesCreateData_Player::has_posx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreaturesCreateData_Player::set_has_posx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreaturesCreateData_Player::clear_has_posx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreaturesCreateData_Player::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Player::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Player::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 8;
inline bool CreaturesCreateData_Player::has_posy() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreaturesCreateData_Player::set_has_posy() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreaturesCreateData_Player::clear_has_posy() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreaturesCreateData_Player::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Player::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Player::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 9;
inline bool CreaturesCreateData_Player::has_posz() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreaturesCreateData_Player::set_has_posz() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreaturesCreateData_Player::clear_has_posz() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreaturesCreateData_Player::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Player::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Player::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// required uint32 playerrace = 10;
inline bool CreaturesCreateData_Player::has_playerrace() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CreaturesCreateData_Player::set_has_playerrace() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CreaturesCreateData_Player::clear_has_playerrace() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CreaturesCreateData_Player::clear_playerrace() {
  playerrace_ = 0u;
  clear_has_playerrace();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::playerrace() const {
  return playerrace_;
}
inline void CreaturesCreateData_Player::set_playerrace(::google::protobuf::uint32 value) {
  set_has_playerrace();
  playerrace_ = value;
}

// required uint32 gender = 11;
inline bool CreaturesCreateData_Player::has_gender() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CreaturesCreateData_Player::set_has_gender() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CreaturesCreateData_Player::clear_has_gender() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CreaturesCreateData_Player::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::gender() const {
  return gender_;
}
inline void CreaturesCreateData_Player::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// required uint32 namebody = 12;
inline bool CreaturesCreateData_Player::has_namebody() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CreaturesCreateData_Player::set_has_namebody() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CreaturesCreateData_Player::clear_has_namebody() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CreaturesCreateData_Player::clear_namebody() {
  namebody_ = 0u;
  clear_has_namebody();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::namebody() const {
  return namebody_;
}
inline void CreaturesCreateData_Player::set_namebody(::google::protobuf::uint32 value) {
  set_has_namebody();
  namebody_ = value;
}

// required uint32 nameweapon = 13;
inline bool CreaturesCreateData_Player::has_nameweapon() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CreaturesCreateData_Player::set_has_nameweapon() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CreaturesCreateData_Player::clear_has_nameweapon() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CreaturesCreateData_Player::clear_nameweapon() {
  nameweapon_ = 0u;
  clear_has_nameweapon();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::nameweapon() const {
  return nameweapon_;
}
inline void CreaturesCreateData_Player::set_nameweapon(::google::protobuf::uint32 value) {
  set_has_nameweapon();
  nameweapon_ = value;
}

// required uint32 curstate = 14;
inline bool CreaturesCreateData_Player::has_curstate() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CreaturesCreateData_Player::set_has_curstate() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CreaturesCreateData_Player::clear_has_curstate() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CreaturesCreateData_Player::clear_curstate() {
  curstate_ = 0u;
  clear_has_curstate();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::curstate() const {
  return curstate_;
}
inline void CreaturesCreateData_Player::set_curstate(::google::protobuf::uint32 value) {
  set_has_curstate();
  curstate_ = value;
}

// optional float mspeed = 15;
inline bool CreaturesCreateData_Player::has_mspeed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CreaturesCreateData_Player::set_has_mspeed() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CreaturesCreateData_Player::clear_has_mspeed() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CreaturesCreateData_Player::clear_mspeed() {
  mspeed_ = 0;
  clear_has_mspeed();
}
inline float CreaturesCreateData_Player::mspeed() const {
  return mspeed_;
}
inline void CreaturesCreateData_Player::set_mspeed(float value) {
  set_has_mspeed();
  mspeed_ = value;
}

// optional uint32 pk_mode = 16;
inline bool CreaturesCreateData_Player::has_pk_mode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CreaturesCreateData_Player::set_has_pk_mode() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CreaturesCreateData_Player::clear_has_pk_mode() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CreaturesCreateData_Player::clear_pk_mode() {
  pk_mode_ = 0u;
  clear_has_pk_mode();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::pk_mode() const {
  return pk_mode_;
}
inline void CreaturesCreateData_Player::set_pk_mode(::google::protobuf::uint32 value) {
  set_has_pk_mode();
  pk_mode_ = value;
}

// optional uint32 pk_killing_value = 17;
inline bool CreaturesCreateData_Player::has_pk_killing_value() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CreaturesCreateData_Player::set_has_pk_killing_value() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CreaturesCreateData_Player::clear_has_pk_killing_value() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CreaturesCreateData_Player::clear_pk_killing_value() {
  pk_killing_value_ = 0u;
  clear_has_pk_killing_value();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Player::pk_killing_value() const {
  return pk_killing_value_;
}
inline void CreaturesCreateData_Player::set_pk_killing_value(::google::protobuf::uint32 value) {
  set_has_pk_killing_value();
  pk_killing_value_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Monster

// required uint32 monsterCid = 1;
inline bool CreaturesCreateData_Monster::has_monstercid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_monstercid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Monster::clear_has_monstercid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Monster::clear_monstercid() {
  monstercid_ = 0u;
  clear_has_monstercid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Monster::monstercid() const {
  return monstercid_;
}
inline void CreaturesCreateData_Monster::set_monstercid(::google::protobuf::uint32 value) {
  set_has_monstercid();
  monstercid_ = value;
}

// required uint32 monsterConfigId = 2;
inline bool CreaturesCreateData_Monster::has_monsterconfigid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_monsterconfigid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Monster::clear_has_monsterconfigid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Monster::clear_monsterconfigid() {
  monsterconfigid_ = 0u;
  clear_has_monsterconfigid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Monster::monsterconfigid() const {
  return monsterconfigid_;
}
inline void CreaturesCreateData_Monster::set_monsterconfigid(::google::protobuf::uint32 value) {
  set_has_monsterconfigid();
  monsterconfigid_ = value;
}

// required uint32 hp = 3;
inline bool CreaturesCreateData_Monster::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Monster::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Monster::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Monster::hp() const {
  return hp_;
}
inline void CreaturesCreateData_Monster::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required float posX = 4;
inline bool CreaturesCreateData_Monster::has_posx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_posx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Monster::clear_has_posx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Monster::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Monster::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Monster::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 5;
inline bool CreaturesCreateData_Monster::has_posy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_posy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Monster::clear_has_posy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Monster::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Monster::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Monster::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 6;
inline bool CreaturesCreateData_Monster::has_posz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_posz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreaturesCreateData_Monster::clear_has_posz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreaturesCreateData_Monster::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Monster::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Monster::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// required uint32 curstate = 7;
inline bool CreaturesCreateData_Monster::has_curstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_curstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreaturesCreateData_Monster::clear_has_curstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreaturesCreateData_Monster::clear_curstate() {
  curstate_ = 0u;
  clear_has_curstate();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Monster::curstate() const {
  return curstate_;
}
inline void CreaturesCreateData_Monster::set_curstate(::google::protobuf::uint32 value) {
  set_has_curstate();
  curstate_ = value;
}

// required float mspeed = 8;
inline bool CreaturesCreateData_Monster::has_mspeed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreaturesCreateData_Monster::set_has_mspeed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreaturesCreateData_Monster::clear_has_mspeed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreaturesCreateData_Monster::clear_mspeed() {
  mspeed_ = 0;
  clear_has_mspeed();
}
inline float CreaturesCreateData_Monster::mspeed() const {
  return mspeed_;
}
inline void CreaturesCreateData_Monster::set_mspeed(float value) {
  set_has_mspeed();
  mspeed_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Npc

// required uint32 npcCid = 1;
inline bool CreaturesCreateData_Npc::has_npccid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Npc::set_has_npccid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Npc::clear_has_npccid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Npc::clear_npccid() {
  npccid_ = 0u;
  clear_has_npccid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Npc::npccid() const {
  return npccid_;
}
inline void CreaturesCreateData_Npc::set_npccid(::google::protobuf::uint32 value) {
  set_has_npccid();
  npccid_ = value;
}

// required uint32 npcConfigId = 2;
inline bool CreaturesCreateData_Npc::has_npcconfigid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Npc::set_has_npcconfigid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Npc::clear_has_npcconfigid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Npc::clear_npcconfigid() {
  npcconfigid_ = 0u;
  clear_has_npcconfigid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Npc::npcconfigid() const {
  return npcconfigid_;
}
inline void CreaturesCreateData_Npc::set_npcconfigid(::google::protobuf::uint32 value) {
  set_has_npcconfigid();
  npcconfigid_ = value;
}

// required float posX = 3;
inline bool CreaturesCreateData_Npc::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Npc::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Npc::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Npc::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Npc::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Npc::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 4;
inline bool CreaturesCreateData_Npc::has_posy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Npc::set_has_posy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Npc::clear_has_posy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Npc::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Npc::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Npc::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 5;
inline bool CreaturesCreateData_Npc::has_posz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Npc::set_has_posz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Npc::clear_has_posz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Npc::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Npc::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Npc::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Drop

// required uint32 dropCid = 1;
inline bool CreaturesCreateData_Drop::has_dropcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_dropcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Drop::clear_has_dropcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Drop::clear_dropcid() {
  dropcid_ = 0u;
  clear_has_dropcid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Drop::dropcid() const {
  return dropcid_;
}
inline void CreaturesCreateData_Drop::set_dropcid(::google::protobuf::uint32 value) {
  set_has_dropcid();
  dropcid_ = value;
}

// required float posX = 2;
inline bool CreaturesCreateData_Drop::has_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_posx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Drop::clear_has_posx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Drop::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Drop::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Drop::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 3;
inline bool CreaturesCreateData_Drop::has_posy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_posy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Drop::clear_has_posy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Drop::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Drop::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Drop::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 4;
inline bool CreaturesCreateData_Drop::has_posz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_posz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Drop::clear_has_posz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Drop::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Drop::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Drop::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// required int32 dropType = 5;
inline bool CreaturesCreateData_Drop::has_droptype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_droptype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Drop::clear_has_droptype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Drop::clear_droptype() {
  droptype_ = 0;
  clear_has_droptype();
}
inline ::google::protobuf::int32 CreaturesCreateData_Drop::droptype() const {
  return droptype_;
}
inline void CreaturesCreateData_Drop::set_droptype(::google::protobuf::int32 value) {
  set_has_droptype();
  droptype_ = value;
}

// required uint32 dropTypeVal = 6;
inline bool CreaturesCreateData_Drop::has_droptypeval() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_droptypeval() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreaturesCreateData_Drop::clear_has_droptypeval() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreaturesCreateData_Drop::clear_droptypeval() {
  droptypeval_ = 0u;
  clear_has_droptypeval();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Drop::droptypeval() const {
  return droptypeval_;
}
inline void CreaturesCreateData_Drop::set_droptypeval(::google::protobuf::uint32 value) {
  set_has_droptypeval();
  droptypeval_ = value;
}

// required uint64 dropTime = 7;
inline bool CreaturesCreateData_Drop::has_droptime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_droptime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreaturesCreateData_Drop::clear_has_droptime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreaturesCreateData_Drop::clear_droptime() {
  droptime_ = GOOGLE_ULONGLONG(0);
  clear_has_droptime();
}
inline ::google::protobuf::uint64 CreaturesCreateData_Drop::droptime() const {
  return droptime_;
}
inline void CreaturesCreateData_Drop::set_droptime(::google::protobuf::uint64 value) {
  set_has_droptime();
  droptime_ = value;
}

// optional .ProtoBuf.ItemProtoInfo item = 8;
inline bool CreaturesCreateData_Drop::has_item() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_item() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreaturesCreateData_Drop::clear_has_item() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreaturesCreateData_Drop::clear_item() {
  if (item_ != NULL) item_->::ProtoBuf::ItemProtoInfo::Clear();
  clear_has_item();
}
inline const ::ProtoBuf::ItemProtoInfo& CreaturesCreateData_Drop::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::ProtoBuf::ItemProtoInfo* CreaturesCreateData_Drop::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::ProtoBuf::ItemProtoInfo;
  return item_;
}
inline ::ProtoBuf::ItemProtoInfo* CreaturesCreateData_Drop::release_item() {
  clear_has_item();
  ::ProtoBuf::ItemProtoInfo* temp = item_;
  item_ = NULL;
  return temp;
}
inline void CreaturesCreateData_Drop::set_allocated_item(::ProtoBuf::ItemProtoInfo* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// optional uint32 gold = 9;
inline bool CreaturesCreateData_Drop::has_gold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreaturesCreateData_Drop::set_has_gold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreaturesCreateData_Drop::clear_has_gold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreaturesCreateData_Drop::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Drop::gold() const {
  return gold_;
}
inline void CreaturesCreateData_Drop::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Summon

// required uint32 summonCid = 1;
inline bool CreaturesCreateData_Summon::has_summoncid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_summoncid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Summon::clear_has_summoncid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Summon::clear_summoncid() {
  summoncid_ = 0u;
  clear_has_summoncid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Summon::summoncid() const {
  return summoncid_;
}
inline void CreaturesCreateData_Summon::set_summoncid(::google::protobuf::uint32 value) {
  set_has_summoncid();
  summoncid_ = value;
}

// required uint32 summonConfigId = 2;
inline bool CreaturesCreateData_Summon::has_summonconfigid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_summonconfigid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Summon::clear_has_summonconfigid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Summon::clear_summonconfigid() {
  summonconfigid_ = 0u;
  clear_has_summonconfigid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Summon::summonconfigid() const {
  return summonconfigid_;
}
inline void CreaturesCreateData_Summon::set_summonconfigid(::google::protobuf::uint32 value) {
  set_has_summonconfigid();
  summonconfigid_ = value;
}

// required uint32 hp = 3;
inline bool CreaturesCreateData_Summon::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Summon::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Summon::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Summon::hp() const {
  return hp_;
}
inline void CreaturesCreateData_Summon::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required float posX = 4;
inline bool CreaturesCreateData_Summon::has_posx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_posx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Summon::clear_has_posx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Summon::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Summon::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Summon::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 5;
inline bool CreaturesCreateData_Summon::has_posy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_posy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Summon::clear_has_posy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Summon::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Summon::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Summon::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 6;
inline bool CreaturesCreateData_Summon::has_posz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_posz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreaturesCreateData_Summon::clear_has_posz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreaturesCreateData_Summon::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Summon::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Summon::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// required uint32 curstate = 7;
inline bool CreaturesCreateData_Summon::has_curstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_curstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreaturesCreateData_Summon::clear_has_curstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreaturesCreateData_Summon::clear_curstate() {
  curstate_ = 0u;
  clear_has_curstate();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Summon::curstate() const {
  return curstate_;
}
inline void CreaturesCreateData_Summon::set_curstate(::google::protobuf::uint32 value) {
  set_has_curstate();
  curstate_ = value;
}

// required float mspeed = 8;
inline bool CreaturesCreateData_Summon::has_mspeed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreaturesCreateData_Summon::set_has_mspeed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreaturesCreateData_Summon::clear_has_mspeed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreaturesCreateData_Summon::clear_mspeed() {
  mspeed_ = 0;
  clear_has_mspeed();
}
inline float CreaturesCreateData_Summon::mspeed() const {
  return mspeed_;
}
inline void CreaturesCreateData_Summon::set_mspeed(float value) {
  set_has_mspeed();
  mspeed_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Pet

// required uint32 petCid = 1;
inline bool CreaturesCreateData_Pet::has_petcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_petcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Pet::clear_has_petcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Pet::clear_petcid() {
  petcid_ = 0u;
  clear_has_petcid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Pet::petcid() const {
  return petcid_;
}
inline void CreaturesCreateData_Pet::set_petcid(::google::protobuf::uint32 value) {
  set_has_petcid();
  petcid_ = value;
}

// required uint32 petConfigId = 2;
inline bool CreaturesCreateData_Pet::has_petconfigid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_petconfigid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Pet::clear_has_petconfigid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Pet::clear_petconfigid() {
  petconfigid_ = 0u;
  clear_has_petconfigid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Pet::petconfigid() const {
  return petconfigid_;
}
inline void CreaturesCreateData_Pet::set_petconfigid(::google::protobuf::uint32 value) {
  set_has_petconfigid();
  petconfigid_ = value;
}

// required uint32 hp = 3;
inline bool CreaturesCreateData_Pet::has_hp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_hp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Pet::clear_has_hp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Pet::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Pet::hp() const {
  return hp_;
}
inline void CreaturesCreateData_Pet::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// required float posX = 4;
inline bool CreaturesCreateData_Pet::has_posx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_posx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Pet::clear_has_posx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Pet::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Pet::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Pet::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 5;
inline bool CreaturesCreateData_Pet::has_posy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_posy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Pet::clear_has_posy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Pet::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Pet::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Pet::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 6;
inline bool CreaturesCreateData_Pet::has_posz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_posz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreaturesCreateData_Pet::clear_has_posz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreaturesCreateData_Pet::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Pet::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Pet::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// required uint32 curstate = 7;
inline bool CreaturesCreateData_Pet::has_curstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_curstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreaturesCreateData_Pet::clear_has_curstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreaturesCreateData_Pet::clear_curstate() {
  curstate_ = 0u;
  clear_has_curstate();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Pet::curstate() const {
  return curstate_;
}
inline void CreaturesCreateData_Pet::set_curstate(::google::protobuf::uint32 value) {
  set_has_curstate();
  curstate_ = value;
}

// required float mspeed = 8;
inline bool CreaturesCreateData_Pet::has_mspeed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreaturesCreateData_Pet::set_has_mspeed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreaturesCreateData_Pet::clear_has_mspeed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreaturesCreateData_Pet::clear_mspeed() {
  mspeed_ = 0;
  clear_has_mspeed();
}
inline float CreaturesCreateData_Pet::mspeed() const {
  return mspeed_;
}
inline void CreaturesCreateData_Pet::set_mspeed(float value) {
  set_has_mspeed();
  mspeed_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Herbs

// required uint32 herbsCid = 1;
inline bool CreaturesCreateData_Herbs::has_herbscid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Herbs::set_has_herbscid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Herbs::clear_has_herbscid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Herbs::clear_herbscid() {
  herbscid_ = 0u;
  clear_has_herbscid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Herbs::herbscid() const {
  return herbscid_;
}
inline void CreaturesCreateData_Herbs::set_herbscid(::google::protobuf::uint32 value) {
  set_has_herbscid();
  herbscid_ = value;
}

// required uint32 herbsId = 2;
inline bool CreaturesCreateData_Herbs::has_herbsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Herbs::set_has_herbsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Herbs::clear_has_herbsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Herbs::clear_herbsid() {
  herbsid_ = 0u;
  clear_has_herbsid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Herbs::herbsid() const {
  return herbsid_;
}
inline void CreaturesCreateData_Herbs::set_herbsid(::google::protobuf::uint32 value) {
  set_has_herbsid();
  herbsid_ = value;
}

// required float posX = 3;
inline bool CreaturesCreateData_Herbs::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Herbs::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Herbs::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Herbs::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Herbs::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Herbs::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 4;
inline bool CreaturesCreateData_Herbs::has_posy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Herbs::set_has_posy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Herbs::clear_has_posy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Herbs::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Herbs::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Herbs::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 5;
inline bool CreaturesCreateData_Herbs::has_posz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Herbs::set_has_posz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Herbs::clear_has_posz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Herbs::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Herbs::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Herbs::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Mine

// required uint32 mineCid = 1;
inline bool CreaturesCreateData_Mine::has_minecid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Mine::set_has_minecid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Mine::clear_has_minecid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Mine::clear_minecid() {
  minecid_ = 0u;
  clear_has_minecid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Mine::minecid() const {
  return minecid_;
}
inline void CreaturesCreateData_Mine::set_minecid(::google::protobuf::uint32 value) {
  set_has_minecid();
  minecid_ = value;
}

// required uint32 mineId = 2;
inline bool CreaturesCreateData_Mine::has_mineid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Mine::set_has_mineid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Mine::clear_has_mineid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Mine::clear_mineid() {
  mineid_ = 0u;
  clear_has_mineid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Mine::mineid() const {
  return mineid_;
}
inline void CreaturesCreateData_Mine::set_mineid(::google::protobuf::uint32 value) {
  set_has_mineid();
  mineid_ = value;
}

// required float posX = 3;
inline bool CreaturesCreateData_Mine::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Mine::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Mine::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Mine::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Mine::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Mine::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 4;
inline bool CreaturesCreateData_Mine::has_posy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Mine::set_has_posy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Mine::clear_has_posy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Mine::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Mine::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Mine::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 5;
inline bool CreaturesCreateData_Mine::has_posz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Mine::set_has_posz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Mine::clear_has_posz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Mine::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Mine::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Mine::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData_Fish

// required uint32 fishCid = 1;
inline bool CreaturesCreateData_Fish::has_fishcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesCreateData_Fish::set_has_fishcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesCreateData_Fish::clear_has_fishcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesCreateData_Fish::clear_fishcid() {
  fishcid_ = 0u;
  clear_has_fishcid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Fish::fishcid() const {
  return fishcid_;
}
inline void CreaturesCreateData_Fish::set_fishcid(::google::protobuf::uint32 value) {
  set_has_fishcid();
  fishcid_ = value;
}

// required uint32 fishId = 2;
inline bool CreaturesCreateData_Fish::has_fishid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesCreateData_Fish::set_has_fishid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesCreateData_Fish::clear_has_fishid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesCreateData_Fish::clear_fishid() {
  fishid_ = 0u;
  clear_has_fishid();
}
inline ::google::protobuf::uint32 CreaturesCreateData_Fish::fishid() const {
  return fishid_;
}
inline void CreaturesCreateData_Fish::set_fishid(::google::protobuf::uint32 value) {
  set_has_fishid();
  fishid_ = value;
}

// required float posX = 3;
inline bool CreaturesCreateData_Fish::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreaturesCreateData_Fish::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreaturesCreateData_Fish::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreaturesCreateData_Fish::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline float CreaturesCreateData_Fish::posx() const {
  return posx_;
}
inline void CreaturesCreateData_Fish::set_posx(float value) {
  set_has_posx();
  posx_ = value;
}

// required float posY = 4;
inline bool CreaturesCreateData_Fish::has_posy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesCreateData_Fish::set_has_posy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesCreateData_Fish::clear_has_posy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesCreateData_Fish::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline float CreaturesCreateData_Fish::posy() const {
  return posy_;
}
inline void CreaturesCreateData_Fish::set_posy(float value) {
  set_has_posy();
  posy_ = value;
}

// required float posZ = 5;
inline bool CreaturesCreateData_Fish::has_posz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreaturesCreateData_Fish::set_has_posz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreaturesCreateData_Fish::clear_has_posz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreaturesCreateData_Fish::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline float CreaturesCreateData_Fish::posz() const {
  return posz_;
}
inline void CreaturesCreateData_Fish::set_posz(float value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// CreaturesCreateData

// repeated .ProtoBuf.CreaturesCreateData.Player players = 1;
inline int CreaturesCreateData::players_size() const {
  return players_.size();
}
inline void CreaturesCreateData::clear_players() {
  players_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Player& CreaturesCreateData::players(int index) const {
  return players_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Player* CreaturesCreateData::mutable_players(int index) {
  return players_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Player* CreaturesCreateData::add_players() {
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Player >&
CreaturesCreateData::players() const {
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Player >*
CreaturesCreateData::mutable_players() {
  return &players_;
}

// repeated .ProtoBuf.CreaturesCreateData.Monster monsters = 2;
inline int CreaturesCreateData::monsters_size() const {
  return monsters_.size();
}
inline void CreaturesCreateData::clear_monsters() {
  monsters_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Monster& CreaturesCreateData::monsters(int index) const {
  return monsters_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Monster* CreaturesCreateData::mutable_monsters(int index) {
  return monsters_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Monster* CreaturesCreateData::add_monsters() {
  return monsters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Monster >&
CreaturesCreateData::monsters() const {
  return monsters_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Monster >*
CreaturesCreateData::mutable_monsters() {
  return &monsters_;
}

// repeated .ProtoBuf.CreaturesCreateData.Npc npcs = 3;
inline int CreaturesCreateData::npcs_size() const {
  return npcs_.size();
}
inline void CreaturesCreateData::clear_npcs() {
  npcs_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Npc& CreaturesCreateData::npcs(int index) const {
  return npcs_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Npc* CreaturesCreateData::mutable_npcs(int index) {
  return npcs_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Npc* CreaturesCreateData::add_npcs() {
  return npcs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Npc >&
CreaturesCreateData::npcs() const {
  return npcs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Npc >*
CreaturesCreateData::mutable_npcs() {
  return &npcs_;
}

// repeated .ProtoBuf.CreaturesCreateData.Drop drops = 4;
inline int CreaturesCreateData::drops_size() const {
  return drops_.size();
}
inline void CreaturesCreateData::clear_drops() {
  drops_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Drop& CreaturesCreateData::drops(int index) const {
  return drops_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Drop* CreaturesCreateData::mutable_drops(int index) {
  return drops_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Drop* CreaturesCreateData::add_drops() {
  return drops_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Drop >&
CreaturesCreateData::drops() const {
  return drops_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Drop >*
CreaturesCreateData::mutable_drops() {
  return &drops_;
}

// repeated .ProtoBuf.CreaturesCreateData.Summon summons = 5;
inline int CreaturesCreateData::summons_size() const {
  return summons_.size();
}
inline void CreaturesCreateData::clear_summons() {
  summons_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Summon& CreaturesCreateData::summons(int index) const {
  return summons_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Summon* CreaturesCreateData::mutable_summons(int index) {
  return summons_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Summon* CreaturesCreateData::add_summons() {
  return summons_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Summon >&
CreaturesCreateData::summons() const {
  return summons_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Summon >*
CreaturesCreateData::mutable_summons() {
  return &summons_;
}

// repeated .ProtoBuf.CreaturesCreateData.Herbs herbs = 6;
inline int CreaturesCreateData::herbs_size() const {
  return herbs_.size();
}
inline void CreaturesCreateData::clear_herbs() {
  herbs_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Herbs& CreaturesCreateData::herbs(int index) const {
  return herbs_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Herbs* CreaturesCreateData::mutable_herbs(int index) {
  return herbs_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Herbs* CreaturesCreateData::add_herbs() {
  return herbs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Herbs >&
CreaturesCreateData::herbs() const {
  return herbs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Herbs >*
CreaturesCreateData::mutable_herbs() {
  return &herbs_;
}

// repeated .ProtoBuf.CreaturesCreateData.Mine mines = 7;
inline int CreaturesCreateData::mines_size() const {
  return mines_.size();
}
inline void CreaturesCreateData::clear_mines() {
  mines_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Mine& CreaturesCreateData::mines(int index) const {
  return mines_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Mine* CreaturesCreateData::mutable_mines(int index) {
  return mines_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Mine* CreaturesCreateData::add_mines() {
  return mines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Mine >&
CreaturesCreateData::mines() const {
  return mines_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Mine >*
CreaturesCreateData::mutable_mines() {
  return &mines_;
}

// repeated .ProtoBuf.CreaturesCreateData.Fish fishs = 8;
inline int CreaturesCreateData::fishs_size() const {
  return fishs_.size();
}
inline void CreaturesCreateData::clear_fishs() {
  fishs_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Fish& CreaturesCreateData::fishs(int index) const {
  return fishs_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Fish* CreaturesCreateData::mutable_fishs(int index) {
  return fishs_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Fish* CreaturesCreateData::add_fishs() {
  return fishs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Fish >&
CreaturesCreateData::fishs() const {
  return fishs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Fish >*
CreaturesCreateData::mutable_fishs() {
  return &fishs_;
}

// repeated .ProtoBuf.CreaturesCreateData.Pet pets = 9;
inline int CreaturesCreateData::pets_size() const {
  return pets_.size();
}
inline void CreaturesCreateData::clear_pets() {
  pets_.Clear();
}
inline const ::ProtoBuf::CreaturesCreateData_Pet& CreaturesCreateData::pets(int index) const {
  return pets_.Get(index);
}
inline ::ProtoBuf::CreaturesCreateData_Pet* CreaturesCreateData::mutable_pets(int index) {
  return pets_.Mutable(index);
}
inline ::ProtoBuf::CreaturesCreateData_Pet* CreaturesCreateData::add_pets() {
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Pet >&
CreaturesCreateData::pets() const {
  return pets_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CreaturesCreateData_Pet >*
CreaturesCreateData::mutable_pets() {
  return &pets_;
}

// -------------------------------------------------------------------

// CreatureDestoryData

// repeated uint32 cids = 1;
inline int CreatureDestoryData::cids_size() const {
  return cids_.size();
}
inline void CreatureDestoryData::clear_cids() {
  cids_.Clear();
}
inline ::google::protobuf::uint32 CreatureDestoryData::cids(int index) const {
  return cids_.Get(index);
}
inline void CreatureDestoryData::set_cids(int index, ::google::protobuf::uint32 value) {
  cids_.Set(index, value);
}
inline void CreatureDestoryData::add_cids(::google::protobuf::uint32 value) {
  cids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CreatureDestoryData::cids() const {
  return cids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CreatureDestoryData::mutable_cids() {
  return &cids_;
}

// -------------------------------------------------------------------

// SynAttrsAllClient

// required uint32 cid = 1;
inline bool SynAttrsAllClient::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynAttrsAllClient::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynAttrsAllClient::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynAttrsAllClient::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 SynAttrsAllClient::cid() const {
  return cid_;
}
inline void SynAttrsAllClient::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// repeated .ProtoBuf.Attr creatureAttrs = 2;
inline int SynAttrsAllClient::creatureattrs_size() const {
  return creatureattrs_.size();
}
inline void SynAttrsAllClient::clear_creatureattrs() {
  creatureattrs_.Clear();
}
inline const ::ProtoBuf::Attr& SynAttrsAllClient::creatureattrs(int index) const {
  return creatureattrs_.Get(index);
}
inline ::ProtoBuf::Attr* SynAttrsAllClient::mutable_creatureattrs(int index) {
  return creatureattrs_.Mutable(index);
}
inline ::ProtoBuf::Attr* SynAttrsAllClient::add_creatureattrs() {
  return creatureattrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
SynAttrsAllClient::creatureattrs() const {
  return creatureattrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
SynAttrsAllClient::mutable_creatureattrs() {
  return &creatureattrs_;
}

// optional string name = 3;
inline bool SynAttrsAllClient::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SynAttrsAllClient::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SynAttrsAllClient::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SynAttrsAllClient::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SynAttrsAllClient::name() const {
  return *name_;
}
inline void SynAttrsAllClient::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SynAttrsAllClient::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void SynAttrsAllClient::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SynAttrsAllClient::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* SynAttrsAllClient::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SynAttrsAllClient::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 curstate = 4;
inline bool SynAttrsAllClient::has_curstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SynAttrsAllClient::set_has_curstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SynAttrsAllClient::clear_has_curstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SynAttrsAllClient::clear_curstate() {
  curstate_ = 0u;
  clear_has_curstate();
}
inline ::google::protobuf::uint32 SynAttrsAllClient::curstate() const {
  return curstate_;
}
inline void SynAttrsAllClient::set_curstate(::google::protobuf::uint32 value) {
  set_has_curstate();
  curstate_ = value;
}

// -------------------------------------------------------------------

// SynAttrsToSingleClient

// required uint32 cid = 1;
inline bool SynAttrsToSingleClient::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SynAttrsToSingleClient::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SynAttrsToSingleClient::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SynAttrsToSingleClient::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 SynAttrsToSingleClient::cid() const {
  return cid_;
}
inline void SynAttrsToSingleClient::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// repeated .ProtoBuf.Attr creatureAttrs = 2;
inline int SynAttrsToSingleClient::creatureattrs_size() const {
  return creatureattrs_.size();
}
inline void SynAttrsToSingleClient::clear_creatureattrs() {
  creatureattrs_.Clear();
}
inline const ::ProtoBuf::Attr& SynAttrsToSingleClient::creatureattrs(int index) const {
  return creatureattrs_.Get(index);
}
inline ::ProtoBuf::Attr* SynAttrsToSingleClient::mutable_creatureattrs(int index) {
  return creatureattrs_.Mutable(index);
}
inline ::ProtoBuf::Attr* SynAttrsToSingleClient::add_creatureattrs() {
  return creatureattrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
SynAttrsToSingleClient::creatureattrs() const {
  return creatureattrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
SynAttrsToSingleClient::mutable_creatureattrs() {
  return &creatureattrs_;
}

// -------------------------------------------------------------------

// CreaturesLevUp_Player

// repeated .ProtoBuf.SkillCell skills = 1;
inline int CreaturesLevUp_Player::skills_size() const {
  return skills_.size();
}
inline void CreaturesLevUp_Player::clear_skills() {
  skills_.Clear();
}
inline const ::ProtoBuf::SkillCell& CreaturesLevUp_Player::skills(int index) const {
  return skills_.Get(index);
}
inline ::ProtoBuf::SkillCell* CreaturesLevUp_Player::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::ProtoBuf::SkillCell* CreaturesLevUp_Player::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >&
CreaturesLevUp_Player::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::SkillCell >*
CreaturesLevUp_Player::mutable_skills() {
  return &skills_;
}

// -------------------------------------------------------------------

// CreaturesLevUp

// required uint32 cid = 1;
inline bool CreaturesLevUp::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreaturesLevUp::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreaturesLevUp::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreaturesLevUp::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 CreaturesLevUp::cid() const {
  return cid_;
}
inline void CreaturesLevUp::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// required uint32 level = 2;
inline bool CreaturesLevUp::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreaturesLevUp::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreaturesLevUp::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreaturesLevUp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CreaturesLevUp::level() const {
  return level_;
}
inline void CreaturesLevUp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// repeated .ProtoBuf.Attr creatureAttrs = 3;
inline int CreaturesLevUp::creatureattrs_size() const {
  return creatureattrs_.size();
}
inline void CreaturesLevUp::clear_creatureattrs() {
  creatureattrs_.Clear();
}
inline const ::ProtoBuf::Attr& CreaturesLevUp::creatureattrs(int index) const {
  return creatureattrs_.Get(index);
}
inline ::ProtoBuf::Attr* CreaturesLevUp::mutable_creatureattrs(int index) {
  return creatureattrs_.Mutable(index);
}
inline ::ProtoBuf::Attr* CreaturesLevUp::add_creatureattrs() {
  return creatureattrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
CreaturesLevUp::creatureattrs() const {
  return creatureattrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
CreaturesLevUp::mutable_creatureattrs() {
  return &creatureattrs_;
}

// optional .ProtoBuf.CreaturesLevUp.Player character = 4;
inline bool CreaturesLevUp::has_character() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreaturesLevUp::set_has_character() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreaturesLevUp::clear_has_character() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreaturesLevUp::clear_character() {
  if (character_ != NULL) character_->::ProtoBuf::CreaturesLevUp_Player::Clear();
  clear_has_character();
}
inline const ::ProtoBuf::CreaturesLevUp_Player& CreaturesLevUp::character() const {
  return character_ != NULL ? *character_ : *default_instance_->character_;
}
inline ::ProtoBuf::CreaturesLevUp_Player* CreaturesLevUp::mutable_character() {
  set_has_character();
  if (character_ == NULL) character_ = new ::ProtoBuf::CreaturesLevUp_Player;
  return character_;
}
inline ::ProtoBuf::CreaturesLevUp_Player* CreaturesLevUp::release_character() {
  clear_has_character();
  ::ProtoBuf::CreaturesLevUp_Player* temp = character_;
  character_ = NULL;
  return temp;
}
inline void CreaturesLevUp::set_allocated_character(::ProtoBuf::CreaturesLevUp_Player* character) {
  delete character_;
  character_ = character;
  if (character) {
    set_has_character();
  } else {
    clear_has_character();
  }
}

// -------------------------------------------------------------------

// AccountLoginLogicResponse

// required uint32 loginResult = 1;
inline bool AccountLoginLogicResponse::has_loginresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountLoginLogicResponse::set_has_loginresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountLoginLogicResponse::clear_has_loginresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountLoginLogicResponse::clear_loginresult() {
  loginresult_ = 0u;
  clear_has_loginresult();
}
inline ::google::protobuf::uint32 AccountLoginLogicResponse::loginresult() const {
  return loginresult_;
}
inline void AccountLoginLogicResponse::set_loginresult(::google::protobuf::uint32 value) {
  set_has_loginresult();
  loginresult_ = value;
}

// required uint64 serverTick = 2;
inline bool AccountLoginLogicResponse::has_servertick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountLoginLogicResponse::set_has_servertick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountLoginLogicResponse::clear_has_servertick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountLoginLogicResponse::clear_servertick() {
  servertick_ = GOOGLE_ULONGLONG(0);
  clear_has_servertick();
}
inline ::google::protobuf::uint64 AccountLoginLogicResponse::servertick() const {
  return servertick_;
}
inline void AccountLoginLogicResponse::set_servertick(::google::protobuf::uint64 value) {
  set_has_servertick();
  servertick_ = value;
}

// required uint64 unixMSec = 3;
inline bool AccountLoginLogicResponse::has_unixmsec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountLoginLogicResponse::set_has_unixmsec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountLoginLogicResponse::clear_has_unixmsec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountLoginLogicResponse::clear_unixmsec() {
  unixmsec_ = GOOGLE_ULONGLONG(0);
  clear_has_unixmsec();
}
inline ::google::protobuf::uint64 AccountLoginLogicResponse::unixmsec() const {
  return unixmsec_;
}
inline void AccountLoginLogicResponse::set_unixmsec(::google::protobuf::uint64 value) {
  set_has_unixmsec();
  unixmsec_ = value;
}

// optional uint32 accountIndex = 4;
inline bool AccountLoginLogicResponse::has_accountindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccountLoginLogicResponse::set_has_accountindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccountLoginLogicResponse::clear_has_accountindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccountLoginLogicResponse::clear_accountindex() {
  accountindex_ = 0u;
  clear_has_accountindex();
}
inline ::google::protobuf::uint32 AccountLoginLogicResponse::accountindex() const {
  return accountindex_;
}
inline void AccountLoginLogicResponse::set_accountindex(::google::protobuf::uint32 value) {
  set_has_accountindex();
  accountindex_ = value;
}

// optional uint64 startMark = 5;
inline bool AccountLoginLogicResponse::has_startmark() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AccountLoginLogicResponse::set_has_startmark() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AccountLoginLogicResponse::clear_has_startmark() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AccountLoginLogicResponse::clear_startmark() {
  startmark_ = GOOGLE_ULONGLONG(0);
  clear_has_startmark();
}
inline ::google::protobuf::uint64 AccountLoginLogicResponse::startmark() const {
  return startmark_;
}
inline void AccountLoginLogicResponse::set_startmark(::google::protobuf::uint64 value) {
  set_has_startmark();
  startmark_ = value;
}

// -------------------------------------------------------------------

// NotifyClientState

// required .ProtoBuf.GAME_STATE gameState = 1;
inline bool NotifyClientState::has_gamestate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyClientState::set_has_gamestate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyClientState::clear_has_gamestate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyClientState::clear_gamestate() {
  gamestate_ = 0;
  clear_has_gamestate();
}
inline ::ProtoBuf::GAME_STATE NotifyClientState::gamestate() const {
  return static_cast< ::ProtoBuf::GAME_STATE >(gamestate_);
}
inline void NotifyClientState::set_gamestate(::ProtoBuf::GAME_STATE value) {
  assert(::ProtoBuf::GAME_STATE_IsValid(value));
  set_has_gamestate();
  gamestate_ = value;
}

// -------------------------------------------------------------------

// NotifyLogoutGame_SwitchServerParam

// required string logic_server_ip = 1;
inline bool NotifyLogoutGame_SwitchServerParam::has_logic_server_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLogoutGame_SwitchServerParam::set_has_logic_server_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_has_logic_server_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_logic_server_ip() {
  if (logic_server_ip_ != &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_->clear();
  }
  clear_has_logic_server_ip();
}
inline const ::std::string& NotifyLogoutGame_SwitchServerParam::logic_server_ip() const {
  return *logic_server_ip_;
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_ip(const ::std::string& value) {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  logic_server_ip_->assign(value);
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_ip(const char* value) {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  logic_server_ip_->assign(value);
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_ip(const char* value, size_t size) {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  logic_server_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyLogoutGame_SwitchServerParam::mutable_logic_server_ip() {
  set_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    logic_server_ip_ = new ::std::string;
  }
  return logic_server_ip_;
}
inline ::std::string* NotifyLogoutGame_SwitchServerParam::release_logic_server_ip() {
  clear_has_logic_server_ip();
  if (logic_server_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = logic_server_ip_;
    logic_server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyLogoutGame_SwitchServerParam::set_allocated_logic_server_ip(::std::string* logic_server_ip) {
  if (logic_server_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete logic_server_ip_;
  }
  if (logic_server_ip) {
    set_has_logic_server_ip();
    logic_server_ip_ = logic_server_ip;
  } else {
    clear_has_logic_server_ip();
    logic_server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 logic_server_port = 2;
inline bool NotifyLogoutGame_SwitchServerParam::has_logic_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLogoutGame_SwitchServerParam::set_has_logic_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_has_logic_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_logic_server_port() {
  logic_server_port_ = 0u;
  clear_has_logic_server_port();
}
inline ::google::protobuf::uint32 NotifyLogoutGame_SwitchServerParam::logic_server_port() const {
  return logic_server_port_;
}
inline void NotifyLogoutGame_SwitchServerParam::set_logic_server_port(::google::protobuf::uint32 value) {
  set_has_logic_server_port();
  logic_server_port_ = value;
}

// required uint32 scene_template_id = 3;
inline bool NotifyLogoutGame_SwitchServerParam::has_scene_template_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyLogoutGame_SwitchServerParam::set_has_scene_template_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_has_scene_template_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyLogoutGame_SwitchServerParam::clear_scene_template_id() {
  scene_template_id_ = 0u;
  clear_has_scene_template_id();
}
inline ::google::protobuf::uint32 NotifyLogoutGame_SwitchServerParam::scene_template_id() const {
  return scene_template_id_;
}
inline void NotifyLogoutGame_SwitchServerParam::set_scene_template_id(::google::protobuf::uint32 value) {
  set_has_scene_template_id();
  scene_template_id_ = value;
}

// -------------------------------------------------------------------

// NotifyLogoutGame

// required .ProtoBuf.LOGOUT_FLAG flag = 1;
inline bool NotifyLogoutGame::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLogoutGame::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLogoutGame::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLogoutGame::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::ProtoBuf::LOGOUT_FLAG NotifyLogoutGame::flag() const {
  return static_cast< ::ProtoBuf::LOGOUT_FLAG >(flag_);
}
inline void NotifyLogoutGame::set_flag(::ProtoBuf::LOGOUT_FLAG value) {
  assert(::ProtoBuf::LOGOUT_FLAG_IsValid(value));
  set_has_flag();
  flag_ = value;
}

// optional .ProtoBuf.NotifyLogoutGame.SwitchServerParam switch_server_param = 2;
inline bool NotifyLogoutGame::has_switch_server_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLogoutGame::set_has_switch_server_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLogoutGame::clear_has_switch_server_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLogoutGame::clear_switch_server_param() {
  if (switch_server_param_ != NULL) switch_server_param_->::ProtoBuf::NotifyLogoutGame_SwitchServerParam::Clear();
  clear_has_switch_server_param();
}
inline const ::ProtoBuf::NotifyLogoutGame_SwitchServerParam& NotifyLogoutGame::switch_server_param() const {
  return switch_server_param_ != NULL ? *switch_server_param_ : *default_instance_->switch_server_param_;
}
inline ::ProtoBuf::NotifyLogoutGame_SwitchServerParam* NotifyLogoutGame::mutable_switch_server_param() {
  set_has_switch_server_param();
  if (switch_server_param_ == NULL) switch_server_param_ = new ::ProtoBuf::NotifyLogoutGame_SwitchServerParam;
  return switch_server_param_;
}
inline ::ProtoBuf::NotifyLogoutGame_SwitchServerParam* NotifyLogoutGame::release_switch_server_param() {
  clear_has_switch_server_param();
  ::ProtoBuf::NotifyLogoutGame_SwitchServerParam* temp = switch_server_param_;
  switch_server_param_ = NULL;
  return temp;
}
inline void NotifyLogoutGame::set_allocated_switch_server_param(::ProtoBuf::NotifyLogoutGame_SwitchServerParam* switch_server_param) {
  delete switch_server_param_;
  switch_server_param_ = switch_server_param;
  if (switch_server_param) {
    set_has_switch_server_param();
  } else {
    clear_has_switch_server_param();
  }
}

// -------------------------------------------------------------------

// ClientCharacterListResponse

// repeated .ProtoBuf.CharacterDBSimpleInfo charInfoList = 1;
inline int ClientCharacterListResponse::charinfolist_size() const {
  return charinfolist_.size();
}
inline void ClientCharacterListResponse::clear_charinfolist() {
  charinfolist_.Clear();
}
inline const ::ProtoBuf::CharacterDBSimpleInfo& ClientCharacterListResponse::charinfolist(int index) const {
  return charinfolist_.Get(index);
}
inline ::ProtoBuf::CharacterDBSimpleInfo* ClientCharacterListResponse::mutable_charinfolist(int index) {
  return charinfolist_.Mutable(index);
}
inline ::ProtoBuf::CharacterDBSimpleInfo* ClientCharacterListResponse::add_charinfolist() {
  return charinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CharacterDBSimpleInfo >&
ClientCharacterListResponse::charinfolist() const {
  return charinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CharacterDBSimpleInfo >*
ClientCharacterListResponse::mutable_charinfolist() {
  return &charinfolist_;
}

// -------------------------------------------------------------------

// ClientCreateCharacterResponse

// required uint32 result = 1;
inline bool ClientCreateCharacterResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientCreateCharacterResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientCreateCharacterResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientCreateCharacterResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 ClientCreateCharacterResponse::result() const {
  return result_;
}
inline void ClientCreateCharacterResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// optional .ProtoBuf.CharacterDBSimpleInfo newCharacterInfo = 2;
inline bool ClientCreateCharacterResponse::has_newcharacterinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientCreateCharacterResponse::set_has_newcharacterinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientCreateCharacterResponse::clear_has_newcharacterinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientCreateCharacterResponse::clear_newcharacterinfo() {
  if (newcharacterinfo_ != NULL) newcharacterinfo_->::ProtoBuf::CharacterDBSimpleInfo::Clear();
  clear_has_newcharacterinfo();
}
inline const ::ProtoBuf::CharacterDBSimpleInfo& ClientCreateCharacterResponse::newcharacterinfo() const {
  return newcharacterinfo_ != NULL ? *newcharacterinfo_ : *default_instance_->newcharacterinfo_;
}
inline ::ProtoBuf::CharacterDBSimpleInfo* ClientCreateCharacterResponse::mutable_newcharacterinfo() {
  set_has_newcharacterinfo();
  if (newcharacterinfo_ == NULL) newcharacterinfo_ = new ::ProtoBuf::CharacterDBSimpleInfo;
  return newcharacterinfo_;
}
inline ::ProtoBuf::CharacterDBSimpleInfo* ClientCreateCharacterResponse::release_newcharacterinfo() {
  clear_has_newcharacterinfo();
  ::ProtoBuf::CharacterDBSimpleInfo* temp = newcharacterinfo_;
  newcharacterinfo_ = NULL;
  return temp;
}
inline void ClientCreateCharacterResponse::set_allocated_newcharacterinfo(::ProtoBuf::CharacterDBSimpleInfo* newcharacterinfo) {
  delete newcharacterinfo_;
  newcharacterinfo_ = newcharacterinfo;
  if (newcharacterinfo) {
    set_has_newcharacterinfo();
  } else {
    clear_has_newcharacterinfo();
  }
}

// -------------------------------------------------------------------

// ClientDelCharacterRsp

// required int32 retcode = 1;
inline bool ClientDelCharacterRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDelCharacterRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDelCharacterRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDelCharacterRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 ClientDelCharacterRsp::retcode() const {
  return retcode_;
}
inline void ClientDelCharacterRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional uint32 charId = 2;
inline bool ClientDelCharacterRsp::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDelCharacterRsp::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDelCharacterRsp::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDelCharacterRsp::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 ClientDelCharacterRsp::charid() const {
  return charid_;
}
inline void ClientDelCharacterRsp::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// ReconnectResponse

// required .ProtoBuf.ReconnectResponse.Result result = 1;
inline bool ReconnectResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReconnectResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReconnectResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReconnectResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::ProtoBuf::ReconnectResponse_Result ReconnectResponse::result() const {
  return static_cast< ::ProtoBuf::ReconnectResponse_Result >(result_);
}
inline void ReconnectResponse::set_result(::ProtoBuf::ReconnectResponse_Result value) {
  assert(::ProtoBuf::ReconnectResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// SyncActorMove

// required uint32 cid = 1;
inline bool SyncActorMove::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncActorMove::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncActorMove::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncActorMove::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 SyncActorMove::cid() const {
  return cid_;
}
inline void SyncActorMove::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// required .ProtoBuf.Vector3PB currentPos = 2;
inline bool SyncActorMove::has_currentpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncActorMove::set_has_currentpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncActorMove::clear_has_currentpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncActorMove::clear_currentpos() {
  if (currentpos_ != NULL) currentpos_->::ProtoBuf::Vector3PB::Clear();
  clear_has_currentpos();
}
inline const ::ProtoBuf::Vector3PB& SyncActorMove::currentpos() const {
  return currentpos_ != NULL ? *currentpos_ : *default_instance_->currentpos_;
}
inline ::ProtoBuf::Vector3PB* SyncActorMove::mutable_currentpos() {
  set_has_currentpos();
  if (currentpos_ == NULL) currentpos_ = new ::ProtoBuf::Vector3PB;
  return currentpos_;
}
inline ::ProtoBuf::Vector3PB* SyncActorMove::release_currentpos() {
  clear_has_currentpos();
  ::ProtoBuf::Vector3PB* temp = currentpos_;
  currentpos_ = NULL;
  return temp;
}
inline void SyncActorMove::set_allocated_currentpos(::ProtoBuf::Vector3PB* currentpos) {
  delete currentpos_;
  currentpos_ = currentpos;
  if (currentpos) {
    set_has_currentpos();
  } else {
    clear_has_currentpos();
  }
}

// repeated .ProtoBuf.Vector3PB path = 3;
inline int SyncActorMove::path_size() const {
  return path_.size();
}
inline void SyncActorMove::clear_path() {
  path_.Clear();
}
inline const ::ProtoBuf::Vector3PB& SyncActorMove::path(int index) const {
  return path_.Get(index);
}
inline ::ProtoBuf::Vector3PB* SyncActorMove::mutable_path(int index) {
  return path_.Mutable(index);
}
inline ::ProtoBuf::Vector3PB* SyncActorMove::add_path() {
  return path_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Vector3PB >&
SyncActorMove::path() const {
  return path_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Vector3PB >*
SyncActorMove::mutable_path() {
  return &path_;
}

// -------------------------------------------------------------------

// TransSceneRet

// required uint32 result = 1;
inline bool TransSceneRet::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransSceneRet::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransSceneRet::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransSceneRet::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 TransSceneRet::result() const {
  return result_;
}
inline void TransSceneRet::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// NotifyLoadMap

// required uint32 mapId = 1;
inline bool NotifyLoadMap::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyLoadMap::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyLoadMap::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyLoadMap::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 NotifyLoadMap::mapid() const {
  return mapid_;
}
inline void NotifyLoadMap::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint32 routeId = 2;
inline bool NotifyLoadMap::has_routeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyLoadMap::set_has_routeid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyLoadMap::clear_has_routeid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyLoadMap::clear_routeid() {
  routeid_ = 0u;
  clear_has_routeid();
}
inline ::google::protobuf::uint32 NotifyLoadMap::routeid() const {
  return routeid_;
}
inline void NotifyLoadMap::set_routeid(::google::protobuf::uint32 value) {
  set_has_routeid();
  routeid_ = value;
}

// required .ProtoBuf.Vector3PB transPos = 3;
inline bool NotifyLoadMap::has_transpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyLoadMap::set_has_transpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyLoadMap::clear_has_transpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyLoadMap::clear_transpos() {
  if (transpos_ != NULL) transpos_->::ProtoBuf::Vector3PB::Clear();
  clear_has_transpos();
}
inline const ::ProtoBuf::Vector3PB& NotifyLoadMap::transpos() const {
  return transpos_ != NULL ? *transpos_ : *default_instance_->transpos_;
}
inline ::ProtoBuf::Vector3PB* NotifyLoadMap::mutable_transpos() {
  set_has_transpos();
  if (transpos_ == NULL) transpos_ = new ::ProtoBuf::Vector3PB;
  return transpos_;
}
inline ::ProtoBuf::Vector3PB* NotifyLoadMap::release_transpos() {
  clear_has_transpos();
  ::ProtoBuf::Vector3PB* temp = transpos_;
  transpos_ = NULL;
  return temp;
}
inline void NotifyLoadMap::set_allocated_transpos(::ProtoBuf::Vector3PB* transpos) {
  delete transpos_;
  transpos_ = transpos;
  if (transpos) {
    set_has_transpos();
  } else {
    clear_has_transpos();
  }
}

// -------------------------------------------------------------------

// NotifyTransLogicNode

// required uint32 port = 1;
inline bool NotifyTransLogicNode::has_port() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyTransLogicNode::set_has_port() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyTransLogicNode::clear_has_port() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyTransLogicNode::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 NotifyTransLogicNode::port() const {
  return port_;
}
inline void NotifyTransLogicNode::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// required string ip = 2;
inline bool NotifyTransLogicNode::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyTransLogicNode::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyTransLogicNode::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyTransLogicNode::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& NotifyTransLogicNode::ip() const {
  return *ip_;
}
inline void NotifyTransLogicNode::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void NotifyTransLogicNode::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void NotifyTransLogicNode::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyTransLogicNode::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* NotifyTransLogicNode::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyTransLogicNode::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string token = 3;
inline bool NotifyTransLogicNode::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyTransLogicNode::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyTransLogicNode::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyTransLogicNode::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& NotifyTransLogicNode::token() const {
  return *token_;
}
inline void NotifyTransLogicNode::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void NotifyTransLogicNode::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void NotifyTransLogicNode::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NotifyTransLogicNode::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* NotifyTransLogicNode::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NotifyTransLogicNode::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// UseSkillResult_Target

// required uint32 targetCid = 1;
inline bool UseSkillResult_Target::has_targetcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseSkillResult_Target::set_has_targetcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseSkillResult_Target::clear_has_targetcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseSkillResult_Target::clear_targetcid() {
  targetcid_ = 0u;
  clear_has_targetcid();
}
inline ::google::protobuf::uint32 UseSkillResult_Target::targetcid() const {
  return targetcid_;
}
inline void UseSkillResult_Target::set_targetcid(::google::protobuf::uint32 value) {
  set_has_targetcid();
  targetcid_ = value;
}

// repeated .ProtoBuf.Attr creatureAttr = 2;
inline int UseSkillResult_Target::creatureattr_size() const {
  return creatureattr_.size();
}
inline void UseSkillResult_Target::clear_creatureattr() {
  creatureattr_.Clear();
}
inline const ::ProtoBuf::Attr& UseSkillResult_Target::creatureattr(int index) const {
  return creatureattr_.Get(index);
}
inline ::ProtoBuf::Attr* UseSkillResult_Target::mutable_creatureattr(int index) {
  return creatureattr_.Mutable(index);
}
inline ::ProtoBuf::Attr* UseSkillResult_Target::add_creatureattr() {
  return creatureattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
UseSkillResult_Target::creatureattr() const {
  return creatureattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
UseSkillResult_Target::mutable_creatureattr() {
  return &creatureattr_;
}

// repeated .ProtoBuf.DigPerfor digPerfors = 3;
inline int UseSkillResult_Target::digperfors_size() const {
  return digperfors_.size();
}
inline void UseSkillResult_Target::clear_digperfors() {
  digperfors_.Clear();
}
inline const ::ProtoBuf::DigPerfor& UseSkillResult_Target::digperfors(int index) const {
  return digperfors_.Get(index);
}
inline ::ProtoBuf::DigPerfor* UseSkillResult_Target::mutable_digperfors(int index) {
  return digperfors_.Mutable(index);
}
inline ::ProtoBuf::DigPerfor* UseSkillResult_Target::add_digperfors() {
  return digperfors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >&
UseSkillResult_Target::digperfors() const {
  return digperfors_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >*
UseSkillResult_Target::mutable_digperfors() {
  return &digperfors_;
}

// optional bool BeDead = 4;
inline bool UseSkillResult_Target::has_bedead() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UseSkillResult_Target::set_has_bedead() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UseSkillResult_Target::clear_has_bedead() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UseSkillResult_Target::clear_bedead() {
  bedead_ = false;
  clear_has_bedead();
}
inline bool UseSkillResult_Target::bedead() const {
  return bedead_;
}
inline void UseSkillResult_Target::set_bedead(bool value) {
  set_has_bedead();
  bedead_ = value;
}

// -------------------------------------------------------------------

// UseSkillResult

// required uint32 skillId = 1;
inline bool UseSkillResult::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseSkillResult::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseSkillResult::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseSkillResult::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 UseSkillResult::skillid() const {
  return skillid_;
}
inline void UseSkillResult::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required uint32 userCid = 2;
inline bool UseSkillResult::has_usercid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseSkillResult::set_has_usercid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseSkillResult::clear_has_usercid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseSkillResult::clear_usercid() {
  usercid_ = 0u;
  clear_has_usercid();
}
inline ::google::protobuf::uint32 UseSkillResult::usercid() const {
  return usercid_;
}
inline void UseSkillResult::set_usercid(::google::protobuf::uint32 value) {
  set_has_usercid();
  usercid_ = value;
}

// repeated .ProtoBuf.UseSkillResult.Target targets = 3;
inline int UseSkillResult::targets_size() const {
  return targets_.size();
}
inline void UseSkillResult::clear_targets() {
  targets_.Clear();
}
inline const ::ProtoBuf::UseSkillResult_Target& UseSkillResult::targets(int index) const {
  return targets_.Get(index);
}
inline ::ProtoBuf::UseSkillResult_Target* UseSkillResult::mutable_targets(int index) {
  return targets_.Mutable(index);
}
inline ::ProtoBuf::UseSkillResult_Target* UseSkillResult::add_targets() {
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseSkillResult_Target >&
UseSkillResult::targets() const {
  return targets_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseSkillResult_Target >*
UseSkillResult::mutable_targets() {
  return &targets_;
}

// repeated .ProtoBuf.BuffBagDetailInfo statebags = 4;
inline int UseSkillResult::statebags_size() const {
  return statebags_.size();
}
inline void UseSkillResult::clear_statebags() {
  statebags_.Clear();
}
inline const ::ProtoBuf::BuffBagDetailInfo& UseSkillResult::statebags(int index) const {
  return statebags_.Get(index);
}
inline ::ProtoBuf::BuffBagDetailInfo* UseSkillResult::mutable_statebags(int index) {
  return statebags_.Mutable(index);
}
inline ::ProtoBuf::BuffBagDetailInfo* UseSkillResult::add_statebags() {
  return statebags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::BuffBagDetailInfo >&
UseSkillResult::statebags() const {
  return statebags_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::BuffBagDetailInfo >*
UseSkillResult::mutable_statebags() {
  return &statebags_;
}

// -------------------------------------------------------------------

// BroadcastSkillUse

// required uint32 skillId = 1;
inline bool BroadcastSkillUse::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastSkillUse::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastSkillUse::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastSkillUse::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 BroadcastSkillUse::skillid() const {
  return skillid_;
}
inline void BroadcastSkillUse::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required uint32 userCid = 2;
inline bool BroadcastSkillUse::has_usercid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastSkillUse::set_has_usercid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastSkillUse::clear_has_usercid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastSkillUse::clear_usercid() {
  usercid_ = 0u;
  clear_has_usercid();
}
inline ::google::protobuf::uint32 BroadcastSkillUse::usercid() const {
  return usercid_;
}
inline void BroadcastSkillUse::set_usercid(::google::protobuf::uint32 value) {
  set_has_usercid();
  usercid_ = value;
}

// repeated uint32 targetCids = 3;
inline int BroadcastSkillUse::targetcids_size() const {
  return targetcids_.size();
}
inline void BroadcastSkillUse::clear_targetcids() {
  targetcids_.Clear();
}
inline ::google::protobuf::uint32 BroadcastSkillUse::targetcids(int index) const {
  return targetcids_.Get(index);
}
inline void BroadcastSkillUse::set_targetcids(int index, ::google::protobuf::uint32 value) {
  targetcids_.Set(index, value);
}
inline void BroadcastSkillUse::add_targetcids(::google::protobuf::uint32 value) {
  targetcids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BroadcastSkillUse::targetcids() const {
  return targetcids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BroadcastSkillUse::mutable_targetcids() {
  return &targetcids_;
}

// required .ProtoBuf.Vector3PB dir = 4;
inline bool BroadcastSkillUse::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastSkillUse::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastSkillUse::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastSkillUse::clear_dir() {
  if (dir_ != NULL) dir_->::ProtoBuf::Vector3PB::Clear();
  clear_has_dir();
}
inline const ::ProtoBuf::Vector3PB& BroadcastSkillUse::dir() const {
  return dir_ != NULL ? *dir_ : *default_instance_->dir_;
}
inline ::ProtoBuf::Vector3PB* BroadcastSkillUse::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) dir_ = new ::ProtoBuf::Vector3PB;
  return dir_;
}
inline ::ProtoBuf::Vector3PB* BroadcastSkillUse::release_dir() {
  clear_has_dir();
  ::ProtoBuf::Vector3PB* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void BroadcastSkillUse::set_allocated_dir(::ProtoBuf::Vector3PB* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
}

// optional .ProtoBuf.Vector3PB targetPos = 5;
inline bool BroadcastSkillUse::has_targetpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastSkillUse::set_has_targetpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastSkillUse::clear_has_targetpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastSkillUse::clear_targetpos() {
  if (targetpos_ != NULL) targetpos_->::ProtoBuf::Vector3PB::Clear();
  clear_has_targetpos();
}
inline const ::ProtoBuf::Vector3PB& BroadcastSkillUse::targetpos() const {
  return targetpos_ != NULL ? *targetpos_ : *default_instance_->targetpos_;
}
inline ::ProtoBuf::Vector3PB* BroadcastSkillUse::mutable_targetpos() {
  set_has_targetpos();
  if (targetpos_ == NULL) targetpos_ = new ::ProtoBuf::Vector3PB;
  return targetpos_;
}
inline ::ProtoBuf::Vector3PB* BroadcastSkillUse::release_targetpos() {
  clear_has_targetpos();
  ::ProtoBuf::Vector3PB* temp = targetpos_;
  targetpos_ = NULL;
  return temp;
}
inline void BroadcastSkillUse::set_allocated_targetpos(::ProtoBuf::Vector3PB* targetpos) {
  delete targetpos_;
  targetpos_ = targetpos;
  if (targetpos) {
    set_has_targetpos();
  } else {
    clear_has_targetpos();
  }
}

// -------------------------------------------------------------------

// UseBuffResult_Target

// required uint32 targetCid = 1;
inline bool UseBuffResult_Target::has_targetcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseBuffResult_Target::set_has_targetcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseBuffResult_Target::clear_has_targetcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseBuffResult_Target::clear_targetcid() {
  targetcid_ = 0u;
  clear_has_targetcid();
}
inline ::google::protobuf::uint32 UseBuffResult_Target::targetcid() const {
  return targetcid_;
}
inline void UseBuffResult_Target::set_targetcid(::google::protobuf::uint32 value) {
  set_has_targetcid();
  targetcid_ = value;
}

// repeated .ProtoBuf.Attr creatureAttr = 2;
inline int UseBuffResult_Target::creatureattr_size() const {
  return creatureattr_.size();
}
inline void UseBuffResult_Target::clear_creatureattr() {
  creatureattr_.Clear();
}
inline const ::ProtoBuf::Attr& UseBuffResult_Target::creatureattr(int index) const {
  return creatureattr_.Get(index);
}
inline ::ProtoBuf::Attr* UseBuffResult_Target::mutable_creatureattr(int index) {
  return creatureattr_.Mutable(index);
}
inline ::ProtoBuf::Attr* UseBuffResult_Target::add_creatureattr() {
  return creatureattr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >&
UseBuffResult_Target::creatureattr() const {
  return creatureattr_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::Attr >*
UseBuffResult_Target::mutable_creatureattr() {
  return &creatureattr_;
}

// repeated .ProtoBuf.DigPerfor digPerfors = 3;
inline int UseBuffResult_Target::digperfors_size() const {
  return digperfors_.size();
}
inline void UseBuffResult_Target::clear_digperfors() {
  digperfors_.Clear();
}
inline const ::ProtoBuf::DigPerfor& UseBuffResult_Target::digperfors(int index) const {
  return digperfors_.Get(index);
}
inline ::ProtoBuf::DigPerfor* UseBuffResult_Target::mutable_digperfors(int index) {
  return digperfors_.Mutable(index);
}
inline ::ProtoBuf::DigPerfor* UseBuffResult_Target::add_digperfors() {
  return digperfors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >&
UseBuffResult_Target::digperfors() const {
  return digperfors_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DigPerfor >*
UseBuffResult_Target::mutable_digperfors() {
  return &digperfors_;
}

// optional bool BeDead = 4;
inline bool UseBuffResult_Target::has_bedead() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UseBuffResult_Target::set_has_bedead() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UseBuffResult_Target::clear_has_bedead() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UseBuffResult_Target::clear_bedead() {
  bedead_ = false;
  clear_has_bedead();
}
inline bool UseBuffResult_Target::bedead() const {
  return bedead_;
}
inline void UseBuffResult_Target::set_bedead(bool value) {
  set_has_bedead();
  bedead_ = value;
}

// -------------------------------------------------------------------

// UseBuffResult

// required uint32 skillId = 1;
inline bool UseBuffResult::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UseBuffResult::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UseBuffResult::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UseBuffResult::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 UseBuffResult::skillid() const {
  return skillid_;
}
inline void UseBuffResult::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required uint32 userCid = 2;
inline bool UseBuffResult::has_usercid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UseBuffResult::set_has_usercid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UseBuffResult::clear_has_usercid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UseBuffResult::clear_usercid() {
  usercid_ = 0u;
  clear_has_usercid();
}
inline ::google::protobuf::uint32 UseBuffResult::usercid() const {
  return usercid_;
}
inline void UseBuffResult::set_usercid(::google::protobuf::uint32 value) {
  set_has_usercid();
  usercid_ = value;
}

// repeated .ProtoBuf.UseBuffResult.Target targets = 3;
inline int UseBuffResult::targets_size() const {
  return targets_.size();
}
inline void UseBuffResult::clear_targets() {
  targets_.Clear();
}
inline const ::ProtoBuf::UseBuffResult_Target& UseBuffResult::targets(int index) const {
  return targets_.Get(index);
}
inline ::ProtoBuf::UseBuffResult_Target* UseBuffResult::mutable_targets(int index) {
  return targets_.Mutable(index);
}
inline ::ProtoBuf::UseBuffResult_Target* UseBuffResult::add_targets() {
  return targets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseBuffResult_Target >&
UseBuffResult::targets() const {
  return targets_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::UseBuffResult_Target >*
UseBuffResult::mutable_targets() {
  return &targets_;
}

// required uint32 buffBagId = 4;
inline bool UseBuffResult::has_buffbagid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UseBuffResult::set_has_buffbagid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UseBuffResult::clear_has_buffbagid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UseBuffResult::clear_buffbagid() {
  buffbagid_ = 0u;
  clear_has_buffbagid();
}
inline ::google::protobuf::uint32 UseBuffResult::buffbagid() const {
  return buffbagid_;
}
inline void UseBuffResult::set_buffbagid(::google::protobuf::uint32 value) {
  set_has_buffbagid();
  buffbagid_ = value;
}

// required uint32 buffBagInstId = 5;
inline bool UseBuffResult::has_buffbaginstid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UseBuffResult::set_has_buffbaginstid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UseBuffResult::clear_has_buffbaginstid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UseBuffResult::clear_buffbaginstid() {
  buffbaginstid_ = 0u;
  clear_has_buffbaginstid();
}
inline ::google::protobuf::uint32 UseBuffResult::buffbaginstid() const {
  return buffbaginstid_;
}
inline void UseBuffResult::set_buffbaginstid(::google::protobuf::uint32 value) {
  set_has_buffbaginstid();
  buffbaginstid_ = value;
}

// required uint32 buffId = 6;
inline bool UseBuffResult::has_buffid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UseBuffResult::set_has_buffid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UseBuffResult::clear_has_buffid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UseBuffResult::clear_buffid() {
  buffid_ = 0u;
  clear_has_buffid();
}
inline ::google::protobuf::uint32 UseBuffResult::buffid() const {
  return buffid_;
}
inline void UseBuffResult::set_buffid(::google::protobuf::uint32 value) {
  set_has_buffid();
  buffid_ = value;
}

// -------------------------------------------------------------------

// LevUpSkillRsp

// required .ProtoBuf.ERetCode code = 1;
inline bool LevUpSkillRsp::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevUpSkillRsp::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevUpSkillRsp::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevUpSkillRsp::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::ProtoBuf::ERetCode LevUpSkillRsp::code() const {
  return static_cast< ::ProtoBuf::ERetCode >(code_);
}
inline void LevUpSkillRsp::set_code(::ProtoBuf::ERetCode value) {
  assert(::ProtoBuf::ERetCode_IsValid(value));
  set_has_code();
  code_ = value;
}

// optional uint32 skillId = 2;
inline bool LevUpSkillRsp::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LevUpSkillRsp::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LevUpSkillRsp::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LevUpSkillRsp::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 LevUpSkillRsp::skillid() const {
  return skillid_;
}
inline void LevUpSkillRsp::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional uint32 skillLev = 3;
inline bool LevUpSkillRsp::has_skilllev() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LevUpSkillRsp::set_has_skilllev() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LevUpSkillRsp::clear_has_skilllev() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LevUpSkillRsp::clear_skilllev() {
  skilllev_ = 0u;
  clear_has_skilllev();
}
inline ::google::protobuf::uint32 LevUpSkillRsp::skilllev() const {
  return skilllev_;
}
inline void LevUpSkillRsp::set_skilllev(::google::protobuf::uint32 value) {
  set_has_skilllev();
  skilllev_ = value;
}

// -------------------------------------------------------------------

// BroadcastUseSkillStop

// required uint32 skillId = 1;
inline bool BroadcastUseSkillStop::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastUseSkillStop::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastUseSkillStop::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastUseSkillStop::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 BroadcastUseSkillStop::skillid() const {
  return skillid_;
}
inline void BroadcastUseSkillStop::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
}

// required uint32 userCid = 2;
inline bool BroadcastUseSkillStop::has_usercid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastUseSkillStop::set_has_usercid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastUseSkillStop::clear_has_usercid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastUseSkillStop::clear_usercid() {
  usercid_ = 0u;
  clear_has_usercid();
}
inline ::google::protobuf::uint32 BroadcastUseSkillStop::usercid() const {
  return usercid_;
}
inline void BroadcastUseSkillStop::set_usercid(::google::protobuf::uint32 value) {
  set_has_usercid();
  usercid_ = value;
}

// optional uint32 stopStep = 3;
inline bool BroadcastUseSkillStop::has_stopstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastUseSkillStop::set_has_stopstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastUseSkillStop::clear_has_stopstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastUseSkillStop::clear_stopstep() {
  stopstep_ = 0u;
  clear_has_stopstep();
}
inline ::google::protobuf::uint32 BroadcastUseSkillStop::stopstep() const {
  return stopstep_;
}
inline void BroadcastUseSkillStop::set_stopstep(::google::protobuf::uint32 value) {
  set_has_stopstep();
  stopstep_ = value;
}

// -------------------------------------------------------------------

// BuffBagDetailInfo

// required int32 buff_bag_inst_id = 1;
inline bool BuffBagDetailInfo::has_buff_bag_inst_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffBagDetailInfo::set_has_buff_bag_inst_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffBagDetailInfo::clear_has_buff_bag_inst_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffBagDetailInfo::clear_buff_bag_inst_id() {
  buff_bag_inst_id_ = 0;
  clear_has_buff_bag_inst_id();
}
inline ::google::protobuf::int32 BuffBagDetailInfo::buff_bag_inst_id() const {
  return buff_bag_inst_id_;
}
inline void BuffBagDetailInfo::set_buff_bag_inst_id(::google::protobuf::int32 value) {
  set_has_buff_bag_inst_id();
  buff_bag_inst_id_ = value;
}

// required int32 buff_bag_id = 2;
inline bool BuffBagDetailInfo::has_buff_bag_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffBagDetailInfo::set_has_buff_bag_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffBagDetailInfo::clear_has_buff_bag_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffBagDetailInfo::clear_buff_bag_id() {
  buff_bag_id_ = 0;
  clear_has_buff_bag_id();
}
inline ::google::protobuf::int32 BuffBagDetailInfo::buff_bag_id() const {
  return buff_bag_id_;
}
inline void BuffBagDetailInfo::set_buff_bag_id(::google::protobuf::int32 value) {
  set_has_buff_bag_id();
  buff_bag_id_ = value;
}

// optional int32 sender_cid = 3;
inline bool BuffBagDetailInfo::has_sender_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffBagDetailInfo::set_has_sender_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffBagDetailInfo::clear_has_sender_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffBagDetailInfo::clear_sender_cid() {
  sender_cid_ = 0;
  clear_has_sender_cid();
}
inline ::google::protobuf::int32 BuffBagDetailInfo::sender_cid() const {
  return sender_cid_;
}
inline void BuffBagDetailInfo::set_sender_cid(::google::protobuf::int32 value) {
  set_has_sender_cid();
  sender_cid_ = value;
}

// optional int32 recver_cid = 4;
inline bool BuffBagDetailInfo::has_recver_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuffBagDetailInfo::set_has_recver_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuffBagDetailInfo::clear_has_recver_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuffBagDetailInfo::clear_recver_cid() {
  recver_cid_ = 0;
  clear_has_recver_cid();
}
inline ::google::protobuf::int32 BuffBagDetailInfo::recver_cid() const {
  return recver_cid_;
}
inline void BuffBagDetailInfo::set_recver_cid(::google::protobuf::int32 value) {
  set_has_recver_cid();
  recver_cid_ = value;
}

// optional int64 continuance_time = 5;
inline bool BuffBagDetailInfo::has_continuance_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuffBagDetailInfo::set_has_continuance_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuffBagDetailInfo::clear_has_continuance_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuffBagDetailInfo::clear_continuance_time() {
  continuance_time_ = GOOGLE_LONGLONG(0);
  clear_has_continuance_time();
}
inline ::google::protobuf::int64 BuffBagDetailInfo::continuance_time() const {
  return continuance_time_;
}
inline void BuffBagDetailInfo::set_continuance_time(::google::protobuf::int64 value) {
  set_has_continuance_time();
  continuance_time_ = value;
}

// optional int32 delayed_time = 6;
inline bool BuffBagDetailInfo::has_delayed_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuffBagDetailInfo::set_has_delayed_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuffBagDetailInfo::clear_has_delayed_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuffBagDetailInfo::clear_delayed_time() {
  delayed_time_ = 0;
  clear_has_delayed_time();
}
inline ::google::protobuf::int32 BuffBagDetailInfo::delayed_time() const {
  return delayed_time_;
}
inline void BuffBagDetailInfo::set_delayed_time(::google::protobuf::int32 value) {
  set_has_delayed_time();
  delayed_time_ = value;
}

// -------------------------------------------------------------------

// BuffStateChangeInfo

// required int32 buff_state_id = 1;
inline bool BuffStateChangeInfo::has_buff_state_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffStateChangeInfo::set_has_buff_state_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffStateChangeInfo::clear_has_buff_state_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffStateChangeInfo::clear_buff_state_id() {
  buff_state_id_ = 0;
  clear_has_buff_state_id();
}
inline ::google::protobuf::int32 BuffStateChangeInfo::buff_state_id() const {
  return buff_state_id_;
}
inline void BuffStateChangeInfo::set_buff_state_id(::google::protobuf::int32 value) {
  set_has_buff_state_id();
  buff_state_id_ = value;
}

// required int32 value = 2;
inline bool BuffStateChangeInfo::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffStateChangeInfo::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffStateChangeInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffStateChangeInfo::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 BuffStateChangeInfo::value() const {
  return value_;
}
inline void BuffStateChangeInfo::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// required int32 cid = 3;
inline bool BuffStateChangeInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffStateChangeInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffStateChangeInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffStateChangeInfo::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 BuffStateChangeInfo::cid() const {
  return cid_;
}
inline void BuffStateChangeInfo::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// AiPlayIdleInfo

// required int32 cid = 1;
inline bool AiPlayIdleInfo::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AiPlayIdleInfo::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AiPlayIdleInfo::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AiPlayIdleInfo::clear_cid() {
  cid_ = 0;
  clear_has_cid();
}
inline ::google::protobuf::int32 AiPlayIdleInfo::cid() const {
  return cid_;
}
inline void AiPlayIdleInfo::set_cid(::google::protobuf::int32 value) {
  set_has_cid();
  cid_ = value;
}

// -------------------------------------------------------------------

// PvpKillingValueBroadCast

// optional uint32 pk_killing_value = 1;
inline bool PvpKillingValueBroadCast::has_pk_killing_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpKillingValueBroadCast::set_has_pk_killing_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpKillingValueBroadCast::clear_has_pk_killing_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpKillingValueBroadCast::clear_pk_killing_value() {
  pk_killing_value_ = 0u;
  clear_has_pk_killing_value();
}
inline ::google::protobuf::uint32 PvpKillingValueBroadCast::pk_killing_value() const {
  return pk_killing_value_;
}
inline void PvpKillingValueBroadCast::set_pk_killing_value(::google::protobuf::uint32 value) {
  set_has_pk_killing_value();
  pk_killing_value_ = value;
}

// -------------------------------------------------------------------

// PvpRedPlayer

// optional bool is_add = 1;
inline bool PvpRedPlayer::has_is_add() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpRedPlayer::set_has_is_add() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpRedPlayer::clear_has_is_add() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpRedPlayer::clear_is_add() {
  is_add_ = false;
  clear_has_is_add();
}
inline bool PvpRedPlayer::is_add() const {
  return is_add_;
}
inline void PvpRedPlayer::set_is_add(bool value) {
  set_has_is_add();
  is_add_ = value;
}

// optional uint32 player_cid = 2;
inline bool PvpRedPlayer::has_player_cid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PvpRedPlayer::set_has_player_cid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PvpRedPlayer::clear_has_player_cid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PvpRedPlayer::clear_player_cid() {
  player_cid_ = 0u;
  clear_has_player_cid();
}
inline ::google::protobuf::uint32 PvpRedPlayer::player_cid() const {
  return player_cid_;
}
inline void PvpRedPlayer::set_player_cid(::google::protobuf::uint32 value) {
  set_has_player_cid();
  player_cid_ = value;
}

// -------------------------------------------------------------------

// BuffReplaceNormalSkills

// optional uint32 cid = 1;
inline bool BuffReplaceNormalSkills::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuffReplaceNormalSkills::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuffReplaceNormalSkills::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuffReplaceNormalSkills::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 BuffReplaceNormalSkills::cid() const {
  return cid_;
}
inline void BuffReplaceNormalSkills::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// optional .ProtoBuf.SkillCell oldSkill = 2;
inline bool BuffReplaceNormalSkills::has_oldskill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuffReplaceNormalSkills::set_has_oldskill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuffReplaceNormalSkills::clear_has_oldskill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuffReplaceNormalSkills::clear_oldskill() {
  if (oldskill_ != NULL) oldskill_->::ProtoBuf::SkillCell::Clear();
  clear_has_oldskill();
}
inline const ::ProtoBuf::SkillCell& BuffReplaceNormalSkills::oldskill() const {
  return oldskill_ != NULL ? *oldskill_ : *default_instance_->oldskill_;
}
inline ::ProtoBuf::SkillCell* BuffReplaceNormalSkills::mutable_oldskill() {
  set_has_oldskill();
  if (oldskill_ == NULL) oldskill_ = new ::ProtoBuf::SkillCell;
  return oldskill_;
}
inline ::ProtoBuf::SkillCell* BuffReplaceNormalSkills::release_oldskill() {
  clear_has_oldskill();
  ::ProtoBuf::SkillCell* temp = oldskill_;
  oldskill_ = NULL;
  return temp;
}
inline void BuffReplaceNormalSkills::set_allocated_oldskill(::ProtoBuf::SkillCell* oldskill) {
  delete oldskill_;
  oldskill_ = oldskill;
  if (oldskill) {
    set_has_oldskill();
  } else {
    clear_has_oldskill();
  }
}

// optional .ProtoBuf.SkillCell newSkill = 3;
inline bool BuffReplaceNormalSkills::has_newskill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuffReplaceNormalSkills::set_has_newskill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuffReplaceNormalSkills::clear_has_newskill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuffReplaceNormalSkills::clear_newskill() {
  if (newskill_ != NULL) newskill_->::ProtoBuf::SkillCell::Clear();
  clear_has_newskill();
}
inline const ::ProtoBuf::SkillCell& BuffReplaceNormalSkills::newskill() const {
  return newskill_ != NULL ? *newskill_ : *default_instance_->newskill_;
}
inline ::ProtoBuf::SkillCell* BuffReplaceNormalSkills::mutable_newskill() {
  set_has_newskill();
  if (newskill_ == NULL) newskill_ = new ::ProtoBuf::SkillCell;
  return newskill_;
}
inline ::ProtoBuf::SkillCell* BuffReplaceNormalSkills::release_newskill() {
  clear_has_newskill();
  ::ProtoBuf::SkillCell* temp = newskill_;
  newskill_ = NULL;
  return temp;
}
inline void BuffReplaceNormalSkills::set_allocated_newskill(::ProtoBuf::SkillCell* newskill) {
  delete newskill_;
  newskill_ = newskill;
  if (newskill) {
    set_has_newskill();
  } else {
    clear_has_newskill();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoBuf::AccountLoginLogicResponse_RESULT>() {
  return ::ProtoBuf::AccountLoginLogicResponse_RESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoBuf::ClientCreateCharacterResponse_RESULT>() {
  return ::ProtoBuf::ClientCreateCharacterResponse_RESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoBuf::ReconnectResponse_Result>() {
  return ::ProtoBuf::ReconnectResponse_Result_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBuffer_2fLogicToClient_2eproto__INCLUDED
