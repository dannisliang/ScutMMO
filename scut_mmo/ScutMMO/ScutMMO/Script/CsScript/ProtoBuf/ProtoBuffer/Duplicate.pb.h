// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffer/Duplicate.proto

#ifndef PROTOBUF_ProtoBuffer_2fDuplicate_2eproto__INCLUDED
#define PROTOBUF_ProtoBuffer_2fDuplicate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBuffer/ComProtocol.pb.h"
#include "ProtoBuffer/ClientToServerCmd.pb.h"
#include "Common/ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

class DupMonsStateProto;
class DupFightDataProto;
class Duplicate_InfoReq;
class Duplicate_InfoRsp;
class Duplicate_EnterReq;
class Duplicate_EnterRsp;
class Duplicate_ResultRsp;
class Duplicate_AutoFightReq;
class Duplicate_AutoFightRsp;
class Duplicate_FlopReq;
class Duplicate_FlopRsp;
class Duplicate_UpdateRsp;
class Duplicate_ReliveReq;
class Duplicate_ReliveRsp;
class Duplicate_LeaveReq;
class Duplicate_LeaveRsp;
class Duplicate_EnterAreaReq;
class Duplicate_EnterAreaRsp;
class Duplicate_BuyCountReq;
class Duplicate_BuyCountRsp;
class Duplicate_AutoChallengeReq;
class Duplicate_AutoChallengeRsp;
class Duplicate_FightDataRsp;
class Duplicate_MonsWaveRsp;
class Duplicate_MonsNumRsp;
class Duplicate_MonsStateRsp;
class Duplicate_ReliveNumRsp;
class Duplicate_TowerHpRsp;
class Duplicate_TransMonsNumRsp;
class DupBeforAreaProto;
class LogicToCenter_EnterDupReq;
class CenterToLogic_EnterDupRsp;
class LogicToCenter_CreateSceneReq;
class CenterToLogic_CreateSceneRsp;
class LogicToCenter_CreateDuplicateRsp;
class CenterToLogic_DuplicateNotifyPrepare;
class LogicToCenter_DuplicatePrepareRsp;
class CenterToLogic_DuplicateEnterNotify;
class LogicToCenter_DuplicateEnterRsp;
class LogicToCenter_DuplicateLeaveRsp;
class LogicToCenter_DuplicateBegin;
class LogicToCenter_DuplicateEnd;
class LogicToCenter_DuplicateDestory;

// ===================================================================

class DupMonsStateProto : public ::google::protobuf::Message {
 public:
  DupMonsStateProto();
  virtual ~DupMonsStateProto();

  DupMonsStateProto(const DupMonsStateProto& from);

  inline DupMonsStateProto& operator=(const DupMonsStateProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupMonsStateProto& default_instance();

  void Swap(DupMonsStateProto* other);

  // implements Message ----------------------------------------------

  DupMonsStateProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupMonsStateProto& from);
  void MergeFrom(const DupMonsStateProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mons_id = 1;
  inline bool has_mons_id() const;
  inline void clear_mons_id();
  static const int kMonsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mons_id() const;
  inline void set_mons_id(::google::protobuf::uint32 value);

  // required int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.DupMonsStateProto)
 private:
  inline void set_has_mons_id();
  inline void clear_has_mons_id();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mons_id_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static DupMonsStateProto* default_instance_;
};
// -------------------------------------------------------------------

class DupFightDataProto : public ::google::protobuf::Message {
 public:
  DupFightDataProto();
  virtual ~DupFightDataProto();

  DupFightDataProto(const DupFightDataProto& from);

  inline DupFightDataProto& operator=(const DupFightDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupFightDataProto& default_instance();

  void Swap(DupFightDataProto* other);

  // implements Message ----------------------------------------------

  DupFightDataProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupFightDataProto& from);
  void MergeFrom(const DupFightDataProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cid = 1;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 1;
  inline ::google::protobuf::uint32 cid() const;
  inline void set_cid(::google::protobuf::uint32 value);

  // required uint64 atk = 2;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 2;
  inline ::google::protobuf::uint64 atk() const;
  inline void set_atk(::google::protobuf::uint64 value);

  // required uint64 be_atk = 3;
  inline bool has_be_atk() const;
  inline void clear_be_atk();
  static const int kBeAtkFieldNumber = 3;
  inline ::google::protobuf::uint64 be_atk() const;
  inline void set_be_atk(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.DupFightDataProto)
 private:
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_be_atk();
  inline void clear_has_be_atk();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 atk_;
  ::google::protobuf::uint64 be_atk_;
  ::google::protobuf::uint32 cid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static DupFightDataProto* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_InfoReq : public ::google::protobuf::Message {
 public:
  Duplicate_InfoReq();
  virtual ~Duplicate_InfoReq();

  Duplicate_InfoReq(const Duplicate_InfoReq& from);

  inline Duplicate_InfoReq& operator=(const Duplicate_InfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_InfoReq& default_instance();

  void Swap(Duplicate_InfoReq* other);

  // implements Message ----------------------------------------------

  Duplicate_InfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_InfoReq& from);
  void MergeFrom(const Duplicate_InfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_InfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_InfoReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_InfoRsp : public ::google::protobuf::Message {
 public:
  Duplicate_InfoRsp();
  virtual ~Duplicate_InfoRsp();

  Duplicate_InfoRsp(const Duplicate_InfoRsp& from);

  inline Duplicate_InfoRsp& operator=(const Duplicate_InfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_InfoRsp& default_instance();

  void Swap(Duplicate_InfoRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_InfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_InfoRsp& from);
  void MergeFrom(const Duplicate_InfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // repeated .ProtoBuf.DuplicateProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::ProtoBuf::DuplicateProto& info(int index) const;
  inline ::ProtoBuf::DuplicateProto* mutable_info(int index);
  inline ::ProtoBuf::DuplicateProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
      mutable_info();

  // repeated .ProtoBuf.DuplicateGroupProto group = 3;
  inline int group_size() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 3;
  inline const ::ProtoBuf::DuplicateGroupProto& group(int index) const;
  inline ::ProtoBuf::DuplicateGroupProto* mutable_group(int index);
  inline ::ProtoBuf::DuplicateGroupProto* add_group();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >&
      group() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >*
      mutable_group();

  // repeated int32 open_list = 4;
  inline int open_list_size() const;
  inline void clear_open_list();
  static const int kOpenListFieldNumber = 4;
  inline ::google::protobuf::int32 open_list(int index) const;
  inline void set_open_list(int index, ::google::protobuf::int32 value);
  inline void add_open_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      open_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_open_list();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_InfoRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto > info_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto > group_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > open_list_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_InfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterReq : public ::google::protobuf::Message {
 public:
  Duplicate_EnterReq();
  virtual ~Duplicate_EnterReq();

  Duplicate_EnterReq(const Duplicate_EnterReq& from);

  inline Duplicate_EnterReq& operator=(const Duplicate_EnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterReq& default_instance();

  void Swap(Duplicate_EnterReq* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterReq& from);
  void MergeFrom(const Duplicate_EnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 duplicate_id = 1;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 1;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // optional int32 area_id = 2;
  inline bool has_area_id() const;
  inline void clear_area_id();
  static const int kAreaIdFieldNumber = 2;
  inline ::google::protobuf::int32 area_id() const;
  inline void set_area_id(::google::protobuf::int32 value);

  // optional .ProtoBuf.Vector3PB cur_pos = 3;
  inline bool has_cur_pos() const;
  inline void clear_cur_pos();
  static const int kCurPosFieldNumber = 3;
  inline const ::ProtoBuf::Vector3PB& cur_pos() const;
  inline ::ProtoBuf::Vector3PB* mutable_cur_pos();
  inline ::ProtoBuf::Vector3PB* release_cur_pos();
  inline void set_allocated_cur_pos(::ProtoBuf::Vector3PB* cur_pos);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterReq)
 private:
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_area_id();
  inline void clear_has_area_id();
  inline void set_has_cur_pos();
  inline void clear_has_cur_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 duplicate_id_;
  ::google::protobuf::int32 area_id_;
  ::ProtoBuf::Vector3PB* cur_pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterRsp : public ::google::protobuf::Message {
 public:
  Duplicate_EnterRsp();
  virtual ~Duplicate_EnterRsp();

  Duplicate_EnterRsp(const Duplicate_EnterRsp& from);

  inline Duplicate_EnterRsp& operator=(const Duplicate_EnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterRsp& default_instance();

  void Swap(Duplicate_EnterRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterRsp& from);
  void MergeFrom(const Duplicate_EnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // repeated int32 area = 3;
  inline int area_size() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 3;
  inline ::google::protobuf::int32 area(int index) const;
  inline void set_area(int index, ::google::protobuf::int32 value);
  inline void add_area(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      area() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_area();

  // optional int32 mons_num = 4;
  inline bool has_mons_num() const;
  inline void clear_mons_num();
  static const int kMonsNumFieldNumber = 4;
  inline ::google::protobuf::int32 mons_num() const;
  inline void set_mons_num(::google::protobuf::int32 value);

  // optional int32 dup_sec = 5;
  inline bool has_dup_sec() const;
  inline void clear_dup_sec();
  static const int kDupSecFieldNumber = 5;
  inline ::google::protobuf::int32 dup_sec() const;
  inline void set_dup_sec(::google::protobuf::int32 value);

  // optional int32 tower_hp = 6;
  inline bool has_tower_hp() const;
  inline void clear_tower_hp();
  static const int kTowerHpFieldNumber = 6;
  inline ::google::protobuf::int32 tower_hp() const;
  inline void set_tower_hp(::google::protobuf::int32 value);

  // optional int32 trans_num = 7;
  inline bool has_trans_num() const;
  inline void clear_trans_num();
  static const int kTransNumFieldNumber = 7;
  inline ::google::protobuf::int32 trans_num() const;
  inline void set_trans_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_mons_num();
  inline void clear_has_mons_num();
  inline void set_has_dup_sec();
  inline void clear_has_dup_sec();
  inline void set_has_tower_hp();
  inline void clear_has_tower_hp();
  inline void set_has_trans_num();
  inline void clear_has_trans_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 duplicate_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > area_;
  ::google::protobuf::int32 mons_num_;
  ::google::protobuf::int32 dup_sec_;
  ::google::protobuf::int32 tower_hp_;
  ::google::protobuf::int32 trans_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ResultRsp : public ::google::protobuf::Message {
 public:
  Duplicate_ResultRsp();
  virtual ~Duplicate_ResultRsp();

  Duplicate_ResultRsp(const Duplicate_ResultRsp& from);

  inline Duplicate_ResultRsp& operator=(const Duplicate_ResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ResultRsp& default_instance();

  void Swap(Duplicate_ResultRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_ResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ResultRsp& from);
  void MergeFrom(const Duplicate_ResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // optional int32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 gold = 5;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 5;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional .ProtoBuf.RewardItemProto reward = 6;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 6;
  inline const ::ProtoBuf::RewardItemProto& reward() const;
  inline ::ProtoBuf::RewardItemProto* mutable_reward();
  inline ::ProtoBuf::RewardItemProto* release_reward();
  inline void set_allocated_reward(::ProtoBuf::RewardItemProto* reward);

  // optional .ProtoBuf.RewardItemProto flop = 7;
  inline bool has_flop() const;
  inline void clear_flop();
  static const int kFlopFieldNumber = 7;
  inline const ::ProtoBuf::RewardItemProto& flop() const;
  inline ::ProtoBuf::RewardItemProto* mutable_flop();
  inline ::ProtoBuf::RewardItemProto* release_flop();
  inline void set_allocated_flop(::ProtoBuf::RewardItemProto* flop);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ResultRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_flop();
  inline void clear_has_flop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 duplicate_id_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 exp_;
  ::ProtoBuf::RewardItemProto* reward_;
  ::ProtoBuf::RewardItemProto* flop_;
  ::google::protobuf::int32 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_AutoFightReq : public ::google::protobuf::Message {
 public:
  Duplicate_AutoFightReq();
  virtual ~Duplicate_AutoFightReq();

  Duplicate_AutoFightReq(const Duplicate_AutoFightReq& from);

  inline Duplicate_AutoFightReq& operator=(const Duplicate_AutoFightReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_AutoFightReq& default_instance();

  void Swap(Duplicate_AutoFightReq* other);

  // implements Message ----------------------------------------------

  Duplicate_AutoFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_AutoFightReq& from);
  void MergeFrom(const Duplicate_AutoFightReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_AutoFightReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_AutoFightReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_AutoFightRsp : public ::google::protobuf::Message {
 public:
  Duplicate_AutoFightRsp();
  virtual ~Duplicate_AutoFightRsp();

  Duplicate_AutoFightRsp(const Duplicate_AutoFightRsp& from);

  inline Duplicate_AutoFightRsp& operator=(const Duplicate_AutoFightRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_AutoFightRsp& default_instance();

  void Swap(Duplicate_AutoFightRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_AutoFightRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_AutoFightRsp& from);
  void MergeFrom(const Duplicate_AutoFightRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_AutoFightRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_AutoFightRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_FlopReq : public ::google::protobuf::Message {
 public:
  Duplicate_FlopReq();
  virtual ~Duplicate_FlopReq();

  Duplicate_FlopReq(const Duplicate_FlopReq& from);

  inline Duplicate_FlopReq& operator=(const Duplicate_FlopReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_FlopReq& default_instance();

  void Swap(Duplicate_FlopReq* other);

  // implements Message ----------------------------------------------

  Duplicate_FlopReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_FlopReq& from);
  void MergeFrom(const Duplicate_FlopReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_FlopReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_FlopReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_FlopRsp : public ::google::protobuf::Message {
 public:
  Duplicate_FlopRsp();
  virtual ~Duplicate_FlopRsp();

  Duplicate_FlopRsp(const Duplicate_FlopRsp& from);

  inline Duplicate_FlopRsp& operator=(const Duplicate_FlopRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_FlopRsp& default_instance();

  void Swap(Duplicate_FlopRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_FlopRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_FlopRsp& from);
  void MergeFrom(const Duplicate_FlopRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_FlopRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_FlopRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_UpdateRsp : public ::google::protobuf::Message {
 public:
  Duplicate_UpdateRsp();
  virtual ~Duplicate_UpdateRsp();

  Duplicate_UpdateRsp(const Duplicate_UpdateRsp& from);

  inline Duplicate_UpdateRsp& operator=(const Duplicate_UpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_UpdateRsp& default_instance();

  void Swap(Duplicate_UpdateRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_UpdateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_UpdateRsp& from);
  void MergeFrom(const Duplicate_UpdateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.DuplicateProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoBuf::DuplicateProto& info(int index) const;
  inline ::ProtoBuf::DuplicateProto* mutable_info(int index);
  inline ::ProtoBuf::DuplicateProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
      mutable_info();

  // repeated .ProtoBuf.DuplicateGroupProto group = 2;
  inline int group_size() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline const ::ProtoBuf::DuplicateGroupProto& group(int index) const;
  inline ::ProtoBuf::DuplicateGroupProto* mutable_group(int index);
  inline ::ProtoBuf::DuplicateGroupProto* add_group();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >&
      group() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >*
      mutable_group();

  // repeated int32 open_list = 3;
  inline int open_list_size() const;
  inline void clear_open_list();
  static const int kOpenListFieldNumber = 3;
  inline ::google::protobuf::int32 open_list(int index) const;
  inline void set_open_list(int index, ::google::protobuf::int32 value);
  inline void add_open_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      open_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_open_list();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_UpdateRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto > info_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto > group_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > open_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_UpdateRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ReliveReq : public ::google::protobuf::Message {
 public:
  Duplicate_ReliveReq();
  virtual ~Duplicate_ReliveReq();

  Duplicate_ReliveReq(const Duplicate_ReliveReq& from);

  inline Duplicate_ReliveReq& operator=(const Duplicate_ReliveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ReliveReq& default_instance();

  void Swap(Duplicate_ReliveReq* other);

  // implements Message ----------------------------------------------

  Duplicate_ReliveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ReliveReq& from);
  void MergeFrom(const Duplicate_ReliveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ReliveReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ReliveReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ReliveRsp : public ::google::protobuf::Message {
 public:
  Duplicate_ReliveRsp();
  virtual ~Duplicate_ReliveRsp();

  Duplicate_ReliveRsp(const Duplicate_ReliveRsp& from);

  inline Duplicate_ReliveRsp& operator=(const Duplicate_ReliveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ReliveRsp& default_instance();

  void Swap(Duplicate_ReliveRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_ReliveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ReliveRsp& from);
  void MergeFrom(const Duplicate_ReliveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ReliveRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ReliveRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_LeaveReq : public ::google::protobuf::Message {
 public:
  Duplicate_LeaveReq();
  virtual ~Duplicate_LeaveReq();

  Duplicate_LeaveReq(const Duplicate_LeaveReq& from);

  inline Duplicate_LeaveReq& operator=(const Duplicate_LeaveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_LeaveReq& default_instance();

  void Swap(Duplicate_LeaveReq* other);

  // implements Message ----------------------------------------------

  Duplicate_LeaveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_LeaveReq& from);
  void MergeFrom(const Duplicate_LeaveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_LeaveReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_LeaveReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_LeaveRsp : public ::google::protobuf::Message {
 public:
  Duplicate_LeaveRsp();
  virtual ~Duplicate_LeaveRsp();

  Duplicate_LeaveRsp(const Duplicate_LeaveRsp& from);

  inline Duplicate_LeaveRsp& operator=(const Duplicate_LeaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_LeaveRsp& default_instance();

  void Swap(Duplicate_LeaveRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_LeaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_LeaveRsp& from);
  void MergeFrom(const Duplicate_LeaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_LeaveRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_LeaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterAreaReq : public ::google::protobuf::Message {
 public:
  Duplicate_EnterAreaReq();
  virtual ~Duplicate_EnterAreaReq();

  Duplicate_EnterAreaReq(const Duplicate_EnterAreaReq& from);

  inline Duplicate_EnterAreaReq& operator=(const Duplicate_EnterAreaReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterAreaReq& default_instance();

  void Swap(Duplicate_EnterAreaReq* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterAreaReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterAreaReq& from);
  void MergeFrom(const Duplicate_EnterAreaReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 area_id = 1;
  inline bool has_area_id() const;
  inline void clear_area_id();
  static const int kAreaIdFieldNumber = 1;
  inline ::google::protobuf::int32 area_id() const;
  inline void set_area_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterAreaReq)
 private:
  inline void set_has_area_id();
  inline void clear_has_area_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 area_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterAreaReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterAreaRsp : public ::google::protobuf::Message {
 public:
  Duplicate_EnterAreaRsp();
  virtual ~Duplicate_EnterAreaRsp();

  Duplicate_EnterAreaRsp(const Duplicate_EnterAreaRsp& from);

  inline Duplicate_EnterAreaRsp& operator=(const Duplicate_EnterAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterAreaRsp& default_instance();

  void Swap(Duplicate_EnterAreaRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterAreaRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterAreaRsp& from);
  void MergeFrom(const Duplicate_EnterAreaRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterAreaRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterAreaRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_BuyCountReq : public ::google::protobuf::Message {
 public:
  Duplicate_BuyCountReq();
  virtual ~Duplicate_BuyCountReq();

  Duplicate_BuyCountReq(const Duplicate_BuyCountReq& from);

  inline Duplicate_BuyCountReq& operator=(const Duplicate_BuyCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_BuyCountReq& default_instance();

  void Swap(Duplicate_BuyCountReq* other);

  // implements Message ----------------------------------------------

  Duplicate_BuyCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_BuyCountReq& from);
  void MergeFrom(const Duplicate_BuyCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_BuyCountReq)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_BuyCountReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_BuyCountRsp : public ::google::protobuf::Message {
 public:
  Duplicate_BuyCountRsp();
  virtual ~Duplicate_BuyCountRsp();

  Duplicate_BuyCountRsp(const Duplicate_BuyCountRsp& from);

  inline Duplicate_BuyCountRsp& operator=(const Duplicate_BuyCountRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_BuyCountRsp& default_instance();

  void Swap(Duplicate_BuyCountRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_BuyCountRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_BuyCountRsp& from);
  void MergeFrom(const Duplicate_BuyCountRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 buy_num = 2;
  inline bool has_buy_num() const;
  inline void clear_buy_num();
  static const int kBuyNumFieldNumber = 2;
  inline ::google::protobuf::int32 buy_num() const;
  inline void set_buy_num(::google::protobuf::int32 value);

  // optional int32 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::int32 group_id() const;
  inline void set_group_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_BuyCountRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_buy_num();
  inline void clear_has_buy_num();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 buy_num_;
  ::google::protobuf::int32 group_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_BuyCountRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_AutoChallengeReq : public ::google::protobuf::Message {
 public:
  Duplicate_AutoChallengeReq();
  virtual ~Duplicate_AutoChallengeReq();

  Duplicate_AutoChallengeReq(const Duplicate_AutoChallengeReq& from);

  inline Duplicate_AutoChallengeReq& operator=(const Duplicate_AutoChallengeReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_AutoChallengeReq& default_instance();

  void Swap(Duplicate_AutoChallengeReq* other);

  // implements Message ----------------------------------------------

  Duplicate_AutoChallengeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_AutoChallengeReq& from);
  void MergeFrom(const Duplicate_AutoChallengeReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_AutoChallengeReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_AutoChallengeReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_AutoChallengeRsp : public ::google::protobuf::Message {
 public:
  Duplicate_AutoChallengeRsp();
  virtual ~Duplicate_AutoChallengeRsp();

  Duplicate_AutoChallengeRsp(const Duplicate_AutoChallengeRsp& from);

  inline Duplicate_AutoChallengeRsp& operator=(const Duplicate_AutoChallengeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_AutoChallengeRsp& default_instance();

  void Swap(Duplicate_AutoChallengeRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_AutoChallengeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_AutoChallengeRsp& from);
  void MergeFrom(const Duplicate_AutoChallengeRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_AutoChallengeRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_AutoChallengeRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_FightDataRsp : public ::google::protobuf::Message {
 public:
  Duplicate_FightDataRsp();
  virtual ~Duplicate_FightDataRsp();

  Duplicate_FightDataRsp(const Duplicate_FightDataRsp& from);

  inline Duplicate_FightDataRsp& operator=(const Duplicate_FightDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_FightDataRsp& default_instance();

  void Swap(Duplicate_FightDataRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_FightDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_FightDataRsp& from);
  void MergeFrom(const Duplicate_FightDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.DupFightDataProto fight_data = 1;
  inline int fight_data_size() const;
  inline void clear_fight_data();
  static const int kFightDataFieldNumber = 1;
  inline const ::ProtoBuf::DupFightDataProto& fight_data(int index) const;
  inline ::ProtoBuf::DupFightDataProto* mutable_fight_data(int index);
  inline ::ProtoBuf::DupFightDataProto* add_fight_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupFightDataProto >&
      fight_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupFightDataProto >*
      mutable_fight_data();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_FightDataRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupFightDataProto > fight_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_FightDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_MonsWaveRsp : public ::google::protobuf::Message {
 public:
  Duplicate_MonsWaveRsp();
  virtual ~Duplicate_MonsWaveRsp();

  Duplicate_MonsWaveRsp(const Duplicate_MonsWaveRsp& from);

  inline Duplicate_MonsWaveRsp& operator=(const Duplicate_MonsWaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_MonsWaveRsp& default_instance();

  void Swap(Duplicate_MonsWaveRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_MonsWaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_MonsWaveRsp& from);
  void MergeFrom(const Duplicate_MonsWaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 wave = 1;
  inline bool has_wave() const;
  inline void clear_wave();
  static const int kWaveFieldNumber = 1;
  inline ::google::protobuf::int32 wave() const;
  inline void set_wave(::google::protobuf::int32 value);

  // required int32 sec = 2;
  inline bool has_sec() const;
  inline void clear_sec();
  static const int kSecFieldNumber = 2;
  inline ::google::protobuf::int32 sec() const;
  inline void set_sec(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_MonsWaveRsp)
 private:
  inline void set_has_wave();
  inline void clear_has_wave();
  inline void set_has_sec();
  inline void clear_has_sec();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 wave_;
  ::google::protobuf::int32 sec_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_MonsWaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_MonsNumRsp : public ::google::protobuf::Message {
 public:
  Duplicate_MonsNumRsp();
  virtual ~Duplicate_MonsNumRsp();

  Duplicate_MonsNumRsp(const Duplicate_MonsNumRsp& from);

  inline Duplicate_MonsNumRsp& operator=(const Duplicate_MonsNumRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_MonsNumRsp& default_instance();

  void Swap(Duplicate_MonsNumRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_MonsNumRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_MonsNumRsp& from);
  void MergeFrom(const Duplicate_MonsNumRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_MonsNumRsp)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_MonsNumRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_MonsStateRsp : public ::google::protobuf::Message {
 public:
  Duplicate_MonsStateRsp();
  virtual ~Duplicate_MonsStateRsp();

  Duplicate_MonsStateRsp(const Duplicate_MonsStateRsp& from);

  inline Duplicate_MonsStateRsp& operator=(const Duplicate_MonsStateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_MonsStateRsp& default_instance();

  void Swap(Duplicate_MonsStateRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_MonsStateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_MonsStateRsp& from);
  void MergeFrom(const Duplicate_MonsStateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.DupMonsStateProto mon_state = 1;
  inline int mon_state_size() const;
  inline void clear_mon_state();
  static const int kMonStateFieldNumber = 1;
  inline const ::ProtoBuf::DupMonsStateProto& mon_state(int index) const;
  inline ::ProtoBuf::DupMonsStateProto* mutable_mon_state(int index);
  inline ::ProtoBuf::DupMonsStateProto* add_mon_state();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupMonsStateProto >&
      mon_state() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupMonsStateProto >*
      mutable_mon_state();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_MonsStateRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupMonsStateProto > mon_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_MonsStateRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ReliveNumRsp : public ::google::protobuf::Message {
 public:
  Duplicate_ReliveNumRsp();
  virtual ~Duplicate_ReliveNumRsp();

  Duplicate_ReliveNumRsp(const Duplicate_ReliveNumRsp& from);

  inline Duplicate_ReliveNumRsp& operator=(const Duplicate_ReliveNumRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ReliveNumRsp& default_instance();

  void Swap(Duplicate_ReliveNumRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_ReliveNumRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ReliveNumRsp& from);
  void MergeFrom(const Duplicate_ReliveNumRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ReliveNumRsp)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ReliveNumRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_TowerHpRsp : public ::google::protobuf::Message {
 public:
  Duplicate_TowerHpRsp();
  virtual ~Duplicate_TowerHpRsp();

  Duplicate_TowerHpRsp(const Duplicate_TowerHpRsp& from);

  inline Duplicate_TowerHpRsp& operator=(const Duplicate_TowerHpRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_TowerHpRsp& default_instance();

  void Swap(Duplicate_TowerHpRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_TowerHpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_TowerHpRsp& from);
  void MergeFrom(const Duplicate_TowerHpRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_TowerHpRsp)
 private:
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_TowerHpRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_TransMonsNumRsp : public ::google::protobuf::Message {
 public:
  Duplicate_TransMonsNumRsp();
  virtual ~Duplicate_TransMonsNumRsp();

  Duplicate_TransMonsNumRsp(const Duplicate_TransMonsNumRsp& from);

  inline Duplicate_TransMonsNumRsp& operator=(const Duplicate_TransMonsNumRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_TransMonsNumRsp& default_instance();

  void Swap(Duplicate_TransMonsNumRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_TransMonsNumRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_TransMonsNumRsp& from);
  void MergeFrom(const Duplicate_TransMonsNumRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 trans_num = 1;
  inline bool has_trans_num() const;
  inline void clear_trans_num();
  static const int kTransNumFieldNumber = 1;
  inline ::google::protobuf::int32 trans_num() const;
  inline void set_trans_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_TransMonsNumRsp)
 private:
  inline void set_has_trans_num();
  inline void clear_has_trans_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 trans_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_TransMonsNumRsp* default_instance_;
};
// -------------------------------------------------------------------

class DupBeforAreaProto : public ::google::protobuf::Message {
 public:
  DupBeforAreaProto();
  virtual ~DupBeforAreaProto();

  DupBeforAreaProto(const DupBeforAreaProto& from);

  inline DupBeforAreaProto& operator=(const DupBeforAreaProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DupBeforAreaProto& default_instance();

  void Swap(DupBeforAreaProto* other);

  // implements Message ----------------------------------------------

  DupBeforAreaProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DupBeforAreaProto& from);
  void MergeFrom(const DupBeforAreaProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 areaId = 2;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaIdFieldNumber = 2;
  inline ::google::protobuf::uint32 areaid() const;
  inline void set_areaid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.DupBeforAreaProto)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_areaid();
  inline void clear_has_areaid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 areaid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static DupBeforAreaProto* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_EnterDupReq : public ::google::protobuf::Message {
 public:
  LogicToCenter_EnterDupReq();
  virtual ~LogicToCenter_EnterDupReq();

  LogicToCenter_EnterDupReq(const LogicToCenter_EnterDupReq& from);

  inline LogicToCenter_EnterDupReq& operator=(const LogicToCenter_EnterDupReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_EnterDupReq& default_instance();

  void Swap(LogicToCenter_EnterDupReq* other);

  // implements Message ----------------------------------------------

  LogicToCenter_EnterDupReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_EnterDupReq& from);
  void MergeFrom(const LogicToCenter_EnterDupReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charId = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required int32 key_type = 3;
  inline bool has_key_type() const;
  inline void clear_key_type();
  static const int kKeyTypeFieldNumber = 3;
  inline ::google::protobuf::int32 key_type() const;
  inline void set_key_type(::google::protobuf::int32 value);

  // required uint64 key_value = 4;
  inline bool has_key_value() const;
  inline void clear_key_value();
  static const int kKeyValueFieldNumber = 4;
  inline ::google::protobuf::uint64 key_value() const;
  inline void set_key_value(::google::protobuf::uint64 value);

  // repeated .ProtoBuf.DupBeforAreaProto area = 5;
  inline int area_size() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 5;
  inline const ::ProtoBuf::DupBeforAreaProto& area(int index) const;
  inline ::ProtoBuf::DupBeforAreaProto* mutable_area(int index);
  inline ::ProtoBuf::DupBeforAreaProto* add_area();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >&
      area() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >*
      mutable_area();

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_EnterDupReq)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_key_value();
  inline void clear_has_key_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::uint64 key_value_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto > area_;
  ::google::protobuf::int32 key_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_EnterDupReq* default_instance_;
};
// -------------------------------------------------------------------

class CenterToLogic_EnterDupRsp : public ::google::protobuf::Message {
 public:
  CenterToLogic_EnterDupRsp();
  virtual ~CenterToLogic_EnterDupRsp();

  CenterToLogic_EnterDupRsp(const CenterToLogic_EnterDupRsp& from);

  inline CenterToLogic_EnterDupRsp& operator=(const CenterToLogic_EnterDupRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterToLogic_EnterDupRsp& default_instance();

  void Swap(CenterToLogic_EnterDupRsp* other);

  // implements Message ----------------------------------------------

  CenterToLogic_EnterDupRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterToLogic_EnterDupRsp& from);
  void MergeFrom(const CenterToLogic_EnterDupRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required uint32 charId = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 3;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required int32 key_type = 4;
  inline bool has_key_type() const;
  inline void clear_key_type();
  static const int kKeyTypeFieldNumber = 4;
  inline ::google::protobuf::int32 key_type() const;
  inline void set_key_type(::google::protobuf::int32 value);

  // required uint64 key_value = 5;
  inline bool has_key_value() const;
  inline void clear_key_value();
  static const int kKeyValueFieldNumber = 5;
  inline ::google::protobuf::uint64 key_value() const;
  inline void set_key_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CenterToLogic_EnterDupRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_key_value();
  inline void clear_has_key_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::int32 key_type_;
  ::google::protobuf::uint64 key_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static CenterToLogic_EnterDupRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_CreateSceneReq : public ::google::protobuf::Message {
 public:
  LogicToCenter_CreateSceneReq();
  virtual ~LogicToCenter_CreateSceneReq();

  LogicToCenter_CreateSceneReq(const LogicToCenter_CreateSceneReq& from);

  inline LogicToCenter_CreateSceneReq& operator=(const LogicToCenter_CreateSceneReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_CreateSceneReq& default_instance();

  void Swap(LogicToCenter_CreateSceneReq* other);

  // implements Message ----------------------------------------------

  LogicToCenter_CreateSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_CreateSceneReq& from);
  void MergeFrom(const LogicToCenter_CreateSceneReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required int32 key_type = 3;
  inline bool has_key_type() const;
  inline void clear_key_type();
  static const int kKeyTypeFieldNumber = 3;
  inline ::google::protobuf::int32 key_type() const;
  inline void set_key_type(::google::protobuf::int32 value);

  // required uint64 key_value = 4;
  inline bool has_key_value() const;
  inline void clear_key_value();
  static const int kKeyValueFieldNumber = 4;
  inline ::google::protobuf::uint64 key_value() const;
  inline void set_key_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_CreateSceneReq)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_key_value();
  inline void clear_has_key_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::uint64 key_value_;
  ::google::protobuf::int32 key_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_CreateSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class CenterToLogic_CreateSceneRsp : public ::google::protobuf::Message {
 public:
  CenterToLogic_CreateSceneRsp();
  virtual ~CenterToLogic_CreateSceneRsp();

  CenterToLogic_CreateSceneRsp(const CenterToLogic_CreateSceneRsp& from);

  inline CenterToLogic_CreateSceneRsp& operator=(const CenterToLogic_CreateSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterToLogic_CreateSceneRsp& default_instance();

  void Swap(CenterToLogic_CreateSceneRsp* other);

  // implements Message ----------------------------------------------

  CenterToLogic_CreateSceneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterToLogic_CreateSceneRsp& from);
  void MergeFrom(const CenterToLogic_CreateSceneRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required uint32 char_id = 2;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 3;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required int32 key_type = 4;
  inline bool has_key_type() const;
  inline void clear_key_type();
  static const int kKeyTypeFieldNumber = 4;
  inline ::google::protobuf::int32 key_type() const;
  inline void set_key_type(::google::protobuf::int32 value);

  // required uint64 key_value = 5;
  inline bool has_key_value() const;
  inline void clear_key_value();
  static const int kKeyValueFieldNumber = 5;
  inline ::google::protobuf::uint64 key_value() const;
  inline void set_key_value(::google::protobuf::uint64 value);

  // optional uint32 scene_id = 6;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 6;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // repeated .ProtoBuf.DupBeforAreaProto area = 7;
  inline int area_size() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 7;
  inline const ::ProtoBuf::DupBeforAreaProto& area(int index) const;
  inline ::ProtoBuf::DupBeforAreaProto* mutable_area(int index);
  inline ::ProtoBuf::DupBeforAreaProto* add_area();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >&
      area() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >*
      mutable_area();

  // @@protoc_insertion_point(class_scope:ProtoBuf.CenterToLogic_CreateSceneRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_key_value();
  inline void clear_has_key_value();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::int32 key_type_;
  ::google::protobuf::uint64 key_value_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto > area_;
  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static CenterToLogic_CreateSceneRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_CreateDuplicateRsp : public ::google::protobuf::Message {
 public:
  LogicToCenter_CreateDuplicateRsp();
  virtual ~LogicToCenter_CreateDuplicateRsp();

  LogicToCenter_CreateDuplicateRsp(const LogicToCenter_CreateDuplicateRsp& from);

  inline LogicToCenter_CreateDuplicateRsp& operator=(const LogicToCenter_CreateDuplicateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_CreateDuplicateRsp& default_instance();

  void Swap(LogicToCenter_CreateDuplicateRsp* other);

  // implements Message ----------------------------------------------

  LogicToCenter_CreateDuplicateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_CreateDuplicateRsp& from);
  void MergeFrom(const LogicToCenter_CreateDuplicateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required uint32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_CreateDuplicateRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_CreateDuplicateRsp* default_instance_;
};
// -------------------------------------------------------------------

class CenterToLogic_DuplicateNotifyPrepare : public ::google::protobuf::Message {
 public:
  CenterToLogic_DuplicateNotifyPrepare();
  virtual ~CenterToLogic_DuplicateNotifyPrepare();

  CenterToLogic_DuplicateNotifyPrepare(const CenterToLogic_DuplicateNotifyPrepare& from);

  inline CenterToLogic_DuplicateNotifyPrepare& operator=(const CenterToLogic_DuplicateNotifyPrepare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterToLogic_DuplicateNotifyPrepare& default_instance();

  void Swap(CenterToLogic_DuplicateNotifyPrepare* other);

  // implements Message ----------------------------------------------

  CenterToLogic_DuplicateNotifyPrepare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterToLogic_DuplicateNotifyPrepare& from);
  void MergeFrom(const CenterToLogic_DuplicateNotifyPrepare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required uint32 scene_id = 3;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // required int32 key_type = 4;
  inline bool has_key_type() const;
  inline void clear_key_type();
  static const int kKeyTypeFieldNumber = 4;
  inline ::google::protobuf::int32 key_type() const;
  inline void set_key_type(::google::protobuf::int32 value);

  // required uint64 key_value = 5;
  inline bool has_key_value() const;
  inline void clear_key_value();
  static const int kKeyValueFieldNumber = 5;
  inline ::google::protobuf::uint64 key_value() const;
  inline void set_key_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CenterToLogic_DuplicateNotifyPrepare)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_key_value();
  inline void clear_has_key_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::int32 key_type_;
  ::google::protobuf::uint64 key_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static CenterToLogic_DuplicateNotifyPrepare* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicatePrepareRsp : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicatePrepareRsp();
  virtual ~LogicToCenter_DuplicatePrepareRsp();

  LogicToCenter_DuplicatePrepareRsp(const LogicToCenter_DuplicatePrepareRsp& from);

  inline LogicToCenter_DuplicatePrepareRsp& operator=(const LogicToCenter_DuplicatePrepareRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicatePrepareRsp& default_instance();

  void Swap(LogicToCenter_DuplicatePrepareRsp* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicatePrepareRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicatePrepareRsp& from);
  void MergeFrom(const LogicToCenter_DuplicatePrepareRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required uint32 char_id = 2;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 3;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required uint32 scene_id = 4;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicatePrepareRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicatePrepareRsp* default_instance_;
};
// -------------------------------------------------------------------

class CenterToLogic_DuplicateEnterNotify : public ::google::protobuf::Message {
 public:
  CenterToLogic_DuplicateEnterNotify();
  virtual ~CenterToLogic_DuplicateEnterNotify();

  CenterToLogic_DuplicateEnterNotify(const CenterToLogic_DuplicateEnterNotify& from);

  inline CenterToLogic_DuplicateEnterNotify& operator=(const CenterToLogic_DuplicateEnterNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterToLogic_DuplicateEnterNotify& default_instance();

  void Swap(CenterToLogic_DuplicateEnterNotify* other);

  // implements Message ----------------------------------------------

  CenterToLogic_DuplicateEnterNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterToLogic_DuplicateEnterNotify& from);
  void MergeFrom(const CenterToLogic_DuplicateEnterNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required uint32 scene_id = 3;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CenterToLogic_DuplicateEnterNotify)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static CenterToLogic_DuplicateEnterNotify* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicateEnterRsp : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicateEnterRsp();
  virtual ~LogicToCenter_DuplicateEnterRsp();

  LogicToCenter_DuplicateEnterRsp(const LogicToCenter_DuplicateEnterRsp& from);

  inline LogicToCenter_DuplicateEnterRsp& operator=(const LogicToCenter_DuplicateEnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicateEnterRsp& default_instance();

  void Swap(LogicToCenter_DuplicateEnterRsp* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicateEnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicateEnterRsp& from);
  void MergeFrom(const LogicToCenter_DuplicateEnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicateEnterRsp)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicateEnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicateLeaveRsp : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicateLeaveRsp();
  virtual ~LogicToCenter_DuplicateLeaveRsp();

  LogicToCenter_DuplicateLeaveRsp(const LogicToCenter_DuplicateLeaveRsp& from);

  inline LogicToCenter_DuplicateLeaveRsp& operator=(const LogicToCenter_DuplicateLeaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicateLeaveRsp& default_instance();

  void Swap(LogicToCenter_DuplicateLeaveRsp* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicateLeaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicateLeaveRsp& from);
  void MergeFrom(const LogicToCenter_DuplicateLeaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 scene_id = 2;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicateLeaveRsp)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicateLeaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicateBegin : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicateBegin();
  virtual ~LogicToCenter_DuplicateBegin();

  LogicToCenter_DuplicateBegin(const LogicToCenter_DuplicateBegin& from);

  inline LogicToCenter_DuplicateBegin& operator=(const LogicToCenter_DuplicateBegin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicateBegin& default_instance();

  void Swap(LogicToCenter_DuplicateBegin* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicateBegin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicateBegin& from);
  void MergeFrom(const LogicToCenter_DuplicateBegin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicateBegin)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicateBegin* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicateEnd : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicateEnd();
  virtual ~LogicToCenter_DuplicateEnd();

  LogicToCenter_DuplicateEnd(const LogicToCenter_DuplicateEnd& from);

  inline LogicToCenter_DuplicateEnd& operator=(const LogicToCenter_DuplicateEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicateEnd& default_instance();

  void Swap(LogicToCenter_DuplicateEnd* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicateEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicateEnd& from);
  void MergeFrom(const LogicToCenter_DuplicateEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicateEnd)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicateEnd* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicateDestory : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicateDestory();
  virtual ~LogicToCenter_DuplicateDestory();

  LogicToCenter_DuplicateDestory(const LogicToCenter_DuplicateDestory& from);

  inline LogicToCenter_DuplicateDestory& operator=(const LogicToCenter_DuplicateDestory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicateDestory& default_instance();

  void Swap(LogicToCenter_DuplicateDestory* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicateDestory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicateDestory& from);
  void MergeFrom(const LogicToCenter_DuplicateDestory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicateDestory)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicateDestory* default_instance_;
};
// ===================================================================


// ===================================================================

// DupMonsStateProto

// required uint32 mons_id = 1;
inline bool DupMonsStateProto::has_mons_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupMonsStateProto::set_has_mons_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupMonsStateProto::clear_has_mons_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupMonsStateProto::clear_mons_id() {
  mons_id_ = 0u;
  clear_has_mons_id();
}
inline ::google::protobuf::uint32 DupMonsStateProto::mons_id() const {
  return mons_id_;
}
inline void DupMonsStateProto::set_mons_id(::google::protobuf::uint32 value) {
  set_has_mons_id();
  mons_id_ = value;
}

// required int32 state = 2;
inline bool DupMonsStateProto::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupMonsStateProto::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupMonsStateProto::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupMonsStateProto::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DupMonsStateProto::state() const {
  return state_;
}
inline void DupMonsStateProto::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// DupFightDataProto

// required uint32 cid = 1;
inline bool DupFightDataProto::has_cid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupFightDataProto::set_has_cid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupFightDataProto::clear_has_cid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupFightDataProto::clear_cid() {
  cid_ = 0u;
  clear_has_cid();
}
inline ::google::protobuf::uint32 DupFightDataProto::cid() const {
  return cid_;
}
inline void DupFightDataProto::set_cid(::google::protobuf::uint32 value) {
  set_has_cid();
  cid_ = value;
}

// required uint64 atk = 2;
inline bool DupFightDataProto::has_atk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupFightDataProto::set_has_atk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupFightDataProto::clear_has_atk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupFightDataProto::clear_atk() {
  atk_ = GOOGLE_ULONGLONG(0);
  clear_has_atk();
}
inline ::google::protobuf::uint64 DupFightDataProto::atk() const {
  return atk_;
}
inline void DupFightDataProto::set_atk(::google::protobuf::uint64 value) {
  set_has_atk();
  atk_ = value;
}

// required uint64 be_atk = 3;
inline bool DupFightDataProto::has_be_atk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DupFightDataProto::set_has_be_atk() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DupFightDataProto::clear_has_be_atk() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DupFightDataProto::clear_be_atk() {
  be_atk_ = GOOGLE_ULONGLONG(0);
  clear_has_be_atk();
}
inline ::google::protobuf::uint64 DupFightDataProto::be_atk() const {
  return be_atk_;
}
inline void DupFightDataProto::set_be_atk(::google::protobuf::uint64 value) {
  set_has_be_atk();
  be_atk_ = value;
}

// -------------------------------------------------------------------

// Duplicate_InfoReq

// -------------------------------------------------------------------

// Duplicate_InfoRsp

// required int32 retcode = 1;
inline bool Duplicate_InfoRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_InfoRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_InfoRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_InfoRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_InfoRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_InfoRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// repeated .ProtoBuf.DuplicateProto info = 2;
inline int Duplicate_InfoRsp::info_size() const {
  return info_.size();
}
inline void Duplicate_InfoRsp::clear_info() {
  info_.Clear();
}
inline const ::ProtoBuf::DuplicateProto& Duplicate_InfoRsp::info(int index) const {
  return info_.Get(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_InfoRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_InfoRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
Duplicate_InfoRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
Duplicate_InfoRsp::mutable_info() {
  return &info_;
}

// repeated .ProtoBuf.DuplicateGroupProto group = 3;
inline int Duplicate_InfoRsp::group_size() const {
  return group_.size();
}
inline void Duplicate_InfoRsp::clear_group() {
  group_.Clear();
}
inline const ::ProtoBuf::DuplicateGroupProto& Duplicate_InfoRsp::group(int index) const {
  return group_.Get(index);
}
inline ::ProtoBuf::DuplicateGroupProto* Duplicate_InfoRsp::mutable_group(int index) {
  return group_.Mutable(index);
}
inline ::ProtoBuf::DuplicateGroupProto* Duplicate_InfoRsp::add_group() {
  return group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >&
Duplicate_InfoRsp::group() const {
  return group_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >*
Duplicate_InfoRsp::mutable_group() {
  return &group_;
}

// repeated int32 open_list = 4;
inline int Duplicate_InfoRsp::open_list_size() const {
  return open_list_.size();
}
inline void Duplicate_InfoRsp::clear_open_list() {
  open_list_.Clear();
}
inline ::google::protobuf::int32 Duplicate_InfoRsp::open_list(int index) const {
  return open_list_.Get(index);
}
inline void Duplicate_InfoRsp::set_open_list(int index, ::google::protobuf::int32 value) {
  open_list_.Set(index, value);
}
inline void Duplicate_InfoRsp::add_open_list(::google::protobuf::int32 value) {
  open_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Duplicate_InfoRsp::open_list() const {
  return open_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Duplicate_InfoRsp::mutable_open_list() {
  return &open_list_;
}

// -------------------------------------------------------------------

// Duplicate_EnterReq

// required int32 duplicate_id = 1;
inline bool Duplicate_EnterReq::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterReq::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterReq::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterReq::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_EnterReq::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_EnterReq::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// optional int32 area_id = 2;
inline bool Duplicate_EnterReq::has_area_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_EnterReq::set_has_area_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_EnterReq::clear_has_area_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_EnterReq::clear_area_id() {
  area_id_ = 0;
  clear_has_area_id();
}
inline ::google::protobuf::int32 Duplicate_EnterReq::area_id() const {
  return area_id_;
}
inline void Duplicate_EnterReq::set_area_id(::google::protobuf::int32 value) {
  set_has_area_id();
  area_id_ = value;
}

// optional .ProtoBuf.Vector3PB cur_pos = 3;
inline bool Duplicate_EnterReq::has_cur_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Duplicate_EnterReq::set_has_cur_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Duplicate_EnterReq::clear_has_cur_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Duplicate_EnterReq::clear_cur_pos() {
  if (cur_pos_ != NULL) cur_pos_->::ProtoBuf::Vector3PB::Clear();
  clear_has_cur_pos();
}
inline const ::ProtoBuf::Vector3PB& Duplicate_EnterReq::cur_pos() const {
  return cur_pos_ != NULL ? *cur_pos_ : *default_instance_->cur_pos_;
}
inline ::ProtoBuf::Vector3PB* Duplicate_EnterReq::mutable_cur_pos() {
  set_has_cur_pos();
  if (cur_pos_ == NULL) cur_pos_ = new ::ProtoBuf::Vector3PB;
  return cur_pos_;
}
inline ::ProtoBuf::Vector3PB* Duplicate_EnterReq::release_cur_pos() {
  clear_has_cur_pos();
  ::ProtoBuf::Vector3PB* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
inline void Duplicate_EnterReq::set_allocated_cur_pos(::ProtoBuf::Vector3PB* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    set_has_cur_pos();
  } else {
    clear_has_cur_pos();
  }
}

// -------------------------------------------------------------------

// Duplicate_EnterRsp

// required int32 retcode = 1;
inline bool Duplicate_EnterRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_EnterRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 duplicate_id = 2;
inline bool Duplicate_EnterRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_EnterRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_EnterRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_EnterRsp::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_EnterRsp::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// repeated int32 area = 3;
inline int Duplicate_EnterRsp::area_size() const {
  return area_.size();
}
inline void Duplicate_EnterRsp::clear_area() {
  area_.Clear();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::area(int index) const {
  return area_.Get(index);
}
inline void Duplicate_EnterRsp::set_area(int index, ::google::protobuf::int32 value) {
  area_.Set(index, value);
}
inline void Duplicate_EnterRsp::add_area(::google::protobuf::int32 value) {
  area_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Duplicate_EnterRsp::area() const {
  return area_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Duplicate_EnterRsp::mutable_area() {
  return &area_;
}

// optional int32 mons_num = 4;
inline bool Duplicate_EnterRsp::has_mons_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Duplicate_EnterRsp::set_has_mons_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Duplicate_EnterRsp::clear_has_mons_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Duplicate_EnterRsp::clear_mons_num() {
  mons_num_ = 0;
  clear_has_mons_num();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::mons_num() const {
  return mons_num_;
}
inline void Duplicate_EnterRsp::set_mons_num(::google::protobuf::int32 value) {
  set_has_mons_num();
  mons_num_ = value;
}

// optional int32 dup_sec = 5;
inline bool Duplicate_EnterRsp::has_dup_sec() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Duplicate_EnterRsp::set_has_dup_sec() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Duplicate_EnterRsp::clear_has_dup_sec() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Duplicate_EnterRsp::clear_dup_sec() {
  dup_sec_ = 0;
  clear_has_dup_sec();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::dup_sec() const {
  return dup_sec_;
}
inline void Duplicate_EnterRsp::set_dup_sec(::google::protobuf::int32 value) {
  set_has_dup_sec();
  dup_sec_ = value;
}

// optional int32 tower_hp = 6;
inline bool Duplicate_EnterRsp::has_tower_hp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Duplicate_EnterRsp::set_has_tower_hp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Duplicate_EnterRsp::clear_has_tower_hp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Duplicate_EnterRsp::clear_tower_hp() {
  tower_hp_ = 0;
  clear_has_tower_hp();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::tower_hp() const {
  return tower_hp_;
}
inline void Duplicate_EnterRsp::set_tower_hp(::google::protobuf::int32 value) {
  set_has_tower_hp();
  tower_hp_ = value;
}

// optional int32 trans_num = 7;
inline bool Duplicate_EnterRsp::has_trans_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Duplicate_EnterRsp::set_has_trans_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Duplicate_EnterRsp::clear_has_trans_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Duplicate_EnterRsp::clear_trans_num() {
  trans_num_ = 0;
  clear_has_trans_num();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::trans_num() const {
  return trans_num_;
}
inline void Duplicate_EnterRsp::set_trans_num(::google::protobuf::int32 value) {
  set_has_trans_num();
  trans_num_ = value;
}

// -------------------------------------------------------------------

// Duplicate_ResultRsp

// required int32 result = 1;
inline bool Duplicate_ResultRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ResultRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ResultRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ResultRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::result() const {
  return result_;
}
inline void Duplicate_ResultRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 duplicate_id = 2;
inline bool Duplicate_ResultRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_ResultRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_ResultRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_ResultRsp::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_ResultRsp::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// optional int32 star = 3;
inline bool Duplicate_ResultRsp::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Duplicate_ResultRsp::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Duplicate_ResultRsp::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Duplicate_ResultRsp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::star() const {
  return star_;
}
inline void Duplicate_ResultRsp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 exp = 4;
inline bool Duplicate_ResultRsp::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Duplicate_ResultRsp::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Duplicate_ResultRsp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Duplicate_ResultRsp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::exp() const {
  return exp_;
}
inline void Duplicate_ResultRsp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 gold = 5;
inline bool Duplicate_ResultRsp::has_gold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Duplicate_ResultRsp::set_has_gold() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Duplicate_ResultRsp::clear_has_gold() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Duplicate_ResultRsp::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::gold() const {
  return gold_;
}
inline void Duplicate_ResultRsp::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional .ProtoBuf.RewardItemProto reward = 6;
inline bool Duplicate_ResultRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Duplicate_ResultRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Duplicate_ResultRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Duplicate_ResultRsp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoBuf::RewardItemProto::Clear();
  clear_has_reward();
}
inline const ::ProtoBuf::RewardItemProto& Duplicate_ResultRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoBuf::RewardItemProto;
  return reward_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::release_reward() {
  clear_has_reward();
  ::ProtoBuf::RewardItemProto* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void Duplicate_ResultRsp::set_allocated_reward(::ProtoBuf::RewardItemProto* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// optional .ProtoBuf.RewardItemProto flop = 7;
inline bool Duplicate_ResultRsp::has_flop() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Duplicate_ResultRsp::set_has_flop() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Duplicate_ResultRsp::clear_has_flop() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Duplicate_ResultRsp::clear_flop() {
  if (flop_ != NULL) flop_->::ProtoBuf::RewardItemProto::Clear();
  clear_has_flop();
}
inline const ::ProtoBuf::RewardItemProto& Duplicate_ResultRsp::flop() const {
  return flop_ != NULL ? *flop_ : *default_instance_->flop_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::mutable_flop() {
  set_has_flop();
  if (flop_ == NULL) flop_ = new ::ProtoBuf::RewardItemProto;
  return flop_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::release_flop() {
  clear_has_flop();
  ::ProtoBuf::RewardItemProto* temp = flop_;
  flop_ = NULL;
  return temp;
}
inline void Duplicate_ResultRsp::set_allocated_flop(::ProtoBuf::RewardItemProto* flop) {
  delete flop_;
  flop_ = flop;
  if (flop) {
    set_has_flop();
  } else {
    clear_has_flop();
  }
}

// -------------------------------------------------------------------

// Duplicate_AutoFightReq

// -------------------------------------------------------------------

// Duplicate_AutoFightRsp

// required int32 result = 1;
inline bool Duplicate_AutoFightRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_AutoFightRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_AutoFightRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_AutoFightRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Duplicate_AutoFightRsp::result() const {
  return result_;
}
inline void Duplicate_AutoFightRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Duplicate_FlopReq

// -------------------------------------------------------------------

// Duplicate_FlopRsp

// required int32 retcode = 1;
inline bool Duplicate_FlopRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_FlopRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_FlopRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_FlopRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_FlopRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_FlopRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 index = 2;
inline bool Duplicate_FlopRsp::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_FlopRsp::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_FlopRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_FlopRsp::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Duplicate_FlopRsp::index() const {
  return index_;
}
inline void Duplicate_FlopRsp::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// Duplicate_UpdateRsp

// repeated .ProtoBuf.DuplicateProto info = 1;
inline int Duplicate_UpdateRsp::info_size() const {
  return info_.size();
}
inline void Duplicate_UpdateRsp::clear_info() {
  info_.Clear();
}
inline const ::ProtoBuf::DuplicateProto& Duplicate_UpdateRsp::info(int index) const {
  return info_.Get(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_UpdateRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_UpdateRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
Duplicate_UpdateRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
Duplicate_UpdateRsp::mutable_info() {
  return &info_;
}

// repeated .ProtoBuf.DuplicateGroupProto group = 2;
inline int Duplicate_UpdateRsp::group_size() const {
  return group_.size();
}
inline void Duplicate_UpdateRsp::clear_group() {
  group_.Clear();
}
inline const ::ProtoBuf::DuplicateGroupProto& Duplicate_UpdateRsp::group(int index) const {
  return group_.Get(index);
}
inline ::ProtoBuf::DuplicateGroupProto* Duplicate_UpdateRsp::mutable_group(int index) {
  return group_.Mutable(index);
}
inline ::ProtoBuf::DuplicateGroupProto* Duplicate_UpdateRsp::add_group() {
  return group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >&
Duplicate_UpdateRsp::group() const {
  return group_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateGroupProto >*
Duplicate_UpdateRsp::mutable_group() {
  return &group_;
}

// repeated int32 open_list = 3;
inline int Duplicate_UpdateRsp::open_list_size() const {
  return open_list_.size();
}
inline void Duplicate_UpdateRsp::clear_open_list() {
  open_list_.Clear();
}
inline ::google::protobuf::int32 Duplicate_UpdateRsp::open_list(int index) const {
  return open_list_.Get(index);
}
inline void Duplicate_UpdateRsp::set_open_list(int index, ::google::protobuf::int32 value) {
  open_list_.Set(index, value);
}
inline void Duplicate_UpdateRsp::add_open_list(::google::protobuf::int32 value) {
  open_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Duplicate_UpdateRsp::open_list() const {
  return open_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Duplicate_UpdateRsp::mutable_open_list() {
  return &open_list_;
}

// -------------------------------------------------------------------

// Duplicate_ReliveReq

// required int32 type = 1;
inline bool Duplicate_ReliveReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ReliveReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ReliveReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ReliveReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Duplicate_ReliveReq::type() const {
  return type_;
}
inline void Duplicate_ReliveReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Duplicate_ReliveRsp

// required int32 retcode = 1;
inline bool Duplicate_ReliveRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ReliveRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ReliveRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ReliveRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_ReliveRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_ReliveRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 type = 2;
inline bool Duplicate_ReliveRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_ReliveRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_ReliveRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_ReliveRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Duplicate_ReliveRsp::type() const {
  return type_;
}
inline void Duplicate_ReliveRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Duplicate_LeaveReq

// -------------------------------------------------------------------

// Duplicate_LeaveRsp

// required int32 retcode = 1;
inline bool Duplicate_LeaveRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_LeaveRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_LeaveRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_LeaveRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_LeaveRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_LeaveRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Duplicate_EnterAreaReq

// required int32 area_id = 1;
inline bool Duplicate_EnterAreaReq::has_area_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterAreaReq::set_has_area_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterAreaReq::clear_has_area_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterAreaReq::clear_area_id() {
  area_id_ = 0;
  clear_has_area_id();
}
inline ::google::protobuf::int32 Duplicate_EnterAreaReq::area_id() const {
  return area_id_;
}
inline void Duplicate_EnterAreaReq::set_area_id(::google::protobuf::int32 value) {
  set_has_area_id();
  area_id_ = value;
}

// -------------------------------------------------------------------

// Duplicate_EnterAreaRsp

// required int32 retcode = 1;
inline bool Duplicate_EnterAreaRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterAreaRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterAreaRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterAreaRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_EnterAreaRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_EnterAreaRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Duplicate_BuyCountReq

// required int32 group_id = 1;
inline bool Duplicate_BuyCountReq::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_BuyCountReq::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_BuyCountReq::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_BuyCountReq::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 Duplicate_BuyCountReq::group_id() const {
  return group_id_;
}
inline void Duplicate_BuyCountReq::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
}

// -------------------------------------------------------------------

// Duplicate_BuyCountRsp

// required int32 retcode = 1;
inline bool Duplicate_BuyCountRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_BuyCountRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_BuyCountRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_BuyCountRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_BuyCountRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_BuyCountRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 buy_num = 2;
inline bool Duplicate_BuyCountRsp::has_buy_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_BuyCountRsp::set_has_buy_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_BuyCountRsp::clear_has_buy_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_BuyCountRsp::clear_buy_num() {
  buy_num_ = 0;
  clear_has_buy_num();
}
inline ::google::protobuf::int32 Duplicate_BuyCountRsp::buy_num() const {
  return buy_num_;
}
inline void Duplicate_BuyCountRsp::set_buy_num(::google::protobuf::int32 value) {
  set_has_buy_num();
  buy_num_ = value;
}

// optional int32 group_id = 3;
inline bool Duplicate_BuyCountRsp::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Duplicate_BuyCountRsp::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Duplicate_BuyCountRsp::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Duplicate_BuyCountRsp::clear_group_id() {
  group_id_ = 0;
  clear_has_group_id();
}
inline ::google::protobuf::int32 Duplicate_BuyCountRsp::group_id() const {
  return group_id_;
}
inline void Duplicate_BuyCountRsp::set_group_id(::google::protobuf::int32 value) {
  set_has_group_id();
  group_id_ = value;
}

// -------------------------------------------------------------------

// Duplicate_AutoChallengeReq

// -------------------------------------------------------------------

// Duplicate_AutoChallengeRsp

// required int32 retcode = 1;
inline bool Duplicate_AutoChallengeRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_AutoChallengeRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_AutoChallengeRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_AutoChallengeRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_AutoChallengeRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_AutoChallengeRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Duplicate_FightDataRsp

// repeated .ProtoBuf.DupFightDataProto fight_data = 1;
inline int Duplicate_FightDataRsp::fight_data_size() const {
  return fight_data_.size();
}
inline void Duplicate_FightDataRsp::clear_fight_data() {
  fight_data_.Clear();
}
inline const ::ProtoBuf::DupFightDataProto& Duplicate_FightDataRsp::fight_data(int index) const {
  return fight_data_.Get(index);
}
inline ::ProtoBuf::DupFightDataProto* Duplicate_FightDataRsp::mutable_fight_data(int index) {
  return fight_data_.Mutable(index);
}
inline ::ProtoBuf::DupFightDataProto* Duplicate_FightDataRsp::add_fight_data() {
  return fight_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupFightDataProto >&
Duplicate_FightDataRsp::fight_data() const {
  return fight_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupFightDataProto >*
Duplicate_FightDataRsp::mutable_fight_data() {
  return &fight_data_;
}

// -------------------------------------------------------------------

// Duplicate_MonsWaveRsp

// required int32 wave = 1;
inline bool Duplicate_MonsWaveRsp::has_wave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_MonsWaveRsp::set_has_wave() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_MonsWaveRsp::clear_has_wave() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_MonsWaveRsp::clear_wave() {
  wave_ = 0;
  clear_has_wave();
}
inline ::google::protobuf::int32 Duplicate_MonsWaveRsp::wave() const {
  return wave_;
}
inline void Duplicate_MonsWaveRsp::set_wave(::google::protobuf::int32 value) {
  set_has_wave();
  wave_ = value;
}

// required int32 sec = 2;
inline bool Duplicate_MonsWaveRsp::has_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_MonsWaveRsp::set_has_sec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_MonsWaveRsp::clear_has_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_MonsWaveRsp::clear_sec() {
  sec_ = 0;
  clear_has_sec();
}
inline ::google::protobuf::int32 Duplicate_MonsWaveRsp::sec() const {
  return sec_;
}
inline void Duplicate_MonsWaveRsp::set_sec(::google::protobuf::int32 value) {
  set_has_sec();
  sec_ = value;
}

// -------------------------------------------------------------------

// Duplicate_MonsNumRsp

// required int32 num = 1;
inline bool Duplicate_MonsNumRsp::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_MonsNumRsp::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_MonsNumRsp::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_MonsNumRsp::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 Duplicate_MonsNumRsp::num() const {
  return num_;
}
inline void Duplicate_MonsNumRsp::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// Duplicate_MonsStateRsp

// repeated .ProtoBuf.DupMonsStateProto mon_state = 1;
inline int Duplicate_MonsStateRsp::mon_state_size() const {
  return mon_state_.size();
}
inline void Duplicate_MonsStateRsp::clear_mon_state() {
  mon_state_.Clear();
}
inline const ::ProtoBuf::DupMonsStateProto& Duplicate_MonsStateRsp::mon_state(int index) const {
  return mon_state_.Get(index);
}
inline ::ProtoBuf::DupMonsStateProto* Duplicate_MonsStateRsp::mutable_mon_state(int index) {
  return mon_state_.Mutable(index);
}
inline ::ProtoBuf::DupMonsStateProto* Duplicate_MonsStateRsp::add_mon_state() {
  return mon_state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupMonsStateProto >&
Duplicate_MonsStateRsp::mon_state() const {
  return mon_state_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupMonsStateProto >*
Duplicate_MonsStateRsp::mutable_mon_state() {
  return &mon_state_;
}

// -------------------------------------------------------------------

// Duplicate_ReliveNumRsp

// required int32 count = 1;
inline bool Duplicate_ReliveNumRsp::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ReliveNumRsp::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ReliveNumRsp::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ReliveNumRsp::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Duplicate_ReliveNumRsp::count() const {
  return count_;
}
inline void Duplicate_ReliveNumRsp::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// Duplicate_TowerHpRsp

// required int32 hp = 1;
inline bool Duplicate_TowerHpRsp::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_TowerHpRsp::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_TowerHpRsp::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_TowerHpRsp::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 Duplicate_TowerHpRsp::hp() const {
  return hp_;
}
inline void Duplicate_TowerHpRsp::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
}

// -------------------------------------------------------------------

// Duplicate_TransMonsNumRsp

// required int32 trans_num = 1;
inline bool Duplicate_TransMonsNumRsp::has_trans_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_TransMonsNumRsp::set_has_trans_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_TransMonsNumRsp::clear_has_trans_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_TransMonsNumRsp::clear_trans_num() {
  trans_num_ = 0;
  clear_has_trans_num();
}
inline ::google::protobuf::int32 Duplicate_TransMonsNumRsp::trans_num() const {
  return trans_num_;
}
inline void Duplicate_TransMonsNumRsp::set_trans_num(::google::protobuf::int32 value) {
  set_has_trans_num();
  trans_num_ = value;
}

// -------------------------------------------------------------------

// DupBeforAreaProto

// required uint32 charId = 1;
inline bool DupBeforAreaProto::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DupBeforAreaProto::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DupBeforAreaProto::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DupBeforAreaProto::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 DupBeforAreaProto::charid() const {
  return charid_;
}
inline void DupBeforAreaProto::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 areaId = 2;
inline bool DupBeforAreaProto::has_areaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DupBeforAreaProto::set_has_areaid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DupBeforAreaProto::clear_has_areaid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DupBeforAreaProto::clear_areaid() {
  areaid_ = 0u;
  clear_has_areaid();
}
inline ::google::protobuf::uint32 DupBeforAreaProto::areaid() const {
  return areaid_;
}
inline void DupBeforAreaProto::set_areaid(::google::protobuf::uint32 value) {
  set_has_areaid();
  areaid_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_EnterDupReq

// required uint32 charId = 1;
inline bool LogicToCenter_EnterDupReq::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_EnterDupReq::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_EnterDupReq::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_EnterDupReq::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 LogicToCenter_EnterDupReq::charid() const {
  return charid_;
}
inline void LogicToCenter_EnterDupReq::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 duplicate_id = 2;
inline bool LogicToCenter_EnterDupReq::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_EnterDupReq::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_EnterDupReq::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_EnterDupReq::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 LogicToCenter_EnterDupReq::duplicate_id() const {
  return duplicate_id_;
}
inline void LogicToCenter_EnterDupReq::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required int32 key_type = 3;
inline bool LogicToCenter_EnterDupReq::has_key_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicToCenter_EnterDupReq::set_has_key_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicToCenter_EnterDupReq::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicToCenter_EnterDupReq::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
inline ::google::protobuf::int32 LogicToCenter_EnterDupReq::key_type() const {
  return key_type_;
}
inline void LogicToCenter_EnterDupReq::set_key_type(::google::protobuf::int32 value) {
  set_has_key_type();
  key_type_ = value;
}

// required uint64 key_value = 4;
inline bool LogicToCenter_EnterDupReq::has_key_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicToCenter_EnterDupReq::set_has_key_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicToCenter_EnterDupReq::clear_has_key_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicToCenter_EnterDupReq::clear_key_value() {
  key_value_ = GOOGLE_ULONGLONG(0);
  clear_has_key_value();
}
inline ::google::protobuf::uint64 LogicToCenter_EnterDupReq::key_value() const {
  return key_value_;
}
inline void LogicToCenter_EnterDupReq::set_key_value(::google::protobuf::uint64 value) {
  set_has_key_value();
  key_value_ = value;
}

// repeated .ProtoBuf.DupBeforAreaProto area = 5;
inline int LogicToCenter_EnterDupReq::area_size() const {
  return area_.size();
}
inline void LogicToCenter_EnterDupReq::clear_area() {
  area_.Clear();
}
inline const ::ProtoBuf::DupBeforAreaProto& LogicToCenter_EnterDupReq::area(int index) const {
  return area_.Get(index);
}
inline ::ProtoBuf::DupBeforAreaProto* LogicToCenter_EnterDupReq::mutable_area(int index) {
  return area_.Mutable(index);
}
inline ::ProtoBuf::DupBeforAreaProto* LogicToCenter_EnterDupReq::add_area() {
  return area_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >&
LogicToCenter_EnterDupReq::area() const {
  return area_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >*
LogicToCenter_EnterDupReq::mutable_area() {
  return &area_;
}

// -------------------------------------------------------------------

// CenterToLogic_EnterDupRsp

// required int32 retcode = 1;
inline bool CenterToLogic_EnterDupRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterToLogic_EnterDupRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterToLogic_EnterDupRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterToLogic_EnterDupRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CenterToLogic_EnterDupRsp::retcode() const {
  return retcode_;
}
inline void CenterToLogic_EnterDupRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required uint32 charId = 2;
inline bool CenterToLogic_EnterDupRsp::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterToLogic_EnterDupRsp::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterToLogic_EnterDupRsp::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterToLogic_EnterDupRsp::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 CenterToLogic_EnterDupRsp::charid() const {
  return charid_;
}
inline void CenterToLogic_EnterDupRsp::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 duplicate_id = 3;
inline bool CenterToLogic_EnterDupRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterToLogic_EnterDupRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterToLogic_EnterDupRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterToLogic_EnterDupRsp::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 CenterToLogic_EnterDupRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void CenterToLogic_EnterDupRsp::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required int32 key_type = 4;
inline bool CenterToLogic_EnterDupRsp::has_key_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterToLogic_EnterDupRsp::set_has_key_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterToLogic_EnterDupRsp::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterToLogic_EnterDupRsp::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
inline ::google::protobuf::int32 CenterToLogic_EnterDupRsp::key_type() const {
  return key_type_;
}
inline void CenterToLogic_EnterDupRsp::set_key_type(::google::protobuf::int32 value) {
  set_has_key_type();
  key_type_ = value;
}

// required uint64 key_value = 5;
inline bool CenterToLogic_EnterDupRsp::has_key_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterToLogic_EnterDupRsp::set_has_key_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterToLogic_EnterDupRsp::clear_has_key_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterToLogic_EnterDupRsp::clear_key_value() {
  key_value_ = GOOGLE_ULONGLONG(0);
  clear_has_key_value();
}
inline ::google::protobuf::uint64 CenterToLogic_EnterDupRsp::key_value() const {
  return key_value_;
}
inline void CenterToLogic_EnterDupRsp::set_key_value(::google::protobuf::uint64 value) {
  set_has_key_value();
  key_value_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_CreateSceneReq

// required uint32 char_id = 1;
inline bool LogicToCenter_CreateSceneReq::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_CreateSceneReq::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_CreateSceneReq::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_CreateSceneReq::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 LogicToCenter_CreateSceneReq::char_id() const {
  return char_id_;
}
inline void LogicToCenter_CreateSceneReq::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 2;
inline bool LogicToCenter_CreateSceneReq::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_CreateSceneReq::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_CreateSceneReq::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_CreateSceneReq::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 LogicToCenter_CreateSceneReq::duplicate_id() const {
  return duplicate_id_;
}
inline void LogicToCenter_CreateSceneReq::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required int32 key_type = 3;
inline bool LogicToCenter_CreateSceneReq::has_key_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicToCenter_CreateSceneReq::set_has_key_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicToCenter_CreateSceneReq::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicToCenter_CreateSceneReq::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
inline ::google::protobuf::int32 LogicToCenter_CreateSceneReq::key_type() const {
  return key_type_;
}
inline void LogicToCenter_CreateSceneReq::set_key_type(::google::protobuf::int32 value) {
  set_has_key_type();
  key_type_ = value;
}

// required uint64 key_value = 4;
inline bool LogicToCenter_CreateSceneReq::has_key_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicToCenter_CreateSceneReq::set_has_key_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicToCenter_CreateSceneReq::clear_has_key_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicToCenter_CreateSceneReq::clear_key_value() {
  key_value_ = GOOGLE_ULONGLONG(0);
  clear_has_key_value();
}
inline ::google::protobuf::uint64 LogicToCenter_CreateSceneReq::key_value() const {
  return key_value_;
}
inline void LogicToCenter_CreateSceneReq::set_key_value(::google::protobuf::uint64 value) {
  set_has_key_value();
  key_value_ = value;
}

// -------------------------------------------------------------------

// CenterToLogic_CreateSceneRsp

// required int32 retcode = 1;
inline bool CenterToLogic_CreateSceneRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterToLogic_CreateSceneRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterToLogic_CreateSceneRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterToLogic_CreateSceneRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CenterToLogic_CreateSceneRsp::retcode() const {
  return retcode_;
}
inline void CenterToLogic_CreateSceneRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required uint32 char_id = 2;
inline bool CenterToLogic_CreateSceneRsp::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterToLogic_CreateSceneRsp::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterToLogic_CreateSceneRsp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterToLogic_CreateSceneRsp::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 CenterToLogic_CreateSceneRsp::char_id() const {
  return char_id_;
}
inline void CenterToLogic_CreateSceneRsp::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 3;
inline bool CenterToLogic_CreateSceneRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterToLogic_CreateSceneRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterToLogic_CreateSceneRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterToLogic_CreateSceneRsp::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 CenterToLogic_CreateSceneRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void CenterToLogic_CreateSceneRsp::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required int32 key_type = 4;
inline bool CenterToLogic_CreateSceneRsp::has_key_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterToLogic_CreateSceneRsp::set_has_key_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterToLogic_CreateSceneRsp::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterToLogic_CreateSceneRsp::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
inline ::google::protobuf::int32 CenterToLogic_CreateSceneRsp::key_type() const {
  return key_type_;
}
inline void CenterToLogic_CreateSceneRsp::set_key_type(::google::protobuf::int32 value) {
  set_has_key_type();
  key_type_ = value;
}

// required uint64 key_value = 5;
inline bool CenterToLogic_CreateSceneRsp::has_key_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterToLogic_CreateSceneRsp::set_has_key_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterToLogic_CreateSceneRsp::clear_has_key_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterToLogic_CreateSceneRsp::clear_key_value() {
  key_value_ = GOOGLE_ULONGLONG(0);
  clear_has_key_value();
}
inline ::google::protobuf::uint64 CenterToLogic_CreateSceneRsp::key_value() const {
  return key_value_;
}
inline void CenterToLogic_CreateSceneRsp::set_key_value(::google::protobuf::uint64 value) {
  set_has_key_value();
  key_value_ = value;
}

// optional uint32 scene_id = 6;
inline bool CenterToLogic_CreateSceneRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CenterToLogic_CreateSceneRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CenterToLogic_CreateSceneRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CenterToLogic_CreateSceneRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 CenterToLogic_CreateSceneRsp::scene_id() const {
  return scene_id_;
}
inline void CenterToLogic_CreateSceneRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// repeated .ProtoBuf.DupBeforAreaProto area = 7;
inline int CenterToLogic_CreateSceneRsp::area_size() const {
  return area_.size();
}
inline void CenterToLogic_CreateSceneRsp::clear_area() {
  area_.Clear();
}
inline const ::ProtoBuf::DupBeforAreaProto& CenterToLogic_CreateSceneRsp::area(int index) const {
  return area_.Get(index);
}
inline ::ProtoBuf::DupBeforAreaProto* CenterToLogic_CreateSceneRsp::mutable_area(int index) {
  return area_.Mutable(index);
}
inline ::ProtoBuf::DupBeforAreaProto* CenterToLogic_CreateSceneRsp::add_area() {
  return area_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >&
CenterToLogic_CreateSceneRsp::area() const {
  return area_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DupBeforAreaProto >*
CenterToLogic_CreateSceneRsp::mutable_area() {
  return &area_;
}

// -------------------------------------------------------------------

// LogicToCenter_CreateDuplicateRsp

// required int32 retcode = 1;
inline bool LogicToCenter_CreateDuplicateRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_CreateDuplicateRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_CreateDuplicateRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_CreateDuplicateRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 LogicToCenter_CreateDuplicateRsp::retcode() const {
  return retcode_;
}
inline void LogicToCenter_CreateDuplicateRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required uint32 scene_id = 2;
inline bool LogicToCenter_CreateDuplicateRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_CreateDuplicateRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_CreateDuplicateRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_CreateDuplicateRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_CreateDuplicateRsp::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_CreateDuplicateRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// CenterToLogic_DuplicateNotifyPrepare

// required uint32 char_id = 1;
inline bool CenterToLogic_DuplicateNotifyPrepare::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 CenterToLogic_DuplicateNotifyPrepare::char_id() const {
  return char_id_;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 2;
inline bool CenterToLogic_DuplicateNotifyPrepare::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 CenterToLogic_DuplicateNotifyPrepare::duplicate_id() const {
  return duplicate_id_;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required uint32 scene_id = 3;
inline bool CenterToLogic_DuplicateNotifyPrepare::has_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_has_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 CenterToLogic_DuplicateNotifyPrepare::scene_id() const {
  return scene_id_;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// required int32 key_type = 4;
inline bool CenterToLogic_DuplicateNotifyPrepare::has_key_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_has_key_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
inline ::google::protobuf::int32 CenterToLogic_DuplicateNotifyPrepare::key_type() const {
  return key_type_;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_key_type(::google::protobuf::int32 value) {
  set_has_key_type();
  key_type_ = value;
}

// required uint64 key_value = 5;
inline bool CenterToLogic_DuplicateNotifyPrepare::has_key_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_has_key_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_has_key_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CenterToLogic_DuplicateNotifyPrepare::clear_key_value() {
  key_value_ = GOOGLE_ULONGLONG(0);
  clear_has_key_value();
}
inline ::google::protobuf::uint64 CenterToLogic_DuplicateNotifyPrepare::key_value() const {
  return key_value_;
}
inline void CenterToLogic_DuplicateNotifyPrepare::set_key_value(::google::protobuf::uint64 value) {
  set_has_key_value();
  key_value_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicatePrepareRsp

// required int32 retcode = 1;
inline bool LogicToCenter_DuplicatePrepareRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 LogicToCenter_DuplicatePrepareRsp::retcode() const {
  return retcode_;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required uint32 char_id = 2;
inline bool LogicToCenter_DuplicatePrepareRsp::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicatePrepareRsp::char_id() const {
  return char_id_;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 3;
inline bool LogicToCenter_DuplicatePrepareRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicatePrepareRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required uint32 scene_id = 4;
inline bool LogicToCenter_DuplicatePrepareRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicToCenter_DuplicatePrepareRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicatePrepareRsp::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicatePrepareRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// CenterToLogic_DuplicateEnterNotify

// required uint32 char_id = 1;
inline bool CenterToLogic_DuplicateEnterNotify::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterToLogic_DuplicateEnterNotify::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterToLogic_DuplicateEnterNotify::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterToLogic_DuplicateEnterNotify::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 CenterToLogic_DuplicateEnterNotify::char_id() const {
  return char_id_;
}
inline void CenterToLogic_DuplicateEnterNotify::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 2;
inline bool CenterToLogic_DuplicateEnterNotify::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterToLogic_DuplicateEnterNotify::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterToLogic_DuplicateEnterNotify::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterToLogic_DuplicateEnterNotify::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 CenterToLogic_DuplicateEnterNotify::duplicate_id() const {
  return duplicate_id_;
}
inline void CenterToLogic_DuplicateEnterNotify::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required uint32 scene_id = 3;
inline bool CenterToLogic_DuplicateEnterNotify::has_scene_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterToLogic_DuplicateEnterNotify::set_has_scene_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterToLogic_DuplicateEnterNotify::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterToLogic_DuplicateEnterNotify::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 CenterToLogic_DuplicateEnterNotify::scene_id() const {
  return scene_id_;
}
inline void CenterToLogic_DuplicateEnterNotify::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicateEnterRsp

// required uint32 char_id = 1;
inline bool LogicToCenter_DuplicateEnterRsp::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicateEnterRsp::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicateEnterRsp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicateEnterRsp::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateEnterRsp::char_id() const {
  return char_id_;
}
inline void LogicToCenter_DuplicateEnterRsp::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 scene_id = 2;
inline bool LogicToCenter_DuplicateEnterRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_DuplicateEnterRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_DuplicateEnterRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_DuplicateEnterRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateEnterRsp::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicateEnterRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicateLeaveRsp

// required uint32 char_id = 1;
inline bool LogicToCenter_DuplicateLeaveRsp::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicateLeaveRsp::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicateLeaveRsp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicateLeaveRsp::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateLeaveRsp::char_id() const {
  return char_id_;
}
inline void LogicToCenter_DuplicateLeaveRsp::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 scene_id = 2;
inline bool LogicToCenter_DuplicateLeaveRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_DuplicateLeaveRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_DuplicateLeaveRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_DuplicateLeaveRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateLeaveRsp::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicateLeaveRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicateBegin

// required uint32 scene_id = 1;
inline bool LogicToCenter_DuplicateBegin::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicateBegin::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicateBegin::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicateBegin::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateBegin::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicateBegin::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicateEnd

// required uint32 scene_id = 1;
inline bool LogicToCenter_DuplicateEnd::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicateEnd::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicateEnd::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicateEnd::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateEnd::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicateEnd::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicateDestory

// required uint32 scene_id = 1;
inline bool LogicToCenter_DuplicateDestory::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicateDestory::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicateDestory::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicateDestory::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateDestory::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicateDestory::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBuffer_2fDuplicate_2eproto__INCLUDED
