// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffer/Duplicate.proto

#ifndef PROTOBUF_ProtoBuffer_2fDuplicate_2eproto__INCLUDED
#define PROTOBUF_ProtoBuffer_2fDuplicate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBuffer/ComProtocol.pb.h"
#include "ProtoBuffer/ClientToServerCmd.pb.h"
#include "Common/ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

class Duplicate_InfoReq;
class Duplicate_InfoRsp;
class Duplicate_EnterReq;
class Duplicate_EnterRsp;
class Duplicate_ExitReq;
class Duplicate_ExitRsp;
class Duplicate_ResultRsp;
class Duplicate_AutoFightReq;
class Duplicate_AutoFightRsp;
class Duplicate_BuyCountReq;
class Duplicate_BuyCountRsp;
class Duplicate_FlopReq;
class Duplicate_FlopRsp;
class Duplicate_SweepReq;
class Duplicate_SweepRsp;
class Duplicate_UpdateRsp;
class Duplicate_ReliveReq;
class Duplicate_ReliveRsp;
class Duplicate_LeaveReq;
class Duplicate_LeaveRsp;
class Duplicate_EnterAreaReq;
class Duplicate_EnterAreaRsp;
class LogicToCenter_CreateDuplicateReq;
class CenterToLogic_CreateDuplicateRsp;
class LogicToCenter_EnterDuplicateRes;
class LogicToCenter_DuplicateEnd;
class LogicToCenter_DuplicateDestory;

// ===================================================================

class Duplicate_InfoReq : public ::google::protobuf::Message {
 public:
  Duplicate_InfoReq();
  virtual ~Duplicate_InfoReq();

  Duplicate_InfoReq(const Duplicate_InfoReq& from);

  inline Duplicate_InfoReq& operator=(const Duplicate_InfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_InfoReq& default_instance();

  void Swap(Duplicate_InfoReq* other);

  // implements Message ----------------------------------------------

  Duplicate_InfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_InfoReq& from);
  void MergeFrom(const Duplicate_InfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_InfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_InfoReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_InfoRsp : public ::google::protobuf::Message {
 public:
  Duplicate_InfoRsp();
  virtual ~Duplicate_InfoRsp();

  Duplicate_InfoRsp(const Duplicate_InfoRsp& from);

  inline Duplicate_InfoRsp& operator=(const Duplicate_InfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_InfoRsp& default_instance();

  void Swap(Duplicate_InfoRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_InfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_InfoRsp& from);
  void MergeFrom(const Duplicate_InfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // repeated .ProtoBuf.DuplicateProto info = 2;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::ProtoBuf::DuplicateProto& info(int index) const;
  inline ::ProtoBuf::DuplicateProto* mutable_info(int index);
  inline ::ProtoBuf::DuplicateProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_InfoRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto > info_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_InfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterReq : public ::google::protobuf::Message {
 public:
  Duplicate_EnterReq();
  virtual ~Duplicate_EnterReq();

  Duplicate_EnterReq(const Duplicate_EnterReq& from);

  inline Duplicate_EnterReq& operator=(const Duplicate_EnterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterReq& default_instance();

  void Swap(Duplicate_EnterReq* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterReq& from);
  void MergeFrom(const Duplicate_EnterReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 duplicate_id = 1;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 1;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterReq)
 private:
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 duplicate_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterRsp : public ::google::protobuf::Message {
 public:
  Duplicate_EnterRsp();
  virtual ~Duplicate_EnterRsp();

  Duplicate_EnterRsp(const Duplicate_EnterRsp& from);

  inline Duplicate_EnterRsp& operator=(const Duplicate_EnterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterRsp& default_instance();

  void Swap(Duplicate_EnterRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterRsp& from);
  void MergeFrom(const Duplicate_EnterRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // repeated int32 area = 3;
  inline int area_size() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 3;
  inline ::google::protobuf::int32 area(int index) const;
  inline void set_area(int index, ::google::protobuf::int32 value);
  inline void add_area(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      area() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_area();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 duplicate_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > area_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ExitReq : public ::google::protobuf::Message {
 public:
  Duplicate_ExitReq();
  virtual ~Duplicate_ExitReq();

  Duplicate_ExitReq(const Duplicate_ExitReq& from);

  inline Duplicate_ExitReq& operator=(const Duplicate_ExitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ExitReq& default_instance();

  void Swap(Duplicate_ExitReq* other);

  // implements Message ----------------------------------------------

  Duplicate_ExitReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ExitReq& from);
  void MergeFrom(const Duplicate_ExitReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ExitReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ExitReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ExitRsp : public ::google::protobuf::Message {
 public:
  Duplicate_ExitRsp();
  virtual ~Duplicate_ExitRsp();

  Duplicate_ExitRsp(const Duplicate_ExitRsp& from);

  inline Duplicate_ExitRsp& operator=(const Duplicate_ExitRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ExitRsp& default_instance();

  void Swap(Duplicate_ExitRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_ExitRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ExitRsp& from);
  void MergeFrom(const Duplicate_ExitRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ExitRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ExitRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ResultRsp : public ::google::protobuf::Message {
 public:
  Duplicate_ResultRsp();
  virtual ~Duplicate_ResultRsp();

  Duplicate_ResultRsp(const Duplicate_ResultRsp& from);

  inline Duplicate_ResultRsp& operator=(const Duplicate_ResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ResultRsp& default_instance();

  void Swap(Duplicate_ResultRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_ResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ResultRsp& from);
  void MergeFrom(const Duplicate_ResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // optional int32 star = 3;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 3;
  inline ::google::protobuf::int32 star() const;
  inline void set_star(::google::protobuf::int32 value);

  // optional int32 sec = 4;
  inline bool has_sec() const;
  inline void clear_sec();
  static const int kSecFieldNumber = 4;
  inline ::google::protobuf::int32 sec() const;
  inline void set_sec(::google::protobuf::int32 value);

  // optional int32 kill_mon = 5;
  inline bool has_kill_mon() const;
  inline void clear_kill_mon();
  static const int kKillMonFieldNumber = 5;
  inline ::google::protobuf::int32 kill_mon() const;
  inline void set_kill_mon(::google::protobuf::int32 value);

  // optional int32 die_count = 6;
  inline bool has_die_count() const;
  inline void clear_die_count();
  static const int kDieCountFieldNumber = 6;
  inline ::google::protobuf::int32 die_count() const;
  inline void set_die_count(::google::protobuf::int32 value);

  // optional int32 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 gold = 8;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 8;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 bind_gold = 9;
  inline bool has_bind_gold() const;
  inline void clear_bind_gold();
  static const int kBindGoldFieldNumber = 9;
  inline ::google::protobuf::int32 bind_gold() const;
  inline void set_bind_gold(::google::protobuf::int32 value);

  // optional int32 diamond = 10;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 10;
  inline ::google::protobuf::int32 diamond() const;
  inline void set_diamond(::google::protobuf::int32 value);

  // optional int32 bind_diamond = 11;
  inline bool has_bind_diamond() const;
  inline void clear_bind_diamond();
  static const int kBindDiamondFieldNumber = 11;
  inline ::google::protobuf::int32 bind_diamond() const;
  inline void set_bind_diamond(::google::protobuf::int32 value);

  // optional .ProtoBuf.RewardItemProto reward = 12;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 12;
  inline const ::ProtoBuf::RewardItemProto& reward() const;
  inline ::ProtoBuf::RewardItemProto* mutable_reward();
  inline ::ProtoBuf::RewardItemProto* release_reward();
  inline void set_allocated_reward(::ProtoBuf::RewardItemProto* reward);

  // optional .ProtoBuf.RewardItemProto flop = 13;
  inline bool has_flop() const;
  inline void clear_flop();
  static const int kFlopFieldNumber = 13;
  inline const ::ProtoBuf::RewardItemProto& flop() const;
  inline ::ProtoBuf::RewardItemProto* mutable_flop();
  inline ::ProtoBuf::RewardItemProto* release_flop();
  inline void set_allocated_flop(::ProtoBuf::RewardItemProto* flop);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ResultRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_sec();
  inline void clear_has_sec();
  inline void set_has_kill_mon();
  inline void clear_has_kill_mon();
  inline void set_has_die_count();
  inline void clear_has_die_count();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_bind_gold();
  inline void clear_has_bind_gold();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_bind_diamond();
  inline void clear_has_bind_diamond();
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_flop();
  inline void clear_has_flop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 duplicate_id_;
  ::google::protobuf::int32 star_;
  ::google::protobuf::int32 sec_;
  ::google::protobuf::int32 kill_mon_;
  ::google::protobuf::int32 die_count_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 bind_gold_;
  ::google::protobuf::int32 diamond_;
  ::ProtoBuf::RewardItemProto* reward_;
  ::ProtoBuf::RewardItemProto* flop_;
  ::google::protobuf::int32 bind_diamond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_AutoFightReq : public ::google::protobuf::Message {
 public:
  Duplicate_AutoFightReq();
  virtual ~Duplicate_AutoFightReq();

  Duplicate_AutoFightReq(const Duplicate_AutoFightReq& from);

  inline Duplicate_AutoFightReq& operator=(const Duplicate_AutoFightReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_AutoFightReq& default_instance();

  void Swap(Duplicate_AutoFightReq* other);

  // implements Message ----------------------------------------------

  Duplicate_AutoFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_AutoFightReq& from);
  void MergeFrom(const Duplicate_AutoFightReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_AutoFightReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_AutoFightReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_AutoFightRsp : public ::google::protobuf::Message {
 public:
  Duplicate_AutoFightRsp();
  virtual ~Duplicate_AutoFightRsp();

  Duplicate_AutoFightRsp(const Duplicate_AutoFightRsp& from);

  inline Duplicate_AutoFightRsp& operator=(const Duplicate_AutoFightRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_AutoFightRsp& default_instance();

  void Swap(Duplicate_AutoFightRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_AutoFightRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_AutoFightRsp& from);
  void MergeFrom(const Duplicate_AutoFightRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_AutoFightRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_AutoFightRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_BuyCountReq : public ::google::protobuf::Message {
 public:
  Duplicate_BuyCountReq();
  virtual ~Duplicate_BuyCountReq();

  Duplicate_BuyCountReq(const Duplicate_BuyCountReq& from);

  inline Duplicate_BuyCountReq& operator=(const Duplicate_BuyCountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_BuyCountReq& default_instance();

  void Swap(Duplicate_BuyCountReq* other);

  // implements Message ----------------------------------------------

  Duplicate_BuyCountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_BuyCountReq& from);
  void MergeFrom(const Duplicate_BuyCountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 duplicate_id = 1;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 1;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_BuyCountReq)
 private:
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 duplicate_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_BuyCountReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_BuyCountRsp : public ::google::protobuf::Message {
 public:
  Duplicate_BuyCountRsp();
  virtual ~Duplicate_BuyCountRsp();

  Duplicate_BuyCountRsp(const Duplicate_BuyCountRsp& from);

  inline Duplicate_BuyCountRsp& operator=(const Duplicate_BuyCountRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_BuyCountRsp& default_instance();

  void Swap(Duplicate_BuyCountRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_BuyCountRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_BuyCountRsp& from);
  void MergeFrom(const Duplicate_BuyCountRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_BuyCountRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_BuyCountRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_FlopReq : public ::google::protobuf::Message {
 public:
  Duplicate_FlopReq();
  virtual ~Duplicate_FlopReq();

  Duplicate_FlopReq(const Duplicate_FlopReq& from);

  inline Duplicate_FlopReq& operator=(const Duplicate_FlopReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_FlopReq& default_instance();

  void Swap(Duplicate_FlopReq* other);

  // implements Message ----------------------------------------------

  Duplicate_FlopReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_FlopReq& from);
  void MergeFrom(const Duplicate_FlopReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_FlopReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_FlopReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_FlopRsp : public ::google::protobuf::Message {
 public:
  Duplicate_FlopRsp();
  virtual ~Duplicate_FlopRsp();

  Duplicate_FlopRsp(const Duplicate_FlopRsp& from);

  inline Duplicate_FlopRsp& operator=(const Duplicate_FlopRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_FlopRsp& default_instance();

  void Swap(Duplicate_FlopRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_FlopRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_FlopRsp& from);
  void MergeFrom(const Duplicate_FlopRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_FlopRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_FlopRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_SweepReq : public ::google::protobuf::Message {
 public:
  Duplicate_SweepReq();
  virtual ~Duplicate_SweepReq();

  Duplicate_SweepReq(const Duplicate_SweepReq& from);

  inline Duplicate_SweepReq& operator=(const Duplicate_SweepReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_SweepReq& default_instance();

  void Swap(Duplicate_SweepReq* other);

  // implements Message ----------------------------------------------

  Duplicate_SweepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_SweepReq& from);
  void MergeFrom(const Duplicate_SweepReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 duplicate_id = 1;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 1;
  inline ::google::protobuf::int32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::int32 value);

  // required int32 sweep_type = 2;
  inline bool has_sweep_type() const;
  inline void clear_sweep_type();
  static const int kSweepTypeFieldNumber = 2;
  inline ::google::protobuf::int32 sweep_type() const;
  inline void set_sweep_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_SweepReq)
 private:
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_sweep_type();
  inline void clear_has_sweep_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 duplicate_id_;
  ::google::protobuf::int32 sweep_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_SweepReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_SweepRsp : public ::google::protobuf::Message {
 public:
  Duplicate_SweepRsp();
  virtual ~Duplicate_SweepRsp();

  Duplicate_SweepRsp(const Duplicate_SweepRsp& from);

  inline Duplicate_SweepRsp& operator=(const Duplicate_SweepRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_SweepRsp& default_instance();

  void Swap(Duplicate_SweepRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_SweepRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_SweepRsp& from);
  void MergeFrom(const Duplicate_SweepRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 sweep_type = 2;
  inline bool has_sweep_type() const;
  inline void clear_sweep_type();
  static const int kSweepTypeFieldNumber = 2;
  inline ::google::protobuf::int32 sweep_type() const;
  inline void set_sweep_type(::google::protobuf::int32 value);

  // repeated .ProtoBuf.RewardItemProto reward = 3;
  inline int reward_size() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::ProtoBuf::RewardItemProto& reward(int index) const;
  inline ::ProtoBuf::RewardItemProto* mutable_reward(int index);
  inline ::ProtoBuf::RewardItemProto* add_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RewardItemProto >&
      reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RewardItemProto >*
      mutable_reward();

  // optional int32 reson = 4;
  inline bool has_reson() const;
  inline void clear_reson();
  static const int kResonFieldNumber = 4;
  inline ::google::protobuf::int32 reson() const;
  inline void set_reson(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_SweepRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_sweep_type();
  inline void clear_has_sweep_type();
  inline void set_has_reson();
  inline void clear_has_reson();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 sweep_type_;
  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RewardItemProto > reward_;
  ::google::protobuf::int32 reson_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_SweepRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_UpdateRsp : public ::google::protobuf::Message {
 public:
  Duplicate_UpdateRsp();
  virtual ~Duplicate_UpdateRsp();

  Duplicate_UpdateRsp(const Duplicate_UpdateRsp& from);

  inline Duplicate_UpdateRsp& operator=(const Duplicate_UpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_UpdateRsp& default_instance();

  void Swap(Duplicate_UpdateRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_UpdateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_UpdateRsp& from);
  void MergeFrom(const Duplicate_UpdateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.DuplicateProto info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::ProtoBuf::DuplicateProto& info(int index) const;
  inline ::ProtoBuf::DuplicateProto* mutable_info(int index);
  inline ::ProtoBuf::DuplicateProto* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_UpdateRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_UpdateRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ReliveReq : public ::google::protobuf::Message {
 public:
  Duplicate_ReliveReq();
  virtual ~Duplicate_ReliveReq();

  Duplicate_ReliveReq(const Duplicate_ReliveReq& from);

  inline Duplicate_ReliveReq& operator=(const Duplicate_ReliveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ReliveReq& default_instance();

  void Swap(Duplicate_ReliveReq* other);

  // implements Message ----------------------------------------------

  Duplicate_ReliveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ReliveReq& from);
  void MergeFrom(const Duplicate_ReliveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ReliveReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ReliveReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_ReliveRsp : public ::google::protobuf::Message {
 public:
  Duplicate_ReliveRsp();
  virtual ~Duplicate_ReliveRsp();

  Duplicate_ReliveRsp(const Duplicate_ReliveRsp& from);

  inline Duplicate_ReliveRsp& operator=(const Duplicate_ReliveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_ReliveRsp& default_instance();

  void Swap(Duplicate_ReliveRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_ReliveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_ReliveRsp& from);
  void MergeFrom(const Duplicate_ReliveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_ReliveRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_ReliveRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_LeaveReq : public ::google::protobuf::Message {
 public:
  Duplicate_LeaveReq();
  virtual ~Duplicate_LeaveReq();

  Duplicate_LeaveReq(const Duplicate_LeaveReq& from);

  inline Duplicate_LeaveReq& operator=(const Duplicate_LeaveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_LeaveReq& default_instance();

  void Swap(Duplicate_LeaveReq* other);

  // implements Message ----------------------------------------------

  Duplicate_LeaveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_LeaveReq& from);
  void MergeFrom(const Duplicate_LeaveReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_LeaveReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_LeaveReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_LeaveRsp : public ::google::protobuf::Message {
 public:
  Duplicate_LeaveRsp();
  virtual ~Duplicate_LeaveRsp();

  Duplicate_LeaveRsp(const Duplicate_LeaveRsp& from);

  inline Duplicate_LeaveRsp& operator=(const Duplicate_LeaveRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_LeaveRsp& default_instance();

  void Swap(Duplicate_LeaveRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_LeaveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_LeaveRsp& from);
  void MergeFrom(const Duplicate_LeaveRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_LeaveRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_LeaveRsp* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterAreaReq : public ::google::protobuf::Message {
 public:
  Duplicate_EnterAreaReq();
  virtual ~Duplicate_EnterAreaReq();

  Duplicate_EnterAreaReq(const Duplicate_EnterAreaReq& from);

  inline Duplicate_EnterAreaReq& operator=(const Duplicate_EnterAreaReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterAreaReq& default_instance();

  void Swap(Duplicate_EnterAreaReq* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterAreaReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterAreaReq& from);
  void MergeFrom(const Duplicate_EnterAreaReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 area_id = 1;
  inline bool has_area_id() const;
  inline void clear_area_id();
  static const int kAreaIdFieldNumber = 1;
  inline ::google::protobuf::int32 area_id() const;
  inline void set_area_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterAreaReq)
 private:
  inline void set_has_area_id();
  inline void clear_has_area_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 area_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterAreaReq* default_instance_;
};
// -------------------------------------------------------------------

class Duplicate_EnterAreaRsp : public ::google::protobuf::Message {
 public:
  Duplicate_EnterAreaRsp();
  virtual ~Duplicate_EnterAreaRsp();

  Duplicate_EnterAreaRsp(const Duplicate_EnterAreaRsp& from);

  inline Duplicate_EnterAreaRsp& operator=(const Duplicate_EnterAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Duplicate_EnterAreaRsp& default_instance();

  void Swap(Duplicate_EnterAreaRsp* other);

  // implements Message ----------------------------------------------

  Duplicate_EnterAreaRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Duplicate_EnterAreaRsp& from);
  void MergeFrom(const Duplicate_EnterAreaRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.Duplicate_EnterAreaRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static Duplicate_EnterAreaRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_CreateDuplicateReq : public ::google::protobuf::Message {
 public:
  LogicToCenter_CreateDuplicateReq();
  virtual ~LogicToCenter_CreateDuplicateReq();

  LogicToCenter_CreateDuplicateReq(const LogicToCenter_CreateDuplicateReq& from);

  inline LogicToCenter_CreateDuplicateReq& operator=(const LogicToCenter_CreateDuplicateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_CreateDuplicateReq& default_instance();

  void Swap(LogicToCenter_CreateDuplicateReq* other);

  // implements Message ----------------------------------------------

  LogicToCenter_CreateDuplicateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_CreateDuplicateReq& from);
  void MergeFrom(const LogicToCenter_CreateDuplicateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 char_id = 1;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 2;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_CreateDuplicateReq)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_CreateDuplicateReq* default_instance_;
};
// -------------------------------------------------------------------

class CenterToLogic_CreateDuplicateRsp : public ::google::protobuf::Message {
 public:
  CenterToLogic_CreateDuplicateRsp();
  virtual ~CenterToLogic_CreateDuplicateRsp();

  CenterToLogic_CreateDuplicateRsp(const CenterToLogic_CreateDuplicateRsp& from);

  inline CenterToLogic_CreateDuplicateRsp& operator=(const CenterToLogic_CreateDuplicateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CenterToLogic_CreateDuplicateRsp& default_instance();

  void Swap(CenterToLogic_CreateDuplicateRsp* other);

  // implements Message ----------------------------------------------

  CenterToLogic_CreateDuplicateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CenterToLogic_CreateDuplicateRsp& from);
  void MergeFrom(const CenterToLogic_CreateDuplicateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required uint32 char_id = 2;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 3;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // optional uint32 scene_id = 4;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CenterToLogic_CreateDuplicateRsp)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static CenterToLogic_CreateDuplicateRsp* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_EnterDuplicateRes : public ::google::protobuf::Message {
 public:
  LogicToCenter_EnterDuplicateRes();
  virtual ~LogicToCenter_EnterDuplicateRes();

  LogicToCenter_EnterDuplicateRes(const LogicToCenter_EnterDuplicateRes& from);

  inline LogicToCenter_EnterDuplicateRes& operator=(const LogicToCenter_EnterDuplicateRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_EnterDuplicateRes& default_instance();

  void Swap(LogicToCenter_EnterDuplicateRes* other);

  // implements Message ----------------------------------------------

  LogicToCenter_EnterDuplicateRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_EnterDuplicateRes& from);
  void MergeFrom(const LogicToCenter_EnterDuplicateRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required uint32 char_id = 2;
  inline bool has_char_id() const;
  inline void clear_char_id();
  static const int kCharIdFieldNumber = 2;
  inline ::google::protobuf::uint32 char_id() const;
  inline void set_char_id(::google::protobuf::uint32 value);

  // required uint32 duplicate_id = 3;
  inline bool has_duplicate_id() const;
  inline void clear_duplicate_id();
  static const int kDuplicateIdFieldNumber = 3;
  inline ::google::protobuf::uint32 duplicate_id() const;
  inline void set_duplicate_id(::google::protobuf::uint32 value);

  // required uint32 scene_id = 4;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // optional uint64 start_time = 5;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 5;
  inline ::google::protobuf::uint64 start_time() const;
  inline void set_start_time(::google::protobuf::uint64 value);

  // optional uint32 limit_time = 6;
  inline bool has_limit_time() const;
  inline void clear_limit_time();
  static const int kLimitTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 limit_time() const;
  inline void set_limit_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_EnterDuplicateRes)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_duplicate_id();
  inline void clear_has_duplicate_id();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_limit_time();
  inline void clear_has_limit_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::uint32 duplicate_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint64 start_time_;
  ::google::protobuf::uint32 limit_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_EnterDuplicateRes* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicateEnd : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicateEnd();
  virtual ~LogicToCenter_DuplicateEnd();

  LogicToCenter_DuplicateEnd(const LogicToCenter_DuplicateEnd& from);

  inline LogicToCenter_DuplicateEnd& operator=(const LogicToCenter_DuplicateEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicateEnd& default_instance();

  void Swap(LogicToCenter_DuplicateEnd* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicateEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicateEnd& from);
  void MergeFrom(const LogicToCenter_DuplicateEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicateEnd)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicateEnd* default_instance_;
};
// -------------------------------------------------------------------

class LogicToCenter_DuplicateDestory : public ::google::protobuf::Message {
 public:
  LogicToCenter_DuplicateDestory();
  virtual ~LogicToCenter_DuplicateDestory();

  LogicToCenter_DuplicateDestory(const LogicToCenter_DuplicateDestory& from);

  inline LogicToCenter_DuplicateDestory& operator=(const LogicToCenter_DuplicateDestory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogicToCenter_DuplicateDestory& default_instance();

  void Swap(LogicToCenter_DuplicateDestory* other);

  // implements Message ----------------------------------------------

  LogicToCenter_DuplicateDestory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogicToCenter_DuplicateDestory& from);
  void MergeFrom(const LogicToCenter_DuplicateDestory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 scene_id() const;
  inline void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.LogicToCenter_DuplicateDestory)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 scene_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fDuplicate_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fDuplicate_2eproto();

  void InitAsDefaultInstance();
  static LogicToCenter_DuplicateDestory* default_instance_;
};
// ===================================================================


// ===================================================================

// Duplicate_InfoReq

// -------------------------------------------------------------------

// Duplicate_InfoRsp

// required int32 retcode = 1;
inline bool Duplicate_InfoRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_InfoRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_InfoRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_InfoRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_InfoRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_InfoRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// repeated .ProtoBuf.DuplicateProto info = 2;
inline int Duplicate_InfoRsp::info_size() const {
  return info_.size();
}
inline void Duplicate_InfoRsp::clear_info() {
  info_.Clear();
}
inline const ::ProtoBuf::DuplicateProto& Duplicate_InfoRsp::info(int index) const {
  return info_.Get(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_InfoRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_InfoRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
Duplicate_InfoRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
Duplicate_InfoRsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// Duplicate_EnterReq

// required int32 duplicate_id = 1;
inline bool Duplicate_EnterReq::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterReq::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterReq::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterReq::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_EnterReq::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_EnterReq::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// -------------------------------------------------------------------

// Duplicate_EnterRsp

// required int32 retcode = 1;
inline bool Duplicate_EnterRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_EnterRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 duplicate_id = 2;
inline bool Duplicate_EnterRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_EnterRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_EnterRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_EnterRsp::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_EnterRsp::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// repeated int32 area = 3;
inline int Duplicate_EnterRsp::area_size() const {
  return area_.size();
}
inline void Duplicate_EnterRsp::clear_area() {
  area_.Clear();
}
inline ::google::protobuf::int32 Duplicate_EnterRsp::area(int index) const {
  return area_.Get(index);
}
inline void Duplicate_EnterRsp::set_area(int index, ::google::protobuf::int32 value) {
  area_.Set(index, value);
}
inline void Duplicate_EnterRsp::add_area(::google::protobuf::int32 value) {
  area_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Duplicate_EnterRsp::area() const {
  return area_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Duplicate_EnterRsp::mutable_area() {
  return &area_;
}

// -------------------------------------------------------------------

// Duplicate_ExitReq

// -------------------------------------------------------------------

// Duplicate_ExitRsp

// required int32 retcode = 1;
inline bool Duplicate_ExitRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ExitRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ExitRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ExitRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_ExitRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_ExitRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Duplicate_ResultRsp

// required int32 result = 1;
inline bool Duplicate_ResultRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ResultRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ResultRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ResultRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::result() const {
  return result_;
}
inline void Duplicate_ResultRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 duplicate_id = 2;
inline bool Duplicate_ResultRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_ResultRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_ResultRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_ResultRsp::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_ResultRsp::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// optional int32 star = 3;
inline bool Duplicate_ResultRsp::has_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Duplicate_ResultRsp::set_has_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Duplicate_ResultRsp::clear_has_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Duplicate_ResultRsp::clear_star() {
  star_ = 0;
  clear_has_star();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::star() const {
  return star_;
}
inline void Duplicate_ResultRsp::set_star(::google::protobuf::int32 value) {
  set_has_star();
  star_ = value;
}

// optional int32 sec = 4;
inline bool Duplicate_ResultRsp::has_sec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Duplicate_ResultRsp::set_has_sec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Duplicate_ResultRsp::clear_has_sec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Duplicate_ResultRsp::clear_sec() {
  sec_ = 0;
  clear_has_sec();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::sec() const {
  return sec_;
}
inline void Duplicate_ResultRsp::set_sec(::google::protobuf::int32 value) {
  set_has_sec();
  sec_ = value;
}

// optional int32 kill_mon = 5;
inline bool Duplicate_ResultRsp::has_kill_mon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Duplicate_ResultRsp::set_has_kill_mon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Duplicate_ResultRsp::clear_has_kill_mon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Duplicate_ResultRsp::clear_kill_mon() {
  kill_mon_ = 0;
  clear_has_kill_mon();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::kill_mon() const {
  return kill_mon_;
}
inline void Duplicate_ResultRsp::set_kill_mon(::google::protobuf::int32 value) {
  set_has_kill_mon();
  kill_mon_ = value;
}

// optional int32 die_count = 6;
inline bool Duplicate_ResultRsp::has_die_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Duplicate_ResultRsp::set_has_die_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Duplicate_ResultRsp::clear_has_die_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Duplicate_ResultRsp::clear_die_count() {
  die_count_ = 0;
  clear_has_die_count();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::die_count() const {
  return die_count_;
}
inline void Duplicate_ResultRsp::set_die_count(::google::protobuf::int32 value) {
  set_has_die_count();
  die_count_ = value;
}

// optional int32 exp = 7;
inline bool Duplicate_ResultRsp::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Duplicate_ResultRsp::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Duplicate_ResultRsp::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Duplicate_ResultRsp::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::exp() const {
  return exp_;
}
inline void Duplicate_ResultRsp::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 gold = 8;
inline bool Duplicate_ResultRsp::has_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Duplicate_ResultRsp::set_has_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Duplicate_ResultRsp::clear_has_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Duplicate_ResultRsp::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::gold() const {
  return gold_;
}
inline void Duplicate_ResultRsp::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 bind_gold = 9;
inline bool Duplicate_ResultRsp::has_bind_gold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Duplicate_ResultRsp::set_has_bind_gold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Duplicate_ResultRsp::clear_has_bind_gold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Duplicate_ResultRsp::clear_bind_gold() {
  bind_gold_ = 0;
  clear_has_bind_gold();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::bind_gold() const {
  return bind_gold_;
}
inline void Duplicate_ResultRsp::set_bind_gold(::google::protobuf::int32 value) {
  set_has_bind_gold();
  bind_gold_ = value;
}

// optional int32 diamond = 10;
inline bool Duplicate_ResultRsp::has_diamond() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Duplicate_ResultRsp::set_has_diamond() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Duplicate_ResultRsp::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Duplicate_ResultRsp::clear_diamond() {
  diamond_ = 0;
  clear_has_diamond();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::diamond() const {
  return diamond_;
}
inline void Duplicate_ResultRsp::set_diamond(::google::protobuf::int32 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional int32 bind_diamond = 11;
inline bool Duplicate_ResultRsp::has_bind_diamond() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Duplicate_ResultRsp::set_has_bind_diamond() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Duplicate_ResultRsp::clear_has_bind_diamond() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Duplicate_ResultRsp::clear_bind_diamond() {
  bind_diamond_ = 0;
  clear_has_bind_diamond();
}
inline ::google::protobuf::int32 Duplicate_ResultRsp::bind_diamond() const {
  return bind_diamond_;
}
inline void Duplicate_ResultRsp::set_bind_diamond(::google::protobuf::int32 value) {
  set_has_bind_diamond();
  bind_diamond_ = value;
}

// optional .ProtoBuf.RewardItemProto reward = 12;
inline bool Duplicate_ResultRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Duplicate_ResultRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Duplicate_ResultRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Duplicate_ResultRsp::clear_reward() {
  if (reward_ != NULL) reward_->::ProtoBuf::RewardItemProto::Clear();
  clear_has_reward();
}
inline const ::ProtoBuf::RewardItemProto& Duplicate_ResultRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::ProtoBuf::RewardItemProto;
  return reward_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::release_reward() {
  clear_has_reward();
  ::ProtoBuf::RewardItemProto* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void Duplicate_ResultRsp::set_allocated_reward(::ProtoBuf::RewardItemProto* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// optional .ProtoBuf.RewardItemProto flop = 13;
inline bool Duplicate_ResultRsp::has_flop() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Duplicate_ResultRsp::set_has_flop() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Duplicate_ResultRsp::clear_has_flop() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Duplicate_ResultRsp::clear_flop() {
  if (flop_ != NULL) flop_->::ProtoBuf::RewardItemProto::Clear();
  clear_has_flop();
}
inline const ::ProtoBuf::RewardItemProto& Duplicate_ResultRsp::flop() const {
  return flop_ != NULL ? *flop_ : *default_instance_->flop_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::mutable_flop() {
  set_has_flop();
  if (flop_ == NULL) flop_ = new ::ProtoBuf::RewardItemProto;
  return flop_;
}
inline ::ProtoBuf::RewardItemProto* Duplicate_ResultRsp::release_flop() {
  clear_has_flop();
  ::ProtoBuf::RewardItemProto* temp = flop_;
  flop_ = NULL;
  return temp;
}
inline void Duplicate_ResultRsp::set_allocated_flop(::ProtoBuf::RewardItemProto* flop) {
  delete flop_;
  flop_ = flop;
  if (flop) {
    set_has_flop();
  } else {
    clear_has_flop();
  }
}

// -------------------------------------------------------------------

// Duplicate_AutoFightReq

// -------------------------------------------------------------------

// Duplicate_AutoFightRsp

// required int32 result = 1;
inline bool Duplicate_AutoFightRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_AutoFightRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_AutoFightRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_AutoFightRsp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 Duplicate_AutoFightRsp::result() const {
  return result_;
}
inline void Duplicate_AutoFightRsp::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// Duplicate_BuyCountReq

// required int32 duplicate_id = 1;
inline bool Duplicate_BuyCountReq::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_BuyCountReq::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_BuyCountReq::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_BuyCountReq::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_BuyCountReq::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_BuyCountReq::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// -------------------------------------------------------------------

// Duplicate_BuyCountRsp

// required int32 retcode = 1;
inline bool Duplicate_BuyCountRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_BuyCountRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_BuyCountRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_BuyCountRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_BuyCountRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_BuyCountRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Duplicate_FlopReq

// -------------------------------------------------------------------

// Duplicate_FlopRsp

// required int32 retcode = 1;
inline bool Duplicate_FlopRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_FlopRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_FlopRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_FlopRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_FlopRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_FlopRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 index = 2;
inline bool Duplicate_FlopRsp::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_FlopRsp::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_FlopRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_FlopRsp::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Duplicate_FlopRsp::index() const {
  return index_;
}
inline void Duplicate_FlopRsp::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// Duplicate_SweepReq

// required int32 duplicate_id = 1;
inline bool Duplicate_SweepReq::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_SweepReq::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_SweepReq::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_SweepReq::clear_duplicate_id() {
  duplicate_id_ = 0;
  clear_has_duplicate_id();
}
inline ::google::protobuf::int32 Duplicate_SweepReq::duplicate_id() const {
  return duplicate_id_;
}
inline void Duplicate_SweepReq::set_duplicate_id(::google::protobuf::int32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required int32 sweep_type = 2;
inline bool Duplicate_SweepReq::has_sweep_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_SweepReq::set_has_sweep_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_SweepReq::clear_has_sweep_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_SweepReq::clear_sweep_type() {
  sweep_type_ = 0;
  clear_has_sweep_type();
}
inline ::google::protobuf::int32 Duplicate_SweepReq::sweep_type() const {
  return sweep_type_;
}
inline void Duplicate_SweepReq::set_sweep_type(::google::protobuf::int32 value) {
  set_has_sweep_type();
  sweep_type_ = value;
}

// -------------------------------------------------------------------

// Duplicate_SweepRsp

// required int32 retcode = 1;
inline bool Duplicate_SweepRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_SweepRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_SweepRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_SweepRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_SweepRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_SweepRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 sweep_type = 2;
inline bool Duplicate_SweepRsp::has_sweep_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_SweepRsp::set_has_sweep_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_SweepRsp::clear_has_sweep_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_SweepRsp::clear_sweep_type() {
  sweep_type_ = 0;
  clear_has_sweep_type();
}
inline ::google::protobuf::int32 Duplicate_SweepRsp::sweep_type() const {
  return sweep_type_;
}
inline void Duplicate_SweepRsp::set_sweep_type(::google::protobuf::int32 value) {
  set_has_sweep_type();
  sweep_type_ = value;
}

// repeated .ProtoBuf.RewardItemProto reward = 3;
inline int Duplicate_SweepRsp::reward_size() const {
  return reward_.size();
}
inline void Duplicate_SweepRsp::clear_reward() {
  reward_.Clear();
}
inline const ::ProtoBuf::RewardItemProto& Duplicate_SweepRsp::reward(int index) const {
  return reward_.Get(index);
}
inline ::ProtoBuf::RewardItemProto* Duplicate_SweepRsp::mutable_reward(int index) {
  return reward_.Mutable(index);
}
inline ::ProtoBuf::RewardItemProto* Duplicate_SweepRsp::add_reward() {
  return reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RewardItemProto >&
Duplicate_SweepRsp::reward() const {
  return reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::RewardItemProto >*
Duplicate_SweepRsp::mutable_reward() {
  return &reward_;
}

// optional int32 reson = 4;
inline bool Duplicate_SweepRsp::has_reson() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Duplicate_SweepRsp::set_has_reson() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Duplicate_SweepRsp::clear_has_reson() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Duplicate_SweepRsp::clear_reson() {
  reson_ = 0;
  clear_has_reson();
}
inline ::google::protobuf::int32 Duplicate_SweepRsp::reson() const {
  return reson_;
}
inline void Duplicate_SweepRsp::set_reson(::google::protobuf::int32 value) {
  set_has_reson();
  reson_ = value;
}

// -------------------------------------------------------------------

// Duplicate_UpdateRsp

// repeated .ProtoBuf.DuplicateProto info = 1;
inline int Duplicate_UpdateRsp::info_size() const {
  return info_.size();
}
inline void Duplicate_UpdateRsp::clear_info() {
  info_.Clear();
}
inline const ::ProtoBuf::DuplicateProto& Duplicate_UpdateRsp::info(int index) const {
  return info_.Get(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_UpdateRsp::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::ProtoBuf::DuplicateProto* Duplicate_UpdateRsp::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >&
Duplicate_UpdateRsp::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::DuplicateProto >*
Duplicate_UpdateRsp::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// Duplicate_ReliveReq

// required int32 type = 1;
inline bool Duplicate_ReliveReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ReliveReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ReliveReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ReliveReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Duplicate_ReliveReq::type() const {
  return type_;
}
inline void Duplicate_ReliveReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Duplicate_ReliveRsp

// required int32 retcode = 1;
inline bool Duplicate_ReliveRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_ReliveRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_ReliveRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_ReliveRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_ReliveRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_ReliveRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional int32 type = 2;
inline bool Duplicate_ReliveRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Duplicate_ReliveRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Duplicate_ReliveRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Duplicate_ReliveRsp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Duplicate_ReliveRsp::type() const {
  return type_;
}
inline void Duplicate_ReliveRsp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Duplicate_LeaveReq

// -------------------------------------------------------------------

// Duplicate_LeaveRsp

// required int32 retcode = 1;
inline bool Duplicate_LeaveRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_LeaveRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_LeaveRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_LeaveRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_LeaveRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_LeaveRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// Duplicate_EnterAreaReq

// required int32 area_id = 1;
inline bool Duplicate_EnterAreaReq::has_area_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterAreaReq::set_has_area_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterAreaReq::clear_has_area_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterAreaReq::clear_area_id() {
  area_id_ = 0;
  clear_has_area_id();
}
inline ::google::protobuf::int32 Duplicate_EnterAreaReq::area_id() const {
  return area_id_;
}
inline void Duplicate_EnterAreaReq::set_area_id(::google::protobuf::int32 value) {
  set_has_area_id();
  area_id_ = value;
}

// -------------------------------------------------------------------

// Duplicate_EnterAreaRsp

// required int32 retcode = 1;
inline bool Duplicate_EnterAreaRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Duplicate_EnterAreaRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Duplicate_EnterAreaRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Duplicate_EnterAreaRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 Duplicate_EnterAreaRsp::retcode() const {
  return retcode_;
}
inline void Duplicate_EnterAreaRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_CreateDuplicateReq

// required uint32 char_id = 1;
inline bool LogicToCenter_CreateDuplicateReq::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_CreateDuplicateReq::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_CreateDuplicateReq::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_CreateDuplicateReq::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 LogicToCenter_CreateDuplicateReq::char_id() const {
  return char_id_;
}
inline void LogicToCenter_CreateDuplicateReq::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 2;
inline bool LogicToCenter_CreateDuplicateReq::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_CreateDuplicateReq::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_CreateDuplicateReq::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_CreateDuplicateReq::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 LogicToCenter_CreateDuplicateReq::duplicate_id() const {
  return duplicate_id_;
}
inline void LogicToCenter_CreateDuplicateReq::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// -------------------------------------------------------------------

// CenterToLogic_CreateDuplicateRsp

// required int32 retcode = 1;
inline bool CenterToLogic_CreateDuplicateRsp::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CenterToLogic_CreateDuplicateRsp::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CenterToLogic_CreateDuplicateRsp::retcode() const {
  return retcode_;
}
inline void CenterToLogic_CreateDuplicateRsp::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required uint32 char_id = 2;
inline bool CenterToLogic_CreateDuplicateRsp::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CenterToLogic_CreateDuplicateRsp::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 CenterToLogic_CreateDuplicateRsp::char_id() const {
  return char_id_;
}
inline void CenterToLogic_CreateDuplicateRsp::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 3;
inline bool CenterToLogic_CreateDuplicateRsp::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CenterToLogic_CreateDuplicateRsp::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 CenterToLogic_CreateDuplicateRsp::duplicate_id() const {
  return duplicate_id_;
}
inline void CenterToLogic_CreateDuplicateRsp::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// optional uint32 scene_id = 4;
inline bool CenterToLogic_CreateDuplicateRsp::has_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CenterToLogic_CreateDuplicateRsp::set_has_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CenterToLogic_CreateDuplicateRsp::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 CenterToLogic_CreateDuplicateRsp::scene_id() const {
  return scene_id_;
}
inline void CenterToLogic_CreateDuplicateRsp::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_EnterDuplicateRes

// required int32 retcode = 1;
inline bool LogicToCenter_EnterDuplicateRes::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_EnterDuplicateRes::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 LogicToCenter_EnterDuplicateRes::retcode() const {
  return retcode_;
}
inline void LogicToCenter_EnterDuplicateRes::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required uint32 char_id = 2;
inline bool LogicToCenter_EnterDuplicateRes::has_char_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogicToCenter_EnterDuplicateRes::set_has_char_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_char_id() {
  char_id_ = 0u;
  clear_has_char_id();
}
inline ::google::protobuf::uint32 LogicToCenter_EnterDuplicateRes::char_id() const {
  return char_id_;
}
inline void LogicToCenter_EnterDuplicateRes::set_char_id(::google::protobuf::uint32 value) {
  set_has_char_id();
  char_id_ = value;
}

// required uint32 duplicate_id = 3;
inline bool LogicToCenter_EnterDuplicateRes::has_duplicate_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogicToCenter_EnterDuplicateRes::set_has_duplicate_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_has_duplicate_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_duplicate_id() {
  duplicate_id_ = 0u;
  clear_has_duplicate_id();
}
inline ::google::protobuf::uint32 LogicToCenter_EnterDuplicateRes::duplicate_id() const {
  return duplicate_id_;
}
inline void LogicToCenter_EnterDuplicateRes::set_duplicate_id(::google::protobuf::uint32 value) {
  set_has_duplicate_id();
  duplicate_id_ = value;
}

// required uint32 scene_id = 4;
inline bool LogicToCenter_EnterDuplicateRes::has_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogicToCenter_EnterDuplicateRes::set_has_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_EnterDuplicateRes::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_EnterDuplicateRes::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional uint64 start_time = 5;
inline bool LogicToCenter_EnterDuplicateRes::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogicToCenter_EnterDuplicateRes::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 LogicToCenter_EnterDuplicateRes::start_time() const {
  return start_time_;
}
inline void LogicToCenter_EnterDuplicateRes::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional uint32 limit_time = 6;
inline bool LogicToCenter_EnterDuplicateRes::has_limit_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LogicToCenter_EnterDuplicateRes::set_has_limit_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_has_limit_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LogicToCenter_EnterDuplicateRes::clear_limit_time() {
  limit_time_ = 0u;
  clear_has_limit_time();
}
inline ::google::protobuf::uint32 LogicToCenter_EnterDuplicateRes::limit_time() const {
  return limit_time_;
}
inline void LogicToCenter_EnterDuplicateRes::set_limit_time(::google::protobuf::uint32 value) {
  set_has_limit_time();
  limit_time_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicateEnd

// required uint32 scene_id = 1;
inline bool LogicToCenter_DuplicateEnd::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicateEnd::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicateEnd::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicateEnd::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateEnd::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicateEnd::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// LogicToCenter_DuplicateDestory

// required uint32 scene_id = 1;
inline bool LogicToCenter_DuplicateDestory::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogicToCenter_DuplicateDestory::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogicToCenter_DuplicateDestory::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogicToCenter_DuplicateDestory::clear_scene_id() {
  scene_id_ = 0u;
  clear_has_scene_id();
}
inline ::google::protobuf::uint32 LogicToCenter_DuplicateDestory::scene_id() const {
  return scene_id_;
}
inline void LogicToCenter_DuplicateDestory::set_scene_id(::google::protobuf::uint32 value) {
  set_has_scene_id();
  scene_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBuffer_2fDuplicate_2eproto__INCLUDED
