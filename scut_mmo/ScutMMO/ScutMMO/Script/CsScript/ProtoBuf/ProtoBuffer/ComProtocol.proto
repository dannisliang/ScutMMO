// 定义公用message，注意与ComDefine.proto区别

import "Common/ComDefine.proto";
package ProtoBuf;

// 空消息
message EmptyMessage 
{}

// 注册服务器，连接断开的时候自动注销
message RegisterServiceRequest 
{
    required uint32 service_type    = 1;
    required uint32 group_id        = 2;
    required uint32 service_id      = 3;
    required string listen_ip       = 4;
    required uint32 listen_port     = 5;    
}

message ValueCurrency
{
    required int32 coinType = 1;
    required int32 coinValue = 2;
}

// 角色PVP信息
message CharacterDBPvpData
{
	optional uint32 pk_mode = 1; //PK模式
	optional uint32 pk_killing_value = 2; //PK杀谬值
}

// 角色基础数据
message CharacterDBBaseInfo
{
    required string channelId       = 1;    // 渠道ID
    required string userId          = 2;    // 渠道用户ID
    required string userName        = 3;    // 渠道用户名

    required uint64 createTime      = 4;    // 创建时间（UTC时间）
    required uint64 lastSaveTime    = 5;	// 最后一次存盘的时间（UTC时间）
    required uint64 onlineTime      = 6;    // 总在线游戏时间(秒)
    required uint64 loginTime       = 7;    // 上一次登陆的时间（UTC时间）
    required uint64 logoutTime      = 8;    // 上一次下线时间（UTC时间）
    repeated ValueCurrency currency = 9;    // 所有类型货币

    required string name            = 10;   // 名字
    required uint32 sex             = 11;   // 性别
    required uint32 prof            = 12;   // 职业
    required uint32 level           = 13;   // 等级
    required int64  exp             = 14;   // 经验
    required uint32 hp              = 15;   // 生命
    required uint32 fightPower      = 16;   // 战斗力
    required uint32 enter_scene_id  = 17;   // 上线场景Id
    required float enterPosX        = 18;    // 上线位置X
    required float enterPosY        = 19;    // 上线位置Y
    required float enterPosZ        = 20;    // 上线位置Y
	required uint32 race            = 21;   // 种族
	required uint32 enter_map_id    = 22;	// 上线的地图模板ID
	optional uint64 lastReviveTime  = 23;   //上次复活时间戳
	optional uint32 curState	    = 24;    //玩家当前状态

	optional uint32 lastSceneId		= 25;    //玩家进入上个地图的场景Id
	optional uint32 lastMapId		= 26;    //玩家进入上个地图Id
	optional float  lastPosX		= 27;    //玩家上个地图的x坐标
	optional float  lastPosY		= 28;    //玩家上个地图的y坐标
	optional float  lastPosZ		= 29;    //玩家上个地图的z坐标

	optional uint32 gold			= 30;	 //金币
	optional uint32 bindgold		= 31;	 //绑定金币
	optional uint32 diamond			= 32;	 //钻石
	optional uint32 binddiamond		= 33;	 //绑定钻石

	optional uint32 power           = 34;    //力量
	optional uint32 intelligence    = 35;    //智力
	optional uint32 agility			= 36;    //敏捷
	optional uint32 physique		= 37;    //体质
	optional uint32 endurance		= 38;    //耐力
	optional uint32 precision		= 39;    //精准
	optional uint32 mp				= 40;    //魔法值
	optional uint32 vip				= 41; 	 //vip等级
	optional uint32 camp			= 42;  	 //阵营
	optional uint32 camplev			= 43;  	 //阵营等级
	optional uint32 married			= 44; 	 //婚姻(已婚、未婚)
	optional uint32 campkilling		= 45;  	 //本阵营杀戮值
	optional uint32 hostilekilling  = 46;    //敌对阵营杀戮值
	optional uint32 stamina			= 47; 	 //体力
	optional uint32 attr_point		= 48;    //属性点
	optional uint32 pointPower		= 49;    //属性点加成力量
	optional uint32 pointIntelligence = 50;  //属性点加成智力
	optional uint32 pointAgility	= 51;    //属性点加成敏捷
	optional uint32 pointPhysique	= 52;    //属性点加成体质
	optional uint32 pointEndurance	= 53;    //属性点加成耐力
	optional uint32 pointPrecision	= 54;    //属性点加成精准
	optional uint32 autoPower		= 55;    //自动分配属性点加成力量
	optional uint32 autoIntelligence= 56;	 //自动分配属性点加成智力
	optional uint32 autoAgility		= 57;    //自动分配属性点加成敏捷
	optional uint32 autoPhysique	= 58;    //自动分配属性点加成体质
	optional uint32 autoEndurance	= 59;    //自动分配属性点加成耐力
	optional uint32 autoPrecision	= 60;    //自动分配属性点加成精准
	optional uint32 autoPoint       = 61;    //是否自动分配属性点

	optional uint32 duplicate_id    = 62;	 //副本ID
	optional int32  official		= 63;	 //官职
	optional int32  knight			= 64;	 //爵位

	optional CharacterDBPvpData pvpData = 65; //pvp数据
}

// =======================================角色任务数据===============================
//任务数据总和
message CharacterDBTaskData
{
	repeated CharacterDBEffPreCondition effPreCondition = 1; //前置任务列表
	repeated CharacterDBSubmittedMission submitMission = 2; //提交过的任务列表
	repeated CharacterDBWithoutPreComplete withoutPreComplete = 3; //已经完成的没有前置任务列表
	repeated CharacterDBMissionTrack missionTrack	= 4; //当前任务列表
	repeated uint32 assignList = 5;							//系统分派的任务ID
	optional CharacterDBCampMissionInfo campMissionInfo = 6; //阵营任务信息
	optional CharacterDBLoopMissionInfo loopMissionInfo = 7;//环任务信息
}

//前置任务列表
message CharacterDBEffPreCondition
{
	optional uint32 missionId		= 1; //任务id
	optional uint32 time			= 2; //任务的有效时间
}

//提交过的任务列表
message CharacterDBSubmittedMission
{
	optional uint32 missionId		= 1; //任务id
	optional uint32 times			= 2; //完成次数
}

//已经完成的没有前置任务列表
message CharacterDBWithoutPreComplete
{
	optional uint32 missionId		= 1; //任务id
	optional uint32 finishYearDay	= 2; //日期，时间格式YEAR-YDAY
	optional uint32 count			= 3; //当天完成次数
	optional bool acceptable		= 4; //是否可接
}

//任务步骤信息
message CharacterDBMissionItemInfo
{
	optional uint32 type			= 1; //物品类型
	optional uint64 id				= 2; //目标id
	optional uint32 currentValue	= 3; //当前值
	optional uint32 finalValue		= 4; //完成值
	optional bool completedFlag		= 5; //是否完成标记
	optional uint32 parma1			= 6; //可选参数1
	optional uint32 parma2			= 7; //可选参数2
	optional uint32 parma3			= 8; //可选参数3
}

//玩家单个任务数据
message CharacterDBMissionTrack
{
	optional uint32 missionId			 = 1; //任务ID
	optional uint32 status				 = 2; //任务当前状态
	optional uint32 version				 = 3; //任务版本号
	optional uint32 acceptMissionTime	 = 4; //接收任务时间
	optional uint32 submittedMissionTime = 5; //提交任务时间
	optional CharacterDBMissionItemInfo itemInfo = 6; //任务的步骤信息数据
}

//单个阵营任务数据
message CharacterDBSignleCampMission
{
	optional uint32 missionId			= 1;	//任务ID
	optional uint32 quality				= 2;	//任务品质
	optional bool	isAccept			= 3;	//是否接取了
}

//阵营任务数据
message CharacterDBCampMissionInfo
{
	repeated CharacterDBSignleCampMission campSingleMission = 1;
	optional uint32 campRefreshTime = 2; //刷新时间
	optional uint32 campTimes = 3; //当天完成次数
	optional uint32 boxProgress = 4; //宝箱进度
	optional bool campOpen = 5;  //阵营任务是否开启
}

//环任务数据
message CharacterDBLoopMissionInfo
{
	optional uint32 loopCount = 1;//当前环数
	optional uint32 loopFinishCount = 2;////当天已完成循环任务次数，提交任务+1
	optional bool loopOpen = 3;////开启标记
	optional uint32 loopMissionId = 4;//当前循环任务id 
}

//===================================================================================

// 单个技能数据
message CharacterDBSkillItem
{
    required int32 skillID			= 1;
    required int32 skillLevel		= 2;
	optional uint64 cd              = 3;
}

// 角色技能数据
message CharacterDBSkillData
{
    repeated CharacterDBSkillItem	skillList	= 1;    // 技能列表
    repeated uint32					skillAttrs	= 2;    // 技能(激活 使用)属性
}

// 扩展角色详细属性信息
message CharacterDBAttrDetailInfo
{
	optional uint32 max_hp				= 1;	//最大生命
	optional uint32 intelligence		= 2;    //智力
	optional uint32 agility				= 3;    //敏捷
	optional uint32 physique			= 4;    //体质
	optional uint32 endurance			= 5;    //耐力
	optional uint32 precision			= 6;    //精准
	optional uint32 max_mp				= 7;    //最大魔法值
	optional uint32 ap					= 8;	//物理攻击
	optional uint32 mat					= 9;	//魔法攻击
	optional uint32 dp					= 10;	//物理防御
	optional uint32 mdp					= 11;	//魔法防御
	optional uint32 hit					= 12;	//命中
	optional uint32 dodge				= 13;	//闪避
	optional uint32 crit				= 14;	//暴击
	optional uint32 toughness			= 15;	//韧性
	optional uint32 crit_rate			= 16;	//暴击倍率
	optional uint32 crit_extradamage	= 17;	//暴击额外伤害
	optional uint32 crit_reducedamage	= 18;	//暴击额外免伤
	optional uint32 extra_damage		= 19;	//额外伤害
	optional uint32 reduce_damage		= 20;	//额外免伤
	optional uint32 apdamagerate		= 21;	//物理伤害率
	optional uint32 apreducedamage		= 22;	//物理免伤率
	optional uint32 freezeres			= 23;	//冰冻抗性
	optional uint32 burners				= 24;	//灼烧抗性
	optional uint32 weakres				= 25;	//虚弱抗性
	optional uint32 fastingres			= 26;	//禁食抗性
	optional uint32 funkres				= 27;	//恐惧抗性
}

// 角色扩展信息，预留做扩充
message CharacterDBExtendData
{
	optional CharacterDBAttrDetailInfo attr_detail = 1;	//详细属性信息
}

// 角色存盘完整数据，每项对应charInfo表的一个键
message CharacterDBInfo
{
    required uint32                 charId		= 1;	// character id
	required uint32                 groupId     = 2;    // groupId
    required CharacterDBBaseInfo    baseData	= 3;    // 基础信息
    optional CharacterDBPackageData itemData	= 4;    // 物品信息，暂时不知物品结构，先以bytes占位 @temp by JinnMa
    optional CharacterDBTaskData	taskData	= 5;    // 任务信息
    optional CharacterDBSkillData   skillData	= 6;    // 技能信息
    optional CharacterDBExtendData  extendData	= 7;    // 扩展信息
	optional CharacterDBEquipData	equipData   = 8;	// 装备信息
	optional CharacterDBDuplicateData duplicateData = 9;// 副本数据
	optional CharacterAchievementDBData achievementData = 10; //成就数据
	optional CharacterDeputyDBData	deputyData  = 11;	// 副业数据
}

// 角色的简单数据，CharacterDBInfo的子集
message CharacterDBSimpleInfo
{
	required uint32 charId 			= 1;
    required string name            = 2;   	// 名字
    required uint32 sex             = 3;   	// 性别
    required uint32 prof            = 4;   	// 职业
    required uint32 level           = 5;   	// 等级
	required uint32 race            = 6;   	// 种族
	optional int64  exp             = 7;   	// 经验
    optional uint32 hp              = 8;   	// 生命
	optional uint32 fightPower      = 9;   	// 战斗力
	optional uint32 weapon_id		= 10;	// 武器ID
	optional uint32 clothes_id		= 11;	// 衣服ID
	optional uint32 wing_id			= 12;	// 翅膀ID
	repeated uint32 fashion_id      = 13;	// 时装
	optional int32  camp			= 14;	// 阵营
	optional int32  official		= 15;	// 官职
	optional int32  knight			= 16;	// 爵位

};


//物品结构
message ItemProtoInfo
{
	required uint32 item_id  = 1;		//物品ID(配置ID)
	required int32  item_num = 2;		//物品数量
	optional int32  bind     = 3;		//绑定状态 0 非绑定，1 绑定
	optional int32  strenlev = 4;		//强化等级
	optional int32  refinelev= 5;		//精炼等级
	optional int32  holy	 = 6;		//神圣石
	repeated Attr   refineex = 7;		//精炼额外属性
	repeated Attr   baseattr = 8;		//装备基础属性
	repeated uint32 inlay    = 9;		//镶嵌的宝石
	optional int32  index	 = 10;		//索引(穿戴装备标示穿戴位置,背包中表示格子索引)
	optional int32  fight    = 11;		//战力值
	optional string maker	 = 12;		//打造者名字
}

//时装结构
message FashionProtoInfo
{
	required uint32 fashion_id  = 1;		//时装ID(配置ID)
	optional uint64 left_sec = 2;			//剩余时间 
}

//背包数据
message CharacterDBPackageData
{
	required int32 expand_num			= 1;	//扩充格子数
	repeated ItemProtoInfo	equip		= 2;	//装备栏数据
	repeated ItemProtoInfo	daily		= 3;	//日常栏数据
	repeated ItemProtoInfo	material	= 4;	//材料栏数据
	repeated ItemProtoInfo	task		= 5;	//任务栏数据
}

//穿戴装备数据
message CharacterDBEquipData
{
	repeated ItemProtoInfo equip		= 1;	//装备数据
}

//时装数据
message CharacterDBFashionData
{
	repeated FashionProtoInfo data = 1;		//时装数据
	repeated FashionProtoInfo dress = 2;	//穿戴的时装
	optional int32  open = 3;				//是否开启时装显示
}


//副本信息
message DuplicateSingleProto
{
	required int32 dupliate_id = 1;		//副本ID
	optional int32 star = 2;			//星级
	optional int32 reward_count = 3;	//已获得奖励次数
	optional uint64 last_fresh = 4;		//上次刷新获得奖励次数时间
	optional int32 buy_count = 5;		//购买获得奖励次数
}
//副本数据
message CharacterDBDuplicateData
{
	repeated DuplicateSingleProto duplicate = 1;	//副本数据
}

//邮件数据
message CharacterDBMailData
{
	repeated MailInfo mailList = 1; //邮件数据
}

//阵营排名信息
message SingleCampRankDBInfo
{
	optional uint32 charid	= 1;	//charid
	optional int32 level	= 2;	//等级
	optional int32 fight	= 3;	//战力
	optional int32 official = 4;	//官阶
	optional int32 knight	= 5;	//爵位
}

//阵营排名数据
message CampRankDBData
{
	repeated SingleCampRankDBInfo rank = 1;	//排名
}

//阵营数据
message SingleCampDBData
{
	optional int32  camp_id						= 1;	//阵营ID
	optional uint32 leader_id					= 2;	//阵营首领ID
	optional string notice						= 3;	//公告
	optional uint64 last_notice					= 4;	//上次发布公告时间
	optional uint64 last_fresh					= 5;	//上次刷新排名时间
	optional uint32 active_num					= 6;	//前一日活跃成员数量
	optional uint64 total_fight					= 7;	//前一日总阵营战斗力
	optional CampRankDBData lev_rank			= 8;	//等级排名
	optional CampRankDBData fight_rank			= 9;	//战力排名
	optional CampRankDBData official_rank		= 10;	//官职排名
	optional CampRankDBData knight_rank			= 11;	//爵位排名
}

//所有阵营数据
message AllCampDBData
{
	repeated SingleCampDBData all_camp_data = 1;	//所有的阵营数据
}


//全局数据(以后有全局数据加在这里)
message GlobalDBData
{
	required int32 type_id		= 1;	//类型ID，根据类型区分下面哪个字段是有效的
	optional bytes global_data	= 2;	//全局数据		
}

//玩家阵营数据（暂时定义这么多,后面再定义）
message CharacterCampDBData
{
	optional uint32 contribute			= 1;	//军功
	optional uint32 total_contribute	= 2;	//累计军功
	optional uint32 prestige			= 3;	//声望
	optional uint64 last_join			= 4;	//上次加入阵营时间
	optional uint32 charid				= 5;	//角色ID
}

//商品结构
message MallInfo
{
	optional uint32 mall_id						= 1;			//商品id(与配置表id对应)
	optional uint32 buy_amount					= 2;			//可购买数量(对于限量购买类型商品有效)
	optional uint32 goods_amount				= 3;			//供货量(对于限量销售类商品有效)
	optional uint64 goods_time					= 4;			//供货刷新剩余时间(对于限量销售类商品有效)
	optional uint64 buy_time					= 5;			//购买刷新剩余时间(对于限量销售类商品有效)
	optional uint64 open_time					= 6;			//开放时间
	optional uint64 open_cool_time				= 7;			//开放冷却时间
}

//所有商城数据
message AllMallDBData
{
	optional uint64 last_logout		= 1;	//退出时间
	repeated MallInfo all_mall_data = 2;
}

//单个玩家商城数据
message SingleCharacterMallDB
{
	optional uint32 charid		= 1;			//角色ID
	optional AllMallDBData info = 2;			//商城数据
}

//单个成就的数据
message SingleAchievementDBData
{
	optional uint32 id = 1;				//成就ID
	optional uint32 status = 2;			//当前状态1,代表未完成，2代表完成未领取，3代表已领取
	optional uint32 completeCount = 3;	//完成数
}

//每类成就分组信息
message GroupAchievementDBData
{
	optional uint32 sortType = 1;								//成就分类信息，根据配置项来确定
	repeated SingleAchievementDBData achievementInfoList = 2;	//成就列表
	optional uint32 achievementReward = 3;						//成就宝箱领取状态 每个比特位表示一项
}

//成就数据
message CharacterAchievementDBData
{
	repeated GroupAchievementDBData groupAchievementData = 1;
}

//单个采集副业数据
message SingleDeputyDBData
{
	required int32 type = 1;		//副业类型 (收集副业类型 1-草药，2-矿石，3-钓鱼，4-剥皮   制造副业类型 1-锻造，2-缝纫，3-冶金，4-烹饪，5-制药)
	required int32 skill_lvl = 2;	//副业技能等级
	optional int32 lvl_val = 3;		//副业技能等级值(收集副业表示熟练度，制造副业表示当前经验)
}
//采集副业数据
message CollectDeputyDBData
{
	repeated SingleDeputyDBData data = 1;
}



//制造副业数据
message MakeDeputyDBData
{
	repeated SingleDeputyDBData data = 1;
}

//副业数据
message CharacterDeputyDBData
{
	optional CollectDeputyDBData collect = 1;	//采集副业
	optional MakeDeputyDBData   make = 2;		//制造副业
}







//位置
message Vector3PB{
	required float x	=1;		//x轴
	required float y	=2;		//y轴
	required float z	=3;		//z轴
}

//角色移动
message ActorMove
{
    required uint32 cid=1;            //生物id
    required Vector3PB currentPos=2;  //当前位置
    repeated Vector3PB path=3;        //路径
}

//角色技能移动
message ActorSkillMove
{
	
    required uint32 cid=1;            //生物id
    required Vector3PB currentPos=2;  //当前位置
    repeated Vector3PB path=3;        //路径
	required float speed = 4;         //移动速度
}

//角色摇杠移动
message ActorRockerMove
{
	//移动类型枚举
	enum Type 
	{
		Up = 1;      //前进
		Down = 2;   //后退
		Stop = 3;      //停止
		Block =4;	//阻挡
		UpRoll = 5;	//前翻滚
		DownRoll = 6;	//后翻滚
	}
    required uint32	cid=1;            //生物id
    required Vector3PB currentPos=2;	  //当前位置
    required float     currentRange=3;     //改变角度
    required Type	moveType =4;	  //移动类型
}

//角色位置由客户端同步
//CLIENT_TO_LOGIC_CHARACTER_POS_UPDATE	= 367;	
message ActorPosUpDate
{
	required uint32	cid=1;			   //角色id
	required Vector3PB currentPos=2;	  //当前位置
	required Vector3PB currentDir=3;	  //当前方向
	optional uint32	   isend=4;		 // 是否需要转发其它客户端  0表示要转发，1表示不用转发
}

enum PlayerAttr 
{
	P_NONE=0;
	P_POWER=1;							//力量
	P_INTELLIGENCE=2;					//智力
	P_AGILITY=3;						//敏捷
	P_PHYSIQUE=4;						//体质
	P_ENDURANCE=5;						//耐力
	P_PRECISION=6;						//精准
	P_MAX_HP=7;							//最大生命值
	P_MAX_MP=8;							//最大魔法值
	P_AP=9;								//物理攻击
	P_MAT=10;							//魔法攻击
	P_DP=11;							//物理防御
	P_MDP=12;							//魔法防御
	P_HIT=13;							//命中
	P_DODGE=14;							//闪避
	P_CRIT=15;							//暴击
	P_TOUGHNESS=16;						//韧性
	P_CRIT_RATE=17;						//暴击倍率
	P_CRIT_EXTRADAMAGE=18;				//暴击额外伤害
	P_CRIT_REDUCEDAMAGE=19;				//暴击额外免伤
	P_EXTRA_DAMAGE=20;					//额外伤害
	P_REDUCE_DAMAGE=21;					//额外免伤
	P_APDAMAGERATE=22;					//物理伤害率
	P_APREDUCEDAMAGERATE=23;			//物理免伤率
	P_FREEZERES=24;						//冰冻抗性
	P_BURNRES=25;						//灼烧抗性
	P_WEAKRES=26;						//虚弱抗性
	P_FASTINGRES=27;					//禁食抗性
	P_FUNKRES=28;						//恐惧抗性
	P_RESTORE_HP=29;					//生命恢复
	P_RESTORE_MP=30;					//魔法恢复
	P_MSPEED=31;						//移动速度
	P_ASPEED=32;						//攻击速度
	P_VIEW=33;							//视野
	P_MAX_ACCPOWER=34;					//蓄力值上限
	P_MATDAMAGERATE=35;					//魔法伤害率
	P_MATREDUCEDAMAGERATE=36;			//魔法免伤率
	P_CUREADDITION=37;					//治疗加成
	P_CUREADDITIONBY=38;				//被治疗加成
	P_CUREEFFECT=39;					//治疗效果
	P_CUREEFFECTBY=40;					//被治疗效果

	P_HP=41;							 //当前生命值  
	P_MP=42;							 //魔法值
	P_DIRECT=43;						 //直接伤害
	P_FREEZE=44;						 //冰冻几率
	P_BRUN=45;							 //灼烧几率
	P_WEAK=46;							 //虚弱几率
	P_FASTING=47;						 //禁食几率
	P_FUNK=48;							 //恐惧几率
	P_RESTART_HP=49;					 //死亡恢复
	P_SILENTRES=50;						 //沉默抗性
	P_REFDAMAGE=51;						 //减伤几率
	P_IMMUNITY=52;						 //免疫几率
	P_PABODY=53;						 //霸体几率
	P_MIRACLE=54;						 //神迹几率
	P_LUCKY=55;							 //幸运几率
	P_SLIENT=56;						 //沉默几率
	P_RACE=57;							 //种族
	P_PROF=58;							 //职业
	P_GENDER=59;						 //性别
	P_LEVEL=60;							 //等级
	P_VIP=61;							 //VIP等级
	P_EXP=62;							 //经验
	P_EXPMAX=63;						 //经验上限
	P_CAMP=64;							 //阵营
	P_CAMP_LEV=65;						 //阵营等级
	P_MARRIED=66;						 //婚姻(已婚、未婚)
	P_CAMP_KILLING=67;					 //本阵营杀戮值
	P_HOSTILEKILLING=68;				 //敌对阵营杀戮值
	P_STAMINA=69;						 //体力
	P_STAMINA_REPLY=70;					 //体力恢复
	P_MAX_STAMINA=71;					 //体力上限
	P_ACCPOWER=72;						 //蓄力值
	P_FIGHT_POWER=73;					 //战斗力
	P_ATTR_POINT=74;					 //属性点
	P_GOLD=75;							 //金币
	P_GOLD_BIND=76;						 //绑定金币
	P_DIAMOND=77;						 //钻石
	P_DIAMOND_BIND=78;					 //绑定钻石
	P_DUPLICATE_ID=79;					 //副本ID
	P_OFFICIAL = 80;					 //官职
	P_KNIGHT = 81;						 //爵位 
	P_UNION_CONTRI = 82;				 //工会贡献
	P_ENERGY = 83;						 //活力值

	P_CLIENT_END=99;					 //客户端属性

	P_VALUE_BEGIN=100;
	P_VALUE_POWER=101;					 //数值力量
	P_VALUE_INTELLIGENCE=102;			 //数值智力
	P_VALUE_AGILITY=103;				 //数值敏捷
	P_VALUE_PHYSIQUE=104;				 //数值体质
	P_VALUE_ENDURANCE=105;				 //数值耐力
	P_VALUE_PRECISION=106;				 //数值精准
	P_VALUE_MAX_HP=107;					 //数值最大生命值
	P_VALUE_MAX_MP=108;					 //数值最大魔法值
	P_VALUE_AP=109;						 //数值物理攻击
	P_VALUE_MAT=110;					 //数值魔法攻击
	P_VALUE_DP=111;						 //数值物理防御
	P_VALUE_MDP=112;					 //数值魔法防御
	P_VALUE_HIT=113;					 //数值命中
	P_VALUE_DODGE=114;					 //数值闪避
	P_VALUE_CRIT=115;					 //数值暴击
	P_VALUE_TOUGHNESS=116;				 //数值韧性
	P_VALUE_CRIT_EXTRADAMAGE=117;		 //数值暴击额外伤害
	P_VALUE_CRIT_REDUCEDAMAGE=118;		 //数值暴击额外免伤
	P_VALUE_EXTRA_DAMAGE=119;			 //数值额外伤害
	P_VALUE_REDUCE_DAMAGE=120;			 //数值额外免伤
	P_VALUE_END=131;

	P_PERCENT_BEGIN=132;
	P_PERCENT_POWER=133;				  //百分比力量
	P_PERCENT_INTELLIGENCE=134;			  //百分比智力
	P_PERCENT_AGILITY=135;				  //百分比敏捷
	P_PERCENT_PHYSIQUE=136;				  //百分比体质
	P_PERCENT_ENDURANCE=137;			  //百分比耐力
	P_PERCENT_PRECISION=138;			  //百分比精准
	P_PERCENT_MAX_HP=139;				  //百分比最大生命值
	P_PERCENT_MAX_MP=140;				  //百分比最大魔法值
	P_PERCENT_AP=141;					  //百分比物理攻击
	P_PERCENT_MAT=142;					  //百分比魔法攻击
	P_PERCENT_DP=143;					  //百分比物理防御
	P_PERCENT_MDP=144;					  //百分比魔法防御
	P_PERCENT_HIT=145;					  //百分比命中
	P_PERCENT_DODGE=146;				  //百分比闪避
	P_PERCENT_CRIT=147;					  //百分比暴击
	P_PERCENT_TOUGHNESS=148;			  //百分比韧性
	P_PERCENT_CRIT_EXTRADAMAGE=149;		  //百分比暴击额外伤害
	P_PERCENT_CRIT_REDUCEDAMAGE=150;	  //百分比暴击额外免伤
	P_PERCENT_EXTRA_DAMAGE=151;			  //百分比额外伤害
	P_PERCENT_REDUCE_DAMAGE=152;		  //百分比额外免伤
	P_PERCENT_CUREEFFECTBY=153;			  //百分比被治疗效果
	P_PERCENT_APDAMAGERATE=154;			  //百分比物理伤害率
	P_PERCENT_MATDAMAGERATE=155;		  //百分比魔法伤害率
	P_PERCENT_APREDUCEDAMAGERATE=156;	  //百分比物理免伤率
	P_PERCENT_MATREDUCEDAMAGERATE=157;	  //百分比魔法免伤率
	P_PERCENT_CRIT_RATE=158;			  //百分比暴击倍率
	P_PERCENT_CUREADDITION=159;			  //百分比治疗加成
	P_PERCENT_CUREADDITIONBY=160;		  //百分比被治疗加成
	P_PERCENT_END = 180;

	P_SKILL_FIX_BEGIN =181;               
	P_SKILL_FIX_AP = 182;                 //技能物攻固定值
	P_SKILL_FIX_MAT = 183;                //技能魔攻固定值
	P_SKILL_FIX_END = 200;

	P_ATTR_POINT_BEGIN=201;
	P_ATTR_POINT_POWER=202;				   //属性点加成力量
	P_ATTR_POINT_INTELLIGENCE=203;		   //属性点加成智力
	P_ATTR_POINT_AGILITY=204;			   //属性点加成敏捷
	P_ATTR_POINT_PHYSIQUE=205;			   //属性点加成体质
	P_ATTR_POINT_ENDURANCE=206;			   //属性点加成耐力
	P_ATTR_POINT_PRECISION=207;			   //属性点加成精准
	P_ATTR_POINT_END=208;

	P_ADVANCED_ATTR_BEGIN=209;
	P_ADVANCED_ATTR_AP=210;				   //一级属性影响物理攻击
	P_ADVANCED_ATTR_MAT=211;			   //一级属性影响魔法攻击
	P_ADVANCED_ATTR_DP=212;				   //一级属性影响物理防御
	P_ADVANCED_ATTR_MDP=213;			   //一级属性影响魔法防御
	P_ADVANCED_ATTR_HIT=214;			   //一级属性影响命中
	P_ADVANCED_ATTR_DODGE=215;			   //一级属性影响闪避
	P_ADVANCED_ATTR_CRIT=216;			   //一级属性影响暴击
	P_ADVANCED_ATTR_TOUGHNESS=217;		   //一级属性影响韧性
	P_ADVANCED_ATTR_MP_MAX=218;			   //一级属性影响魔法值
	P_ADVANCED_ATTR_HP_MAX=219;			   //一级属性影响血量上限值
	P_ADVANCED_ATTR_END=220;

	P_EQUIP_BEGIN=221;
	P_EQUIP_POWER=222;					   //力量
	P_EQUIP_INTELLIGENCE=223;			   //智力
	P_EQUIP_AGILITY=224;				   //敏捷
	P_EQUIP_PHYSIQUE=225;				   //体质
	P_EQUIP_ENDURANCE=226;				   //耐力
	P_EQUIP_PRECISION=227;				   //精准
	P_EQUIP_MAX_HP=228;					   //最大生命值
	P_EQUIP_MAX_MP=229;					   //最大魔法值
	P_EQUIP_AP=230;						   //物理攻击
	P_EQUIP_MAT=231;					   //魔法攻击
	P_EQUIP_DP=232;						   //物理防御
	P_EQUIP_MDP=233;					   //魔法防御
	P_EQUIP_HIT=234;					   //命中率
	P_EQUIP_DODGE=235;					   //闪避率
	P_EQUIP_CRIT=236;					   //暴击
	P_EQUIP_TOUGHNESS=237;				   //韧性
	P_EQUIP_CRIT_RATE=238;				   //暴击倍率
	P_EQUIP_CRIT_EXTRADAMAGE=239;		   //暴击额外伤害
	P_EQUIP_CRIT_REDUCEDAMAGE=240;		   //暴击额外免伤
	P_EQUIP_EXTRA_DAMAGE=241;			   //额外伤害
	P_EQUIP_REDUCE_DAMAGE=242;			   //额外免伤
	P_EQUIP_DAMAGE_RATE=243;			   //暴击率
	P_EQUIP_FREEZERES=244;				   //冰冻抗性
	P_EQUIP_BURNRES=245;				   //灼烧抗性
	P_EQUIP_WEAKRES=246;				   //虚弱抗性
	P_EQUIP_FASTINGRES=247;				   //禁食抗性
	P_EQUIP_FUNKRES=248;				   //恐惧抗性
	P_EQUIP_APDAMAGERATE=249;			   //物理伤害率
	P_EQUIP_MATDAMAGERATE=250;			   //魔法伤害率
	P_EQUIP_APREDUCEDAMAGERATE=251;		   //物理免伤率
	P_EQUIP_MATREDUCEDAMAGERATE=252;	   //魔法免伤
	P_EQUIP_END=280;

	P_LEV_BEGIN=281;
	P_LEV_POWER=282;					   //等级力量
	P_LEV_INTELLIGENCE=283;				   //等级智力
	P_LEV_AGILITY=284;					   //等级敏捷
	P_LEV_PHYSIQUE=285;					   //等级体质
	P_LEV_ENDURANCE=286;				   //等级耐力
	P_LEV_PRECISION=287;				   //等级精准
	P_LEV_MAX_HP=288;					   //等级最大命值
	P_LEV_MAX_MP=289;					   //等级最大法值
	P_LEV_AP=290;						   //等级物攻
	P_LEV_MAT=291;						   //等级魔攻
	P_LEV_DP=292;						   //等级物防
	P_LEV_MDP=293;						   //等级魔防御
	P_LEV_HIT=294;                         //等级命中
	P_LEV_DODGE=295;					   //等级闪避
	P_LEV_CRIT=296;                        //等级暴击
	P_LEV_TOUGHNESS=297;                   //等级坚韧
	P_LEV_CRIT_RATE=298;                   //等级暴击率
	P_LEV_END=320;

	P_SKILL_PERCENT_BEGIN=321;
	P_SKILL_PERCENT_MAT=322;     //技能魔攻百分比
	P_SKILL_PERCENT_AP=323;      //技能物攻百分比
	P_SKILL_PERCENT_END=340;			 

	P_AUTO_POINT_BEGIN = 341;         
	P_AUTO_POINT_POWER = 342;              //自动分配属性点加成力量
	P_AUTO_POINT_INTELLIGENCE = 343;       //自动分配属性点加成智力
	P_AUTO_POINT_AGILITY = 344;            //自动分配属性点加成敏捷
	P_AUTO_POINT_PHYSIQUE = 345;           //自动分配属性点加成体质
	P_AUTO_POINT_ENDURANCE = 346;          //自动分配属性点加成耐力
	P_AUTO_POINT_PRECISION = 347;          //自动分配属性点加成精准
	P_AUTO_POINT           = 348;          //是否自动分配属性点
	P_AUTO_POINT_END = 349;   

	P_BUFF_FIX_BEGIN=350;
	P_BUFF_FIX_POWER=351;				   //固定值值力量
	P_BUFF_FIX_INTELLIGENCE=352;		   //固定值智力
	P_BUFF_FIX_AGILITY=353;				   //固定值敏捷
	P_BUFF_FIX_PHYSIQUE=354;			   //固定值体质
	P_BUFF_FIX_ENDURANCE=355;			   //固定值耐力
	P_BUFF_FIX_PRECISION=356;			   //固定值精准
	P_BUFF_FIX_MAX_HP=357;				   //固定值最大生命值
	P_BUFF_FIX_MAX_MP=358;				   //固定值最大魔法值
	P_BUFF_FIX_AP=359;					   //固定值物理攻击
	P_BUFF_FIX_MAT=360;					   //固定值魔法攻击
	P_BUFF_FIX_DP=361;					   //固定值物理防御
	P_BUFF_FIX_MDP=362;					   //固定值魔法防御
	P_BUFF_FIX_HIT=363;					   //固定值命中
	P_BUFF_FIX_DODGE=364;				   //固定值闪避
	P_BUFF_FIX_CRIT=365;				   //固定值暴击
	P_BUFF_FIX_TOUGHNESS=366;			   //固定值韧性
	P_BUFF_FIX_CRIT_EXTRADAMAGE=367;	   //固定值暴击额外伤害
	P_BUFF_FIX_CRIT_REDUCEDAMAGE=368;	   //固定值暴击额外免伤
	P_BUFF_FIX_EXTRA_DAMAGE=369;		   //固定值额外伤害
	P_BUFF_FIX_REDUCE_DAMAGE=370;		   //固定值额外免伤
	P_BUFF_FIX_END=400;

	P_BUFF_PERCENT_BEGIN=401;
	P_BUFF_PERCENT_POWER=402;			   //百分比力量
	P_BUFF_PERCENT_INTELLIGENCE=403;	   //百分比智力
	P_BUFF_PERCENT_AGILITY=404;			   //百分比敏捷
	P_BUFF_PERCENT_PHYSIQUE=405;		   //百分比体质
	P_BUFF_PERCENT_ENDURANCE=406;		   //百分比耐力
	P_BUFF_PERCENT_PRECISION=407;		   //百分比精准
	P_BUFF_PERCENT_MAX_HP=408;			   //百分比最大生命值
	P_BUFF_PERCENT_MAX_MP=409;			   //百分比最大魔法值
	P_BUFF_PERCENT_AP=410;				   //百分比物理攻击
	P_BUFF_PERCENT_MAT=411;				   //百分比魔法攻击
	P_BUFF_PERCENT_DP=412;				   //百分比物理防御
	P_BUFF_PERCENT_MDP=413;				   //百分比魔法防御
	P_BUFF_PERCENT_HIT=414;				   //百分比命中
	P_BUFF_PERCENT_DODGE=415;			   //百分比闪避
	P_BUFF_PERCENT_CRIT=416;			   //百分比暴击
	P_BUFF_PERCENT_TOUGHNESS=417;		   //百分比韧性
	P_BUFF_PERCENT_CRIT_EXTRADAMAGE=418;   //百分比暴击额外伤害
	P_BUFF_PERCENT_CRIT_REDUCEDAMAGE=419;  //百分比暴击额外免伤
	P_BUFF_PERCENT_EXTRA_DAMAGE=420;	   //百分比额外伤害
	P_BUFF_PERCENT_REDUCE_DAMAGE=421;	   //百分比额外免伤
	P_BUFF_PERCENT_CUREEFFECTBY=422;	   //百分比被治疗效果
	P_BUFF_PERCENT_APDAMAGERATE=423;	   //百分比物理伤害率
	P_BUFF_PERCENT_MATDAMAGERATE=424;	   //百分比魔法伤害率
	P_BUFF_PERCENT_APREDUCEDAMAGERATE=425; //百分比物理免伤率
	P_BUFF_PERCENT_MATREDUCEDAMAGERATE=426;//百分比魔法免伤率
	P_BUFF_PERCENT_CRIT_RATE=427;		   //百分比暴击倍率
	P_BUFF_PERCENT_CUREADDITION=428;	   //百分比治疗加成
	P_BUFF_PERCENT_CUREADDITIONBY=429;	   //百分比被治疗加成
	P_BUFF_PERCENT_END=450;

	P_FIX_BEGIN=452;
	P_FIX_POWER=453;					   //固定值力量
	P_FIX_INTELLIGENCE=454;				   //固定值智力
	P_FIX_AGILITY=455;					   //固定值敏捷
	P_FIX_PHYSIQUE=456;					   //固定值体质
	P_FIX_ENDURANCE=457;				   //固定值耐力
	P_FIX_PRECISION=458;				   //固定值精准
	P_FIX_MAX_HP=459;					   //固定值最大生命值
	P_FIX_MAX_MP=460;					   //固定值最大魔法值
	P_FIX_AP=461;						   //固定值物理攻击
	P_FIX_MAT=462;						   //固定值魔法攻击
	P_FIX_DP=463;						   //固定值物理防御
	P_FIX_MDP=464;						   //固定值魔法防御
	P_FIX_HIT=465;						   //固定值命中
	P_FIX_DODGE=466;					   //固定值闪避
	P_FIX_CRIT=467;						   //固定值暴击
	P_FIX_TOUGHNESS=468;				   //固定值韧性
	P_FIX_CRIT_EXTRADAMAGE=469;			   //固定值暴击额外伤害
	P_FIX_CRIT_REDUCEDAMAGE=470;		   //固定值暴击额外免伤
	P_FIX_EXTRA_DAMAGE=471;				   //固定值额外伤害
	P_FIX_REDUCE_DAMAGE=472;			   //固定值额外免伤
	P_FIX_END=499;

	P_MAX=500;
};


enum MonsterAttr
{
	M_NONE = 0;              
	M_HP   = 1;        //怪物血量
	M_MAX_HP = 2;      //怪物血量上限
	M_ID   = 3;        //怪物配置表id
	M_MP = 4;		//怪物魔量
	M_MAX_MP = 5;	//怪物魔量上限
	M_AP = 6;		//物理攻击
	M_MAT = 7;		//魔法攻击
	M_DP = 8;		//物理防御
	M_MDP = 9;		//魔法防御
	M_HIT = 10;		//命中
	M_DODGE = 11;	//闪避
	M_CRIT = 12;	//暴击
	M_TOUGHNESS	= 13; //韧性
	M_CRIT_RATE = 14; //暴击倍率
	M_CRIT_EXTRADAMAGE = 15; //暴击额外伤害
	M_CRIT_REDUCEDAMAGE = 16; //暴击额外免伤
	M_EXTRA_DAMAGE = 17; //额外伤害
	M_REDUCE_DAMAGE = 18; //额外免伤
	M_DAMAGE_RATE = 19; //伤害率
	M_REDUCE_DAMAGERATE = 20; //免伤率
	M_FREEZERES = 21; //冰冻抗性
	M_BURNRES = 22; //灼伤抗性
	M_WEAKRES = 23; //虚弱抗性
	M_FASTINGRES = 24; //禁食抗性
	M_FUNKRES = 25; //恐惧抗性
	M_MSPEED = 26; //移动速度
	M_ASPEED = 27; //攻击速度

    M_SKILL_FIX_BEGIN   = 28;
	M_SKILL_FIX_AP = 29; 	   //技能物攻固定值
	M_SKILL_FIX_MAT = 30;	   //技能魔攻固定值
	M_SKILL_FIX_END=31;

	M_SKILL_PERCENT_BEGIN=50;
	M_SKILL_PERCENT_AP= 51;		   //技能物攻百分比
	M_SKILL_PERCENT_MAT= 52;	   //技能魔攻百分比
	M_CUREEFFECT=53;			   //治疗效果
	M_CUREADDITION=54;         	   //治疗加成
	M_SKILLCFG_END = 55;

	M_BUFF_FIX_BEGIN=70;
	M_BUFF_FIX_POWER=71;				   //固定值值力量
	M_BUFF_FIX_INTELLIGENCE=72;		   //固定值智力
	M_BUFF_FIX_AGILITY=73;				   //固定值敏捷
	M_BUFF_FIX_PHYSIQUE=74;			   //固定值体质
	M_BUFF_FIX_ENDURANCE=75;			   //固定值耐力
	M_BUFF_FIX_PRECISION=76;			   //固定值精准
	M_BUFF_FIX_MAX_HP=77;				   //固定值最大生命值
	M_BUFF_FIX_MAX_MP=78;				   //固定值最大魔法值
	M_BUFF_FIX_AP=79;					   //固定值物理攻击
	M_BUFF_FIX_MAT=80;					   //固定值魔法攻击
	M_BUFF_FIX_DP=81;					   //固定值物理防御
	M_BUFF_FIX_MDP=82;					   //固定值魔法防御
	M_BUFF_FIX_HIT=83;					   //固定值命中
	M_BUFF_FIX_DODGE=84;				   //固定值闪避
	M_BUFF_FIX_CRIT=85;				   //固定值暴击
	M_BUFF_FIX_TOUGHNESS=86;			   //固定值韧性
	M_BUFF_FIX_CRIT_EXTRADAMAGE=87;	   //固定值暴击额外伤害
	M_BUFF_FIX_CRIT_REDUCEDAMAGE=88;	   //固定值暴击额外免伤
	M_BUFF_FIX_EXTRA_DAMAGE=89;		   //固定值额外伤害
	M_BUFF_FIX_REDUCE_DAMAGE=90;		   //固定值额外免伤
	M_BUFF_FIX_END=91;

	M_BUFF_PERCENT_BEGIN=100;
	M_BUFF_PERCENT_POWER=101;			   //百分比力量
	M_BUFF_PERCENT_INTELLIGENCE=102;	   //百分比智力
	M_BUFF_PERCENT_AGILITY=103;			   //百分比敏捷
	M_BUFF_PERCENT_PHYSIQUE=104;		   //百分比体质
	M_BUFF_PERCENT_ENDURANCE=105;		   //百分比耐力
	M_BUFF_PERCENT_PRECISION=106;		   //百分比精准
	M_BUFF_PERCENT_MAX_HP=107;			   //百分比最大生命值
	M_BUFF_PERCENT_MAX_MP=108;			   //百分比最大魔法值
	M_BUFF_PERCENT_AP=109;				   //百分比物理攻击
	M_BUFF_PERCENT_MAT=110;				   //百分比魔法攻击
	M_BUFF_PERCENT_DP=111;				   //百分比物理防御
	M_BUFF_PERCENT_MDP=112;				   //百分比魔法防御
	M_BUFF_PERCENT_HIT=113;				   //百分比命中
	M_BUFF_PERCENT_DODGE=114;			   //百分比闪避
	M_BUFF_PERCENT_CRIT=115;			   //百分比暴击
	M_BUFF_PERCENT_TOUGHNESS=116;		   //百分比韧性
	M_BUFF_PERCENT_CRIT_EXTRADAMAGE=117;   //百分比暴击额外伤害
	M_BUFF_PERCENT_CRIT_REDUCEDAMAGE=118;  //百分比暴击额外免伤
	M_BUFF_PERCENT_EXTRA_DAMAGE=119;	   //百分比额外伤害
	M_BUFF_PERCENT_REDUCE_DAMAGE=120;	   //百分比额外免伤
	M_BUFF_PERCENT_CUREEFFECTBY=121;	   //百分比被治疗效果
	M_BUFF_PERCENT_APDAMAGERATE=122;	   //百分比物理伤害率
	M_BUFF_PERCENT_MATDAMAGERATE=123;	   //百分比魔法伤害率
	M_BUFF_PERCENT_APREDUCEDAMAGERATE=124; //百分比物理免伤率
	M_BUFF_PERCENT_MATREDUCEDAMAGERATE=125;//百分比魔法免伤率
	M_BUFF_PERCENT_CRIT_RATE=126;		   //百分比暴击倍率
	M_BUFF_PERCENT_CUREADDITION=127;	   //百分比治疗加成
	M_BUFF_PERCENT_CUREADDITIONBY=128;	   //百分比被治疗加成
	M_BUFF_PERCENT_END=129;

	M_VALUE_BEGIN=140;
	M_VALUE_POWER=141;					 //数值力量
	M_VALUE_INTELLIGENCE=142;			 //数值智力
	M_VALUE_AGILITY=143;				 //数值敏捷
	M_VALUE_PHYSIQUE=144;				 //数值体质
	M_VALUE_ENDURANCE=145;				 //数值耐力
	M_VALUE_PRECISION=146;				 //数值精准
	M_VALUE_MAX_HP=147;					 //数值最大生命值
	M_VALUE_MAX_MP=148;					 //数值最大魔法值
	M_VALUE_AP=149;						 //数值物理攻击
	M_VALUE_MAT=150;					 //数值魔法攻击
	M_VALUE_DP=151;						 //数值物理防御
	M_VALUE_MDP=152;					 //数值魔法防御
	M_VALUE_HIT=153;					 //数值命中
	M_VALUE_DODGE=154;					 //数值闪避
	M_VALUE_CRIT=155;					 //数值暴击
	M_VALUE_TOUGHNESS=156;				 //数值韧性
	M_VALUE_CRIT_EXTRADAMAGE=157;		 //数值暴击额外伤害
	M_VALUE_CRIT_REDUCEDAMAGE=158;		 //数值暴击额外免伤
	M_VALUE_EXTRA_DAMAGE=159;			 //数值额外伤害
	M_VALUE_REDUCE_DAMAGE=160;			 //数值额外免伤
	M_VALUE_END=170;

	M_PERCENT_BEGIN=171;
	M_PERCENT_POWER=172;				  //百分比力量
	M_PERCENT_INTELLIGENCE=173;			  //百分比智力
	M_PERCENT_AGILITY=174;				  //百分比敏捷
	M_PERCENT_PHYSIQUE=175;				  //百分比体质
	M_PERCENT_ENDURANCE=176;			  //百分比耐力
	M_PERCENT_PRECISION=177;			  //百分比精准
	M_PERCENT_MAX_HP=178;				  //百分比最大生命值
	M_PERCENT_MAX_MP=179;				  //百分比最大魔法值
	M_PERCENT_AP=180;					  //百分比物理攻击
	M_PERCENT_MAT=181;					  //百分比魔法攻击
	M_PERCENT_DP=182;					  //百分比物理防御
	M_PERCENT_MDP=183;					  //百分比魔法防御
	M_PERCENT_HIT=184;					  //百分比命中
	M_PERCENT_DODGE=185;				  //百分比闪避
	M_PERCENT_CRIT=186;					  //百分比暴击
	M_PERCENT_TOUGHNESS=187;			  //百分比韧性
	M_PERCENT_CRIT_EXTRADAMAGE=188;		  //百分比暴击额外伤害
	M_PERCENT_CRIT_REDUCEDAMAGE=189;	  //百分比暴击额外免伤
	M_PERCENT_EXTRA_DAMAGE=190;			  //百分比额外伤害
	M_PERCENT_REDUCE_DAMAGE=191;		  //百分比额外免伤
	M_PERCENT_CUREEFFECTBY=192;			  //百分比被治疗效果
	M_PERCENT_APDAMAGERATE=193;			  //百分比物理伤害率
	M_PERCENT_MATDAMAGERATE=194;		  //百分比魔法伤害率
	M_PERCENT_APREDUCEDAMAGERATE=195;	  //百分比物理免伤率
	M_PERCENT_MATREDUCEDAMAGERATE=196;	  //百分比魔法免伤率
	M_PERCENT_CRIT_RATE=197;			  //百分比暴击倍率
	M_PERCENT_CUREADDITION=198;			  //百分比治疗加成
	M_PERCENT_CUREADDITIONBY=199;		  //百分比被治疗加成
	M_PERCENT_END = 210;

	M_FIX_BEGIN=240;
	M_FIX_POWER=241;				  //固定值力量
	M_FIX_INTELLIGENCE=242;			  //固定值智力
	M_FIX_AGILITY=243;				  //固定值敏捷
	M_FIX_PHYSIQUE=244;				  //固定值体质
	M_FIX_ENDURANCE=245;			  //固定值耐力
	M_FIX_PRECISION=246;			  //固定值精准
	M_FIX_MAX_HP=247;				  //固定值最大生命值
	M_FIX_MAX_MP=248;				  //固定值最大魔法值
	M_FIX_AP=249;					  //固定值物理攻击
	M_FIX_MAT=250;					  //固定值魔法攻击
	M_FIX_DP=251;					  //固定值物理防御
	M_FIX_MDP=252;					  //固定值魔法防御
	M_FIX_HIT=253;					  //固定值命中
	M_FIX_DODGE=254;				  //固定值闪避
	M_FIX_CRIT=255;					  //固定值暴击
	M_FIX_TOUGHNESS=256;			  //固定值韧性
	M_FIX_CRIT_EXTRADAMAGE=257;		  //固定值暴击额外伤害
	M_FIX_CRIT_REDUCEDAMAGE=258;	  //固定值暴击额外免伤
	M_FIX_EXTRA_DAMAGE=259;			  //固定值额外伤害
	M_FIX_REDUCE_DAMAGE=260;		  //固定值额外免伤
	M_FIX_CUREEFFECTBY=261;			  //固定值被治疗效果
	M_FIX_APDAMAGERATE=262;			  //固定值物理伤害率
	M_FIX_MATDAMAGERATE=263;		  //固定值魔法伤害率
	M_FIX_APREDUCEDAMAGERATE=264;	  //固定值物理免伤率
	M_FIX_MATREDUCEDAMAGERATE=265;	  //固定值魔法免伤率
	M_FIX_CRIT_RATE=266;			  //固定值暴击倍率
	M_FIX_CUREADDITION=267;			  //固定值治疗加成
	M_FIX_CUREADDITIONBY=268;		  //固定值被治疗加成
	M_FIX_END = 269;

	M_MAX = 270;
}

//逻辑服同步角色属性到中心服
message CharSyncAttr
{
	required uint32 attrid = 1;		//属性ID
	required uint32 attrval = 2;	//属性值
}

//技能单元 单个技能信息
message SkillCell
{
	required uint32 skillId = 1;  //技能id
	required uint32 skillLev = 2; //技能等级
	optional uint64 cd      = 3;  //cd
}

//属性通信结构体
message Attr
{
	required uint32 AttrNum = 1;    //属性索引id
	required uint32 Attrvalue = 2;  //属性值
}

enum CreatureState
{
	State_Init   = 0;  //初始化状态
	State_normal = 1;  //正常
	State_dead = 2;   //死亡
	state_relive = 3; //复活
}

//数字表现
message DigPerfor
{
	//数字表现类型枚举
	enum Type 
	{
		addHp = 1;      //加血
		reduceHp = 2;   //减血
		cirit = 3;      //暴击
		doge  = 4;      //闪避
	}
	required uint32 type = 1;      //战斗/buff/加血数字表现类型
	optional  uint32 value = 2;    //具体数值
}

//判断地图是否可以切线
message IsCanTransSceneRouteReq
{
	required uint32 dstMapId = 1;
	required uint32 sceneRouteId = 2;
}

//判断地图是否可以换场景
message IsCanTransSceneReq
{
	required uint32 dstMapId = 1;
}

//卖出物品结构
message ItemSellProto
{
	required uint32 index = 1;	//物品所在背包格子索引
	optional int32 num = 2;		//卖出物品的数量
}

//一键穿戴的结构
message OneKeyDressProto
{
	required int32 index = 1;		//穿戴装备所在背包的格子索引
	optional int32 pos = 2;			//穿戴位置，戒指和护腕需要指定位置
}

//物品奖励通用结构
message RewardItemProto
{
	repeated  ItemProtoInfo info = 1;	//奖励物品
}

//副本信息
message DuplicateProto
{
	required int32 dupliate_id = 1;		//副本ID
	optional int32 star = 2;			//星级
	optional int32 reward_count = 3;	//已获得奖励次数
	optional int32 buy_count = 4;		//购买获得奖励次数
}

//成员结构体
message RelationMember
{
	optional uint32 id = 1; //成员ID
}

message RelationInfo
{
	optional uint32 groupIndex = 1;					//组
	repeated RelationMember members = 2;			//组下成员
}

//赠送体力好友结构体
message RelationPhysicalTab
{
	optional uint32 id = 1;					//ID
	optional uint64 lastGivePlyTime = 2;	//最后赠送体力的时间
	optional uint32 lastGetPhyTime = 3;		//最后可以领取的时间
	optional uint32 getPlyStatus = 4;		//领取的状态
}

//好友关系信息
message RelationDBInfo
{
	repeated RelationInfo info = 1;
	repeated RelationPhysicalTab physicalTab = 2;
	repeated uint32 applyList = 3; //申请列表
	optional uint32 giveTimes = 4; //赠送的次数
	optional uint64 lastGivePlyTime = 5; //最后赠送的时间
	optional uint32 progress = 6; //进度条
}

//角色摘要数据信息
message CharacterPlayerMiniInfo
{
	optional uint32 playerId				= 1;					//角色ID
	optional string playerName				= 2;					//角色名字
	optional uint32 sex						= 3;					//角色性别
	optional uint32 level					= 4;					//角色等级
	optional uint32 closeness				= 5;					//亲密度
	optional bool givePlysical			    = 6[default=false];		//是否赠送过体力 false没赠送体力 true已经赠送过体力
	optional uint32 getPlyStatus			= 7[default=0];			//状态 0表示不能领取体力 1表示可以领取体力 2表示已经领取过体力
	optional uint32 recentType				= 8;					//最近联系人关系 1表示聊天关系 2表示交易关系 3表示组队关系 4表示系统推荐
	optional uint64 recentTime				= 9;					//最近联系的时间
	//CTOTO后续继续扩展
}


//角色详细信息（暂时定这么多，后面有需要在加）
message CharacterDetailProtoInfo
{
	optional uint32 charId					= 1;		//角色ID
	optional string name					= 2;		//名字
	optional int32  level					= 3;		//等级
	optional uint32 fight					= 4;		//战力
	optional int32  prof					= 5;		//职业
	optional CharacterDBAttrDetailInfo attr = 6;		//属性数据
	repeated ItemProtoInfo equip			= 7;		//装备数据
}

//附件结构体
message MailAttachmentList
{
	repeated ItemProtoInfo itemInfo = 1; //物品
}

//邮件头结构
message MailHead
{
	optional uint32 mailId							= 1;			//邮件ID
	optional uint32 type							= 2;			//邮件类型
	optional uint32 sendPlayerId					= 3;			//发件人ID
	optional bytes sendPlayerName					= 4;			//发送人的名称
	optional uint32 destPlayerId					= 5;			//收件人ID
	optional bytes topic							= 6;			//同主题
	optional uint32 createTime						= 7;			//邮件创建时间
	optional uint32 status							= 8;			//邮件已读状态
	optional uint32 attachmentNum					= 9;			//附件长度
	optional int32  fetch							= 10;			//是否已领取
}

//邮件结构
message MailInfo
{
	optional MailHead mailHead						= 1;			//邮件头
	optional bytes content							= 2;			//邮件正文内容
	optional uint32 gold							= 3;			//金币
	optional uint32 diamond							= 4;			//钻石
	optional uint32 bindGold						= 5;			//绑定金币
	optional uint32 bindDiamond						= 6;			//绑定钻石
	optional uint32 sellType						= 7;			//出售的货币类型
	optional uint32 sellNum							= 8;			//出售的货币数量
	optional MailAttachmentList attachmentList		= 9;			//附件具体内容
}

//邮件摘要结构
message MiniMailInfo
{
	optional MailHead mailHead						= 1;
	optional uint32 sellMoney						= 2;			//出售物品的价格(该字段只有在交易邮件中才会有)
	optional MailAttachmentList attachmentList		= 3;			//附件具体内容(该字段只有在交易邮件中才会加载进来，普通邮件不会加载该字段值进来)
}