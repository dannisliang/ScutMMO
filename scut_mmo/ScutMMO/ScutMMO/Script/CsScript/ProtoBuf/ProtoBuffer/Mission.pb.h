// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoBuffer/Mission.proto

#ifndef PROTOBUF_ProtoBuffer_2fMission_2eproto__INCLUDED
#define PROTOBUF_ProtoBuffer_2fMission_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ProtoBuffer/ComProtocol.pb.h"
#include "ProtoBuffer/ClientToServerCmd.pb.h"
#include "Common/ComDefine.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoBuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

class CItemInfo;
class CMissionTrack;
class CGQueryMissionListReq;
class GCQueryMissionListRsp;
class CGAcceptMissionReq;
class GCAcceptMissionRsp;
class CGAbandonMissionReq;
class GCAbandonMissionRsp;
class CGSubmitMissionReq;
class GCSubmitMissionRsp;
class GCUpdateMissionStatusNotify;
class GCUpdateAcceptableListNotify;
class GCReceiveMissionNotify;
class GCDeleteMissionNotify;
class CGTalkWithNpcReq;
class CGGetCampMissionInfoReq;
class CampMissionInfo;
class GCGetCampMissionInfoRsp;
class CGDiceCampMissionReq;
class CGDiceCampMissionRsp;
class CGGetCampBoxRewardReq;
class CGGetCampBoxRewardRsp;

// ===================================================================

class CItemInfo : public ::google::protobuf::Message {
 public:
  CItemInfo();
  virtual ~CItemInfo();

  CItemInfo(const CItemInfo& from);

  inline CItemInfo& operator=(const CItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CItemInfo& default_instance();

  void Swap(CItemInfo* other);

  // implements Message ----------------------------------------------

  CItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CItemInfo& from);
  void MergeFrom(const CItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 curValue = 3;
  inline bool has_curvalue() const;
  inline void clear_curvalue();
  static const int kCurValueFieldNumber = 3;
  inline ::google::protobuf::uint32 curvalue() const;
  inline void set_curvalue(::google::protobuf::uint32 value);

  // optional uint32 finValue = 4;
  inline bool has_finvalue() const;
  inline void clear_finvalue();
  static const int kFinValueFieldNumber = 4;
  inline ::google::protobuf::uint32 finvalue() const;
  inline void set_finvalue(::google::protobuf::uint32 value);

  // optional uint32 parma1 = 5;
  inline bool has_parma1() const;
  inline void clear_parma1();
  static const int kParma1FieldNumber = 5;
  inline ::google::protobuf::uint32 parma1() const;
  inline void set_parma1(::google::protobuf::uint32 value);

  // optional uint32 parma2 = 6;
  inline bool has_parma2() const;
  inline void clear_parma2();
  static const int kParma2FieldNumber = 6;
  inline ::google::protobuf::uint32 parma2() const;
  inline void set_parma2(::google::protobuf::uint32 value);

  // optional uint32 parma3 = 7;
  inline bool has_parma3() const;
  inline void clear_parma3();
  static const int kParma3FieldNumber = 7;
  inline ::google::protobuf::uint32 parma3() const;
  inline void set_parma3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CItemInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_curvalue();
  inline void clear_has_curvalue();
  inline void set_has_finvalue();
  inline void clear_has_finvalue();
  inline void set_has_parma1();
  inline void clear_has_parma1();
  inline void set_has_parma2();
  inline void clear_has_parma2();
  inline void set_has_parma3();
  inline void clear_has_parma3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 curvalue_;
  ::google::protobuf::uint32 finvalue_;
  ::google::protobuf::uint32 parma1_;
  ::google::protobuf::uint32 parma2_;
  ::google::protobuf::uint32 parma3_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMissionTrack : public ::google::protobuf::Message {
 public:
  CMissionTrack();
  virtual ~CMissionTrack();

  CMissionTrack(const CMissionTrack& from);

  inline CMissionTrack& operator=(const CMissionTrack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMissionTrack& default_instance();

  void Swap(CMissionTrack* other);

  // implements Message ----------------------------------------------

  CMissionTrack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMissionTrack& from);
  void MergeFrom(const CMissionTrack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // optional uint32 acceptTime = 3;
  inline bool has_accepttime() const;
  inline void clear_accepttime();
  static const int kAcceptTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 accepttime() const;
  inline void set_accepttime(::google::protobuf::uint32 value);

  // optional .ProtoBuf.CItemInfo itemInfo = 4;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kItemInfoFieldNumber = 4;
  inline const ::ProtoBuf::CItemInfo& iteminfo() const;
  inline ::ProtoBuf::CItemInfo* mutable_iteminfo();
  inline ::ProtoBuf::CItemInfo* release_iteminfo();
  inline void set_allocated_iteminfo(::ProtoBuf::CItemInfo* iteminfo);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CMissionTrack)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_accepttime();
  inline void clear_has_accepttime();
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 status_;
  ::ProtoBuf::CItemInfo* iteminfo_;
  ::google::protobuf::uint32 accepttime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CMissionTrack* default_instance_;
};
// -------------------------------------------------------------------

class CGQueryMissionListReq : public ::google::protobuf::Message {
 public:
  CGQueryMissionListReq();
  virtual ~CGQueryMissionListReq();

  CGQueryMissionListReq(const CGQueryMissionListReq& from);

  inline CGQueryMissionListReq& operator=(const CGQueryMissionListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGQueryMissionListReq& default_instance();

  void Swap(CGQueryMissionListReq* other);

  // implements Message ----------------------------------------------

  CGQueryMissionListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGQueryMissionListReq& from);
  void MergeFrom(const CGQueryMissionListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGQueryMissionListReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGQueryMissionListReq* default_instance_;
};
// -------------------------------------------------------------------

class GCQueryMissionListRsp : public ::google::protobuf::Message {
 public:
  GCQueryMissionListRsp();
  virtual ~GCQueryMissionListRsp();

  GCQueryMissionListRsp(const GCQueryMissionListRsp& from);

  inline GCQueryMissionListRsp& operator=(const GCQueryMissionListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCQueryMissionListRsp& default_instance();

  void Swap(GCQueryMissionListRsp* other);

  // implements Message ----------------------------------------------

  GCQueryMissionListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCQueryMissionListRsp& from);
  void MergeFrom(const GCQueryMissionListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.CMissionTrack acceptedList = 1;
  inline int acceptedlist_size() const;
  inline void clear_acceptedlist();
  static const int kAcceptedListFieldNumber = 1;
  inline const ::ProtoBuf::CMissionTrack& acceptedlist(int index) const;
  inline ::ProtoBuf::CMissionTrack* mutable_acceptedlist(int index);
  inline ::ProtoBuf::CMissionTrack* add_acceptedlist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >&
      acceptedlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >*
      mutable_acceptedlist();

  // repeated uint32 acceptableList = 2;
  inline int acceptablelist_size() const;
  inline void clear_acceptablelist();
  static const int kAcceptableListFieldNumber = 2;
  inline ::google::protobuf::uint32 acceptablelist(int index) const;
  inline void set_acceptablelist(int index, ::google::protobuf::uint32 value);
  inline void add_acceptablelist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      acceptablelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_acceptablelist();

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCQueryMissionListRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack > acceptedlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > acceptablelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCQueryMissionListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CGAcceptMissionReq : public ::google::protobuf::Message {
 public:
  CGAcceptMissionReq();
  virtual ~CGAcceptMissionReq();

  CGAcceptMissionReq(const CGAcceptMissionReq& from);

  inline CGAcceptMissionReq& operator=(const CGAcceptMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGAcceptMissionReq& default_instance();

  void Swap(CGAcceptMissionReq* other);

  // implements Message ----------------------------------------------

  CGAcceptMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGAcceptMissionReq& from);
  void MergeFrom(const CGAcceptMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGAcceptMissionReq)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGAcceptMissionReq* default_instance_;
};
// -------------------------------------------------------------------

class GCAcceptMissionRsp : public ::google::protobuf::Message {
 public:
  GCAcceptMissionRsp();
  virtual ~GCAcceptMissionRsp();

  GCAcceptMissionRsp(const GCAcceptMissionRsp& from);

  inline GCAcceptMissionRsp& operator=(const GCAcceptMissionRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAcceptMissionRsp& default_instance();

  void Swap(GCAcceptMissionRsp* other);

  // implements Message ----------------------------------------------

  GCAcceptMissionRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAcceptMissionRsp& from);
  void MergeFrom(const GCAcceptMissionRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCAcceptMissionRsp)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCAcceptMissionRsp* default_instance_;
};
// -------------------------------------------------------------------

class CGAbandonMissionReq : public ::google::protobuf::Message {
 public:
  CGAbandonMissionReq();
  virtual ~CGAbandonMissionReq();

  CGAbandonMissionReq(const CGAbandonMissionReq& from);

  inline CGAbandonMissionReq& operator=(const CGAbandonMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGAbandonMissionReq& default_instance();

  void Swap(CGAbandonMissionReq* other);

  // implements Message ----------------------------------------------

  CGAbandonMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGAbandonMissionReq& from);
  void MergeFrom(const CGAbandonMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGAbandonMissionReq)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGAbandonMissionReq* default_instance_;
};
// -------------------------------------------------------------------

class GCAbandonMissionRsp : public ::google::protobuf::Message {
 public:
  GCAbandonMissionRsp();
  virtual ~GCAbandonMissionRsp();

  GCAbandonMissionRsp(const GCAbandonMissionRsp& from);

  inline GCAbandonMissionRsp& operator=(const GCAbandonMissionRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCAbandonMissionRsp& default_instance();

  void Swap(GCAbandonMissionRsp* other);

  // implements Message ----------------------------------------------

  GCAbandonMissionRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCAbandonMissionRsp& from);
  void MergeFrom(const GCAbandonMissionRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCAbandonMissionRsp)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCAbandonMissionRsp* default_instance_;
};
// -------------------------------------------------------------------

class CGSubmitMissionReq : public ::google::protobuf::Message {
 public:
  CGSubmitMissionReq();
  virtual ~CGSubmitMissionReq();

  CGSubmitMissionReq(const CGSubmitMissionReq& from);

  inline CGSubmitMissionReq& operator=(const CGSubmitMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGSubmitMissionReq& default_instance();

  void Swap(CGSubmitMissionReq* other);

  // implements Message ----------------------------------------------

  CGSubmitMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGSubmitMissionReq& from);
  void MergeFrom(const CGSubmitMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGSubmitMissionReq)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGSubmitMissionReq* default_instance_;
};
// -------------------------------------------------------------------

class GCSubmitMissionRsp : public ::google::protobuf::Message {
 public:
  GCSubmitMissionRsp();
  virtual ~GCSubmitMissionRsp();

  GCSubmitMissionRsp(const GCSubmitMissionRsp& from);

  inline GCSubmitMissionRsp& operator=(const GCSubmitMissionRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCSubmitMissionRsp& default_instance();

  void Swap(GCSubmitMissionRsp* other);

  // implements Message ----------------------------------------------

  GCSubmitMissionRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCSubmitMissionRsp& from);
  void MergeFrom(const GCSubmitMissionRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCSubmitMissionRsp)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCSubmitMissionRsp* default_instance_;
};
// -------------------------------------------------------------------

class GCUpdateMissionStatusNotify : public ::google::protobuf::Message {
 public:
  GCUpdateMissionStatusNotify();
  virtual ~GCUpdateMissionStatusNotify();

  GCUpdateMissionStatusNotify(const GCUpdateMissionStatusNotify& from);

  inline GCUpdateMissionStatusNotify& operator=(const GCUpdateMissionStatusNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpdateMissionStatusNotify& default_instance();

  void Swap(GCUpdateMissionStatusNotify* other);

  // implements Message ----------------------------------------------

  GCUpdateMissionStatusNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpdateMissionStatusNotify& from);
  void MergeFrom(const GCUpdateMissionStatusNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.CMissionTrack updateList = 1;
  inline int updatelist_size() const;
  inline void clear_updatelist();
  static const int kUpdateListFieldNumber = 1;
  inline const ::ProtoBuf::CMissionTrack& updatelist(int index) const;
  inline ::ProtoBuf::CMissionTrack* mutable_updatelist(int index);
  inline ::ProtoBuf::CMissionTrack* add_updatelist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >&
      updatelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >*
      mutable_updatelist();

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCUpdateMissionStatusNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack > updatelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCUpdateMissionStatusNotify* default_instance_;
};
// -------------------------------------------------------------------

class GCUpdateAcceptableListNotify : public ::google::protobuf::Message {
 public:
  GCUpdateAcceptableListNotify();
  virtual ~GCUpdateAcceptableListNotify();

  GCUpdateAcceptableListNotify(const GCUpdateAcceptableListNotify& from);

  inline GCUpdateAcceptableListNotify& operator=(const GCUpdateAcceptableListNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCUpdateAcceptableListNotify& default_instance();

  void Swap(GCUpdateAcceptableListNotify* other);

  // implements Message ----------------------------------------------

  GCUpdateAcceptableListNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCUpdateAcceptableListNotify& from);
  void MergeFrom(const GCUpdateAcceptableListNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 acceptableList = 1;
  inline int acceptablelist_size() const;
  inline void clear_acceptablelist();
  static const int kAcceptableListFieldNumber = 1;
  inline ::google::protobuf::uint32 acceptablelist(int index) const;
  inline void set_acceptablelist(int index, ::google::protobuf::uint32 value);
  inline void add_acceptablelist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      acceptablelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_acceptablelist();

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCUpdateAcceptableListNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > acceptablelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCUpdateAcceptableListNotify* default_instance_;
};
// -------------------------------------------------------------------

class GCReceiveMissionNotify : public ::google::protobuf::Message {
 public:
  GCReceiveMissionNotify();
  virtual ~GCReceiveMissionNotify();

  GCReceiveMissionNotify(const GCReceiveMissionNotify& from);

  inline GCReceiveMissionNotify& operator=(const GCReceiveMissionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCReceiveMissionNotify& default_instance();

  void Swap(GCReceiveMissionNotify* other);

  // implements Message ----------------------------------------------

  GCReceiveMissionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCReceiveMissionNotify& from);
  void MergeFrom(const GCReceiveMissionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.CMissionTrack receiveList = 1;
  inline int receivelist_size() const;
  inline void clear_receivelist();
  static const int kReceiveListFieldNumber = 1;
  inline const ::ProtoBuf::CMissionTrack& receivelist(int index) const;
  inline ::ProtoBuf::CMissionTrack* mutable_receivelist(int index);
  inline ::ProtoBuf::CMissionTrack* add_receivelist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >&
      receivelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >*
      mutable_receivelist();

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCReceiveMissionNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack > receivelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCReceiveMissionNotify* default_instance_;
};
// -------------------------------------------------------------------

class GCDeleteMissionNotify : public ::google::protobuf::Message {
 public:
  GCDeleteMissionNotify();
  virtual ~GCDeleteMissionNotify();

  GCDeleteMissionNotify(const GCDeleteMissionNotify& from);

  inline GCDeleteMissionNotify& operator=(const GCDeleteMissionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCDeleteMissionNotify& default_instance();

  void Swap(GCDeleteMissionNotify* other);

  // implements Message ----------------------------------------------

  GCDeleteMissionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCDeleteMissionNotify& from);
  void MergeFrom(const GCDeleteMissionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 missionId = 1;
  inline int missionid_size() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid(int index) const;
  inline void set_missionid(int index, ::google::protobuf::uint32 value);
  inline void add_missionid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      missionid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_missionid();

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCDeleteMissionNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCDeleteMissionNotify* default_instance_;
};
// -------------------------------------------------------------------

class CGTalkWithNpcReq : public ::google::protobuf::Message {
 public:
  CGTalkWithNpcReq();
  virtual ~CGTalkWithNpcReq();

  CGTalkWithNpcReq(const CGTalkWithNpcReq& from);

  inline CGTalkWithNpcReq& operator=(const CGTalkWithNpcReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGTalkWithNpcReq& default_instance();

  void Swap(CGTalkWithNpcReq* other);

  // implements Message ----------------------------------------------

  CGTalkWithNpcReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGTalkWithNpcReq& from);
  void MergeFrom(const CGTalkWithNpcReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 npcId = 1;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 1;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);

  // optional uint32 missionId = 2;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGTalkWithNpcReq)
 private:
  inline void set_has_npcid();
  inline void clear_has_npcid();
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 npcid_;
  ::google::protobuf::uint32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGTalkWithNpcReq* default_instance_;
};
// -------------------------------------------------------------------

class CGGetCampMissionInfoReq : public ::google::protobuf::Message {
 public:
  CGGetCampMissionInfoReq();
  virtual ~CGGetCampMissionInfoReq();

  CGGetCampMissionInfoReq(const CGGetCampMissionInfoReq& from);

  inline CGGetCampMissionInfoReq& operator=(const CGGetCampMissionInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetCampMissionInfoReq& default_instance();

  void Swap(CGGetCampMissionInfoReq* other);

  // implements Message ----------------------------------------------

  CGGetCampMissionInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetCampMissionInfoReq& from);
  void MergeFrom(const CGGetCampMissionInfoReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGGetCampMissionInfoReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGGetCampMissionInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CampMissionInfo : public ::google::protobuf::Message {
 public:
  CampMissionInfo();
  virtual ~CampMissionInfo();

  CampMissionInfo(const CampMissionInfo& from);

  inline CampMissionInfo& operator=(const CampMissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CampMissionInfo& default_instance();

  void Swap(CampMissionInfo* other);

  // implements Message ----------------------------------------------

  CampMissionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampMissionInfo& from);
  void MergeFrom(const CampMissionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 missionId = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 1;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // optional bool isAccept = 3;
  inline bool has_isaccept() const;
  inline void clear_isaccept();
  static const int kIsAcceptFieldNumber = 3;
  inline bool isaccept() const;
  inline void set_isaccept(bool value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CampMissionInfo)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_isaccept();
  inline void clear_has_isaccept();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 missionid_;
  ::google::protobuf::uint32 quality_;
  bool isaccept_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CampMissionInfo* default_instance_;
};
// -------------------------------------------------------------------

class GCGetCampMissionInfoRsp : public ::google::protobuf::Message {
 public:
  GCGetCampMissionInfoRsp();
  virtual ~GCGetCampMissionInfoRsp();

  GCGetCampMissionInfoRsp(const GCGetCampMissionInfoRsp& from);

  inline GCGetCampMissionInfoRsp& operator=(const GCGetCampMissionInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGetCampMissionInfoRsp& default_instance();

  void Swap(GCGetCampMissionInfoRsp* other);

  // implements Message ----------------------------------------------

  GCGetCampMissionInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GCGetCampMissionInfoRsp& from);
  void MergeFrom(const GCGetCampMissionInfoRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoBuf.CampMissionInfo missionInfoList = 1;
  inline int missioninfolist_size() const;
  inline void clear_missioninfolist();
  static const int kMissionInfoListFieldNumber = 1;
  inline const ::ProtoBuf::CampMissionInfo& missioninfolist(int index) const;
  inline ::ProtoBuf::CampMissionInfo* mutable_missioninfolist(int index);
  inline ::ProtoBuf::CampMissionInfo* add_missioninfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CampMissionInfo >&
      missioninfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CampMissionInfo >*
      mutable_missioninfolist();

  // optional uint32 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 times() const;
  inline void set_times(::google::protobuf::uint32 value);

  // optional uint32 boxPorgress = 3;
  inline bool has_boxporgress() const;
  inline void clear_boxporgress();
  static const int kBoxPorgressFieldNumber = 3;
  inline ::google::protobuf::uint32 boxporgress() const;
  inline void set_boxporgress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.GCGetCampMissionInfoRsp)
 private:
  inline void set_has_times();
  inline void clear_has_times();
  inline void set_has_boxporgress();
  inline void clear_has_boxporgress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CampMissionInfo > missioninfolist_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 boxporgress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static GCGetCampMissionInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CGDiceCampMissionReq : public ::google::protobuf::Message {
 public:
  CGDiceCampMissionReq();
  virtual ~CGDiceCampMissionReq();

  CGDiceCampMissionReq(const CGDiceCampMissionReq& from);

  inline CGDiceCampMissionReq& operator=(const CGDiceCampMissionReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDiceCampMissionReq& default_instance();

  void Swap(CGDiceCampMissionReq* other);

  // implements Message ----------------------------------------------

  CGDiceCampMissionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDiceCampMissionReq& from);
  void MergeFrom(const CGDiceCampMissionReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isNormal = 1;
  inline bool has_isnormal() const;
  inline void clear_isnormal();
  static const int kIsNormalFieldNumber = 1;
  inline bool isnormal() const;
  inline void set_isnormal(bool value);

  // optional uint32 missionId = 2;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGDiceCampMissionReq)
 private:
  inline void set_has_isnormal();
  inline void clear_has_isnormal();
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool isnormal_;
  ::google::protobuf::uint32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGDiceCampMissionReq* default_instance_;
};
// -------------------------------------------------------------------

class CGDiceCampMissionRsp : public ::google::protobuf::Message {
 public:
  CGDiceCampMissionRsp();
  virtual ~CGDiceCampMissionRsp();

  CGDiceCampMissionRsp(const CGDiceCampMissionRsp& from);

  inline CGDiceCampMissionRsp& operator=(const CGDiceCampMissionRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGDiceCampMissionRsp& default_instance();

  void Swap(CGDiceCampMissionRsp* other);

  // implements Message ----------------------------------------------

  CGDiceCampMissionRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGDiceCampMissionRsp& from);
  void MergeFrom(const CGDiceCampMissionRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 missionId = 2;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 missionid() const;
  inline void set_missionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGDiceCampMissionRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGDiceCampMissionRsp* default_instance_;
};
// -------------------------------------------------------------------

class CGGetCampBoxRewardReq : public ::google::protobuf::Message {
 public:
  CGGetCampBoxRewardReq();
  virtual ~CGGetCampBoxRewardReq();

  CGGetCampBoxRewardReq(const CGGetCampBoxRewardReq& from);

  inline CGGetCampBoxRewardReq& operator=(const CGGetCampBoxRewardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetCampBoxRewardReq& default_instance();

  void Swap(CGGetCampBoxRewardReq* other);

  // implements Message ----------------------------------------------

  CGGetCampBoxRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetCampBoxRewardReq& from);
  void MergeFrom(const CGGetCampBoxRewardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGGetCampBoxRewardReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGGetCampBoxRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CGGetCampBoxRewardRsp : public ::google::protobuf::Message {
 public:
  CGGetCampBoxRewardRsp();
  virtual ~CGGetCampBoxRewardRsp();

  CGGetCampBoxRewardRsp(const CGGetCampBoxRewardRsp& from);

  inline CGGetCampBoxRewardRsp& operator=(const CGGetCampBoxRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGGetCampBoxRewardRsp& default_instance();

  void Swap(CGGetCampBoxRewardRsp* other);

  // implements Message ----------------------------------------------

  CGGetCampBoxRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGGetCampBoxRewardRsp& from);
  void MergeFrom(const CGGetCampBoxRewardRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoBuf.CGGetCampBoxRewardRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_AssignDesc_ProtoBuffer_2fMission_2eproto();
  friend void protobuf_ShutdownFile_ProtoBuffer_2fMission_2eproto();

  void InitAsDefaultInstance();
  static CGGetCampBoxRewardRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// CItemInfo

// optional uint32 type = 1;
inline bool CItemInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CItemInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CItemInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CItemInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CItemInfo::type() const {
  return type_;
}
inline void CItemInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// optional uint64 id = 2;
inline bool CItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CItemInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CItemInfo::id() const {
  return id_;
}
inline void CItemInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 curValue = 3;
inline bool CItemInfo::has_curvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CItemInfo::set_has_curvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CItemInfo::clear_has_curvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CItemInfo::clear_curvalue() {
  curvalue_ = 0u;
  clear_has_curvalue();
}
inline ::google::protobuf::uint32 CItemInfo::curvalue() const {
  return curvalue_;
}
inline void CItemInfo::set_curvalue(::google::protobuf::uint32 value) {
  set_has_curvalue();
  curvalue_ = value;
}

// optional uint32 finValue = 4;
inline bool CItemInfo::has_finvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CItemInfo::set_has_finvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CItemInfo::clear_has_finvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CItemInfo::clear_finvalue() {
  finvalue_ = 0u;
  clear_has_finvalue();
}
inline ::google::protobuf::uint32 CItemInfo::finvalue() const {
  return finvalue_;
}
inline void CItemInfo::set_finvalue(::google::protobuf::uint32 value) {
  set_has_finvalue();
  finvalue_ = value;
}

// optional uint32 parma1 = 5;
inline bool CItemInfo::has_parma1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CItemInfo::set_has_parma1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CItemInfo::clear_has_parma1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CItemInfo::clear_parma1() {
  parma1_ = 0u;
  clear_has_parma1();
}
inline ::google::protobuf::uint32 CItemInfo::parma1() const {
  return parma1_;
}
inline void CItemInfo::set_parma1(::google::protobuf::uint32 value) {
  set_has_parma1();
  parma1_ = value;
}

// optional uint32 parma2 = 6;
inline bool CItemInfo::has_parma2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CItemInfo::set_has_parma2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CItemInfo::clear_has_parma2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CItemInfo::clear_parma2() {
  parma2_ = 0u;
  clear_has_parma2();
}
inline ::google::protobuf::uint32 CItemInfo::parma2() const {
  return parma2_;
}
inline void CItemInfo::set_parma2(::google::protobuf::uint32 value) {
  set_has_parma2();
  parma2_ = value;
}

// optional uint32 parma3 = 7;
inline bool CItemInfo::has_parma3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CItemInfo::set_has_parma3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CItemInfo::clear_has_parma3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CItemInfo::clear_parma3() {
  parma3_ = 0u;
  clear_has_parma3();
}
inline ::google::protobuf::uint32 CItemInfo::parma3() const {
  return parma3_;
}
inline void CItemInfo::set_parma3(::google::protobuf::uint32 value) {
  set_has_parma3();
  parma3_ = value;
}

// -------------------------------------------------------------------

// CMissionTrack

// optional uint32 missionId = 1;
inline bool CMissionTrack::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMissionTrack::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMissionTrack::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMissionTrack::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CMissionTrack::missionid() const {
  return missionid_;
}
inline void CMissionTrack::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint32 status = 2;
inline bool CMissionTrack::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMissionTrack::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMissionTrack::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMissionTrack::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CMissionTrack::status() const {
  return status_;
}
inline void CMissionTrack::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// optional uint32 acceptTime = 3;
inline bool CMissionTrack::has_accepttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMissionTrack::set_has_accepttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMissionTrack::clear_has_accepttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMissionTrack::clear_accepttime() {
  accepttime_ = 0u;
  clear_has_accepttime();
}
inline ::google::protobuf::uint32 CMissionTrack::accepttime() const {
  return accepttime_;
}
inline void CMissionTrack::set_accepttime(::google::protobuf::uint32 value) {
  set_has_accepttime();
  accepttime_ = value;
}

// optional .ProtoBuf.CItemInfo itemInfo = 4;
inline bool CMissionTrack::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMissionTrack::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMissionTrack::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMissionTrack::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::ProtoBuf::CItemInfo::Clear();
  clear_has_iteminfo();
}
inline const ::ProtoBuf::CItemInfo& CMissionTrack::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::ProtoBuf::CItemInfo* CMissionTrack::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::ProtoBuf::CItemInfo;
  return iteminfo_;
}
inline ::ProtoBuf::CItemInfo* CMissionTrack::release_iteminfo() {
  clear_has_iteminfo();
  ::ProtoBuf::CItemInfo* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void CMissionTrack::set_allocated_iteminfo(::ProtoBuf::CItemInfo* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
}

// -------------------------------------------------------------------

// CGQueryMissionListReq

// -------------------------------------------------------------------

// GCQueryMissionListRsp

// repeated .ProtoBuf.CMissionTrack acceptedList = 1;
inline int GCQueryMissionListRsp::acceptedlist_size() const {
  return acceptedlist_.size();
}
inline void GCQueryMissionListRsp::clear_acceptedlist() {
  acceptedlist_.Clear();
}
inline const ::ProtoBuf::CMissionTrack& GCQueryMissionListRsp::acceptedlist(int index) const {
  return acceptedlist_.Get(index);
}
inline ::ProtoBuf::CMissionTrack* GCQueryMissionListRsp::mutable_acceptedlist(int index) {
  return acceptedlist_.Mutable(index);
}
inline ::ProtoBuf::CMissionTrack* GCQueryMissionListRsp::add_acceptedlist() {
  return acceptedlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >&
GCQueryMissionListRsp::acceptedlist() const {
  return acceptedlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >*
GCQueryMissionListRsp::mutable_acceptedlist() {
  return &acceptedlist_;
}

// repeated uint32 acceptableList = 2;
inline int GCQueryMissionListRsp::acceptablelist_size() const {
  return acceptablelist_.size();
}
inline void GCQueryMissionListRsp::clear_acceptablelist() {
  acceptablelist_.Clear();
}
inline ::google::protobuf::uint32 GCQueryMissionListRsp::acceptablelist(int index) const {
  return acceptablelist_.Get(index);
}
inline void GCQueryMissionListRsp::set_acceptablelist(int index, ::google::protobuf::uint32 value) {
  acceptablelist_.Set(index, value);
}
inline void GCQueryMissionListRsp::add_acceptablelist(::google::protobuf::uint32 value) {
  acceptablelist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCQueryMissionListRsp::acceptablelist() const {
  return acceptablelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCQueryMissionListRsp::mutable_acceptablelist() {
  return &acceptablelist_;
}

// -------------------------------------------------------------------

// CGAcceptMissionReq

// optional uint32 missionId = 1;
inline bool CGAcceptMissionReq::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGAcceptMissionReq::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGAcceptMissionReq::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGAcceptMissionReq::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CGAcceptMissionReq::missionid() const {
  return missionid_;
}
inline void CGAcceptMissionReq::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// GCAcceptMissionRsp

// optional uint32 missionId = 1;
inline bool GCAcceptMissionRsp::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAcceptMissionRsp::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAcceptMissionRsp::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAcceptMissionRsp::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 GCAcceptMissionRsp::missionid() const {
  return missionid_;
}
inline void GCAcceptMissionRsp::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint32 ret = 2;
inline bool GCAcceptMissionRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAcceptMissionRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAcceptMissionRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAcceptMissionRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GCAcceptMissionRsp::ret() const {
  return ret_;
}
inline void GCAcceptMissionRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CGAbandonMissionReq

// optional uint32 missionId = 1;
inline bool CGAbandonMissionReq::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGAbandonMissionReq::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGAbandonMissionReq::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGAbandonMissionReq::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CGAbandonMissionReq::missionid() const {
  return missionid_;
}
inline void CGAbandonMissionReq::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// GCAbandonMissionRsp

// optional uint32 missionId = 1;
inline bool GCAbandonMissionRsp::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCAbandonMissionRsp::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCAbandonMissionRsp::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCAbandonMissionRsp::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 GCAbandonMissionRsp::missionid() const {
  return missionid_;
}
inline void GCAbandonMissionRsp::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint32 ret = 2;
inline bool GCAbandonMissionRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCAbandonMissionRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCAbandonMissionRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCAbandonMissionRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GCAbandonMissionRsp::ret() const {
  return ret_;
}
inline void GCAbandonMissionRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CGSubmitMissionReq

// optional uint32 missionId = 1;
inline bool CGSubmitMissionReq::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGSubmitMissionReq::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGSubmitMissionReq::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGSubmitMissionReq::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CGSubmitMissionReq::missionid() const {
  return missionid_;
}
inline void CGSubmitMissionReq::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint32 index = 2;
inline bool CGSubmitMissionReq::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGSubmitMissionReq::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGSubmitMissionReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGSubmitMissionReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CGSubmitMissionReq::index() const {
  return index_;
}
inline void CGSubmitMissionReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// GCSubmitMissionRsp

// optional uint32 missionId = 1;
inline bool GCSubmitMissionRsp::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GCSubmitMissionRsp::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GCSubmitMissionRsp::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GCSubmitMissionRsp::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 GCSubmitMissionRsp::missionid() const {
  return missionid_;
}
inline void GCSubmitMissionRsp::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint32 ret = 2;
inline bool GCSubmitMissionRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCSubmitMissionRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCSubmitMissionRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCSubmitMissionRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 GCSubmitMissionRsp::ret() const {
  return ret_;
}
inline void GCSubmitMissionRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GCUpdateMissionStatusNotify

// repeated .ProtoBuf.CMissionTrack updateList = 1;
inline int GCUpdateMissionStatusNotify::updatelist_size() const {
  return updatelist_.size();
}
inline void GCUpdateMissionStatusNotify::clear_updatelist() {
  updatelist_.Clear();
}
inline const ::ProtoBuf::CMissionTrack& GCUpdateMissionStatusNotify::updatelist(int index) const {
  return updatelist_.Get(index);
}
inline ::ProtoBuf::CMissionTrack* GCUpdateMissionStatusNotify::mutable_updatelist(int index) {
  return updatelist_.Mutable(index);
}
inline ::ProtoBuf::CMissionTrack* GCUpdateMissionStatusNotify::add_updatelist() {
  return updatelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >&
GCUpdateMissionStatusNotify::updatelist() const {
  return updatelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >*
GCUpdateMissionStatusNotify::mutable_updatelist() {
  return &updatelist_;
}

// -------------------------------------------------------------------

// GCUpdateAcceptableListNotify

// repeated uint32 acceptableList = 1;
inline int GCUpdateAcceptableListNotify::acceptablelist_size() const {
  return acceptablelist_.size();
}
inline void GCUpdateAcceptableListNotify::clear_acceptablelist() {
  acceptablelist_.Clear();
}
inline ::google::protobuf::uint32 GCUpdateAcceptableListNotify::acceptablelist(int index) const {
  return acceptablelist_.Get(index);
}
inline void GCUpdateAcceptableListNotify::set_acceptablelist(int index, ::google::protobuf::uint32 value) {
  acceptablelist_.Set(index, value);
}
inline void GCUpdateAcceptableListNotify::add_acceptablelist(::google::protobuf::uint32 value) {
  acceptablelist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCUpdateAcceptableListNotify::acceptablelist() const {
  return acceptablelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCUpdateAcceptableListNotify::mutable_acceptablelist() {
  return &acceptablelist_;
}

// -------------------------------------------------------------------

// GCReceiveMissionNotify

// repeated .ProtoBuf.CMissionTrack receiveList = 1;
inline int GCReceiveMissionNotify::receivelist_size() const {
  return receivelist_.size();
}
inline void GCReceiveMissionNotify::clear_receivelist() {
  receivelist_.Clear();
}
inline const ::ProtoBuf::CMissionTrack& GCReceiveMissionNotify::receivelist(int index) const {
  return receivelist_.Get(index);
}
inline ::ProtoBuf::CMissionTrack* GCReceiveMissionNotify::mutable_receivelist(int index) {
  return receivelist_.Mutable(index);
}
inline ::ProtoBuf::CMissionTrack* GCReceiveMissionNotify::add_receivelist() {
  return receivelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >&
GCReceiveMissionNotify::receivelist() const {
  return receivelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CMissionTrack >*
GCReceiveMissionNotify::mutable_receivelist() {
  return &receivelist_;
}

// -------------------------------------------------------------------

// GCDeleteMissionNotify

// repeated uint32 missionId = 1;
inline int GCDeleteMissionNotify::missionid_size() const {
  return missionid_.size();
}
inline void GCDeleteMissionNotify::clear_missionid() {
  missionid_.Clear();
}
inline ::google::protobuf::uint32 GCDeleteMissionNotify::missionid(int index) const {
  return missionid_.Get(index);
}
inline void GCDeleteMissionNotify::set_missionid(int index, ::google::protobuf::uint32 value) {
  missionid_.Set(index, value);
}
inline void GCDeleteMissionNotify::add_missionid(::google::protobuf::uint32 value) {
  missionid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCDeleteMissionNotify::missionid() const {
  return missionid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCDeleteMissionNotify::mutable_missionid() {
  return &missionid_;
}

// -------------------------------------------------------------------

// CGTalkWithNpcReq

// optional uint32 npcId = 1;
inline bool CGTalkWithNpcReq::has_npcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGTalkWithNpcReq::set_has_npcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGTalkWithNpcReq::clear_has_npcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGTalkWithNpcReq::clear_npcid() {
  npcid_ = 0u;
  clear_has_npcid();
}
inline ::google::protobuf::uint32 CGTalkWithNpcReq::npcid() const {
  return npcid_;
}
inline void CGTalkWithNpcReq::set_npcid(::google::protobuf::uint32 value) {
  set_has_npcid();
  npcid_ = value;
}

// optional uint32 missionId = 2;
inline bool CGTalkWithNpcReq::has_missionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGTalkWithNpcReq::set_has_missionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGTalkWithNpcReq::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGTalkWithNpcReq::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CGTalkWithNpcReq::missionid() const {
  return missionid_;
}
inline void CGTalkWithNpcReq::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// CGGetCampMissionInfoReq

// -------------------------------------------------------------------

// CampMissionInfo

// optional uint32 missionId = 1;
inline bool CampMissionInfo::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CampMissionInfo::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CampMissionInfo::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CampMissionInfo::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CampMissionInfo::missionid() const {
  return missionid_;
}
inline void CampMissionInfo::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// optional uint32 quality = 2;
inline bool CampMissionInfo::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CampMissionInfo::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CampMissionInfo::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CampMissionInfo::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 CampMissionInfo::quality() const {
  return quality_;
}
inline void CampMissionInfo::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// optional bool isAccept = 3;
inline bool CampMissionInfo::has_isaccept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CampMissionInfo::set_has_isaccept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CampMissionInfo::clear_has_isaccept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CampMissionInfo::clear_isaccept() {
  isaccept_ = false;
  clear_has_isaccept();
}
inline bool CampMissionInfo::isaccept() const {
  return isaccept_;
}
inline void CampMissionInfo::set_isaccept(bool value) {
  set_has_isaccept();
  isaccept_ = value;
}

// -------------------------------------------------------------------

// GCGetCampMissionInfoRsp

// repeated .ProtoBuf.CampMissionInfo missionInfoList = 1;
inline int GCGetCampMissionInfoRsp::missioninfolist_size() const {
  return missioninfolist_.size();
}
inline void GCGetCampMissionInfoRsp::clear_missioninfolist() {
  missioninfolist_.Clear();
}
inline const ::ProtoBuf::CampMissionInfo& GCGetCampMissionInfoRsp::missioninfolist(int index) const {
  return missioninfolist_.Get(index);
}
inline ::ProtoBuf::CampMissionInfo* GCGetCampMissionInfoRsp::mutable_missioninfolist(int index) {
  return missioninfolist_.Mutable(index);
}
inline ::ProtoBuf::CampMissionInfo* GCGetCampMissionInfoRsp::add_missioninfolist() {
  return missioninfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CampMissionInfo >&
GCGetCampMissionInfoRsp::missioninfolist() const {
  return missioninfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoBuf::CampMissionInfo >*
GCGetCampMissionInfoRsp::mutable_missioninfolist() {
  return &missioninfolist_;
}

// optional uint32 times = 2;
inline bool GCGetCampMissionInfoRsp::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GCGetCampMissionInfoRsp::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GCGetCampMissionInfoRsp::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GCGetCampMissionInfoRsp::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 GCGetCampMissionInfoRsp::times() const {
  return times_;
}
inline void GCGetCampMissionInfoRsp::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
}

// optional uint32 boxPorgress = 3;
inline bool GCGetCampMissionInfoRsp::has_boxporgress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GCGetCampMissionInfoRsp::set_has_boxporgress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GCGetCampMissionInfoRsp::clear_has_boxporgress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GCGetCampMissionInfoRsp::clear_boxporgress() {
  boxporgress_ = 0u;
  clear_has_boxporgress();
}
inline ::google::protobuf::uint32 GCGetCampMissionInfoRsp::boxporgress() const {
  return boxporgress_;
}
inline void GCGetCampMissionInfoRsp::set_boxporgress(::google::protobuf::uint32 value) {
  set_has_boxporgress();
  boxporgress_ = value;
}

// -------------------------------------------------------------------

// CGDiceCampMissionReq

// optional bool isNormal = 1;
inline bool CGDiceCampMissionReq::has_isnormal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGDiceCampMissionReq::set_has_isnormal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGDiceCampMissionReq::clear_has_isnormal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGDiceCampMissionReq::clear_isnormal() {
  isnormal_ = false;
  clear_has_isnormal();
}
inline bool CGDiceCampMissionReq::isnormal() const {
  return isnormal_;
}
inline void CGDiceCampMissionReq::set_isnormal(bool value) {
  set_has_isnormal();
  isnormal_ = value;
}

// optional uint32 missionId = 2;
inline bool CGDiceCampMissionReq::has_missionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGDiceCampMissionReq::set_has_missionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGDiceCampMissionReq::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGDiceCampMissionReq::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CGDiceCampMissionReq::missionid() const {
  return missionid_;
}
inline void CGDiceCampMissionReq::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// CGDiceCampMissionRsp

// optional uint32 ret = 1;
inline bool CGDiceCampMissionRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGDiceCampMissionRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGDiceCampMissionRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGDiceCampMissionRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CGDiceCampMissionRsp::ret() const {
  return ret_;
}
inline void CGDiceCampMissionRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 missionId = 2;
inline bool CGDiceCampMissionRsp::has_missionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGDiceCampMissionRsp::set_has_missionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGDiceCampMissionRsp::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGDiceCampMissionRsp::clear_missionid() {
  missionid_ = 0u;
  clear_has_missionid();
}
inline ::google::protobuf::uint32 CGDiceCampMissionRsp::missionid() const {
  return missionid_;
}
inline void CGDiceCampMissionRsp::set_missionid(::google::protobuf::uint32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// CGGetCampBoxRewardReq

// -------------------------------------------------------------------

// CGGetCampBoxRewardRsp

// optional uint32 ret = 1;
inline bool CGGetCampBoxRewardRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGGetCampBoxRewardRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGGetCampBoxRewardRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGGetCampBoxRewardRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CGGetCampBoxRewardRsp::ret() const {
  return ret_;
}
inline void CGGetCampBoxRewardRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoBuffer_2fMission_2eproto__INCLUDED
